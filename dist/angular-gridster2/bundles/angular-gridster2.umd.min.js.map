{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-gridster2/lib/gridsterConfig.interface.ts","ng://angular-gridster2/lib/gridsterConfig.constant.ts","ng://angular-gridster2/lib/gridsterUtils.service.ts","ng://angular-gridster2/lib/gridster.interface.ts","ng://angular-gridster2/lib/gridsterEmptyCell.service.ts","ng://angular-gridster2/lib/gridsterCompact.service.ts","ng://angular-gridster2/lib/gridsterRenderer.service.ts","ng://angular-gridster2/lib/gridster.component.ts","ng://angular-gridster2/lib/gridsterItemComponent.interface.ts","ng://angular-gridster2/lib/gridsterSwap.service.ts","ng://angular-gridster2/lib/gridsterScroll.service.ts","ng://angular-gridster2/lib/gridsterPush.service.ts","ng://angular-gridster2/lib/gridsterDraggable.service.ts","ng://angular-gridster2/lib/gridsterPushResize.service.ts","ng://angular-gridster2/lib/gridsterResizable.service.ts","ng://angular-gridster2/lib/gridsterItem.component.ts","ng://angular-gridster2/lib/gridsterPreview.component.ts","ng://angular-gridster2/lib/gridster.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","Fit","ScrollVertical","ScrollHorizontal","Fixed","VerticalFixed","HorizontalFixed","Always","OnDragAndResize","None","CompactUp","CompactLeft","CompactUpAndLeft","CompactLeftAndUp","CompactRight","CompactUpAndRight","CompactRightAndUp","GridsterConfigService","gridType","GridType","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","setGridSize","compactType","CompactType","mobileBreakpoint","minCols","maxCols","minRows","maxRows","defaultItemCols","defaultItemRows","maxItemCols","maxItemRows","minItemCols","minItemRows","minItemArea","maxItemArea","margin","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","scrollSensitivity","scrollSpeed","initCallback","undefined","destroyCallback","gridSizeChangedCallback","itemChangeCallback","itemResizeCallback","itemInitCallback","itemRemovedCallback","itemValidateCallback","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","enableOccupiedCellDrop","emptyCellClickCallback","emptyCellContextMenuCallback","emptyCellDropCallback","emptyCellDragCallback","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","delayStart","enabled","ignoreContentClass","ignoreContent","dragHandleClass","stop","start","dropOverItems","dropOverItemsCallback","resizable","handles","e","w","se","ne","sw","nw","swap","swapWhileDragging","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","DisplayGrid","disableWindowResize","disableWarnings","scrollToNewItems","disableScrollHorizontal","disableScrollVertical","disableAutoPositionOnConflict","GridsterUtils","merge","obj1","obj2","properties","debounce","func","wait","timeout","context","args","later","clearTimeout","setTimeout","checkTouchEvent","clientX","touches","clientY","changedTouches","checkContentClassForEvent","gridster","$options","checkContentClass","target","currentTarget","checkContentClassForEmptyCellClickEvent","current","contentClass","hasAttribute","getAttribute","split","indexOf","parentNode","compareItems","a","b","y","x","Injectable","GridsterEmptyCell","destroy","initialItem","movingItem","previewStyle","emptyCellExit","updateOptions","_this","emptyCellClick","options","renderer","listen","el","emptyCellClickCb","bind","emptyCellClickTouch","emptyCellContextMenu","emptyCellContextMenuCb","emptyCellDrop","emptyCellDragDrop","zone","runOutsideAngular","emptyCellMove","emptyCellDragOver","emptyCellDrag","emptyCellMouseDown","emptyCellDragTouch","item","getValidItemFromEvent","cdRef","markForCheck","dataTransfer","dropEffect","buttons","emptyCellMMove","emptyCellMouseMove","emptyCellMMoveTouch","emptyCellUp","emptyCellMouseUp","emptyCellUpTouch","oldItem","rect","getBoundingClientRect","scrollLeft","left","scrollTop","top","pixelsToPositionX","Math","floor","pixelsToPositionY","cols","rows","min","abs","checkCollision","GridsterComponentInterface","GridsterCompact","checkCompact","checkCompactUp","checkCompactLeft","checkCompactRight","checkCompactItem","moveUpTillCollision","moveLeftTillCollision","moveRightTillCollision","widget","widgetMovedUp","l","grid","$item","compactEnabled","itemChanged","GridsterRenderer","updateItem","mobile","clearCellPosition","setStyle","curWidth","round","curColWidth","curRowHeight","width","height","setCellPosition","marginBottom","marginRight","columns","updateGridster","addClass","removeClass1","removeClass2","removeClass3","removeClass","getGridColumnStyle","getLeftPosition","gridRows","getGridRowStyle","getTopPosition","gridColumns","d","transform","getLeftMargin","getTopMargin","GridsterComponent","nativeElement","JSON","parse","stringify","calculateLayoutDebounce","calculateLayout","curHeight","dragInProgress","emptyCell","compact","gridRenderer","checkCollisionTwoItems","item2","ngOnInit","ngOnChanges","changes","setOptions","api","optionsChanged","resize","onResize","getNextPossiblePosition","getFirstPossiblePosition","getLastPossiblePosition","clientWidth","clientHeight","offsetWidth","offsetHeight","checkIfToResize","windowResize","widgetsIndex","ngOnDestroy","scrollWidth","scrollHeight","setGridDimensions","notPlaced","max","marginWidth","marginHeight","updateGrid","setSize","drag","toggle","addItem","itemComponent","autoPositionItem","console","warn","push","removeItem","splice","collision","checkGridCollision","c","findItemWithItem","noNegativePosition","maxGridCols","maxGridRows","inColsLimits","inRowsLimits","minAreaLimit","maxAreaLimit","area","findItemsWithItem","newItem","startingFrom","colsIndex","rowsIndex","canAddToRows","canAddToColumns","tmpItem","farthestItem","reduce","prev","curr","currCoords","roundingMethod","noLimit","position","positionXToPixels","positionYToPixels","checkCollisionTwoItemsForSwaping","horizontalBoundaryItem1","horizontalBoundaryItem2","verticalBoundaryItem1","verticalBoundaryItem2","checkCollisionForSwaping","findItemWithItemForSwaping","Component","selector","template","encapsulation","ViewEncapsulation","ElementRef","decorators","type","Inject","Renderer2","ChangeDetectorRef","NgZone","Input","GridsterSwap","gridsterItem","swapedItem","swapItems","checkSwapBack","checkSwap","restoreSwapItem","setSwapItem","checkItemChanges","pushedBy","gridsterItemCollision","canBeDragged","gridsterItemCollide","copyCollisionX","copyCollisionY","copyX","copyY","GridsterItemComponentInterface","gridsterElement","resizeEvent","resizeEventType","intervalE","intervalW","intervalN","intervalS","intervalDuration","scroll","lastMouse","calculateItemPosition","resizeEventScrollType","offsetLeft","offsetTop","elemTopOffset","elemBottomOffset","cancelN","startVertical","cancelS","cancelVertical","elemRightOffset","elemLeftOffset","cancelW","startHorizontal","cancelE","cancelHorizontal","sign","setInterval","cancelScroll","clearInterval","GridsterPush","pushedItems","pushedItemsTemp","pushedItemsTempPath","pushedItemsPath","generateTempRandomId","tryPattern","fromEast","tryWest","trySouth","tryNorth","tryEast","fromWest","fromNorth","fromSouth","direction","disable","pushedItemsOrder","pushed","restoreTempItems","cleanTempIds","removeFromTempPushed","restoreItems","pushedItem","setPushedItems","checkPushBack","change","checkPushedItem","random","toString","replace","substr","filter","forEach","itemCollision","makePush","find","lastIndexOf","j","pop","removeFromPushedItem","addToTempPushed","addToPushed","tempPosition","removeFromPushed","lastPosition","path","GridsterDraggable","mousedown","touchstart","dragStart","which","stopPropagation","preventDefault","dragFunction","dragMove","dragStopFunction","dragStop","mousemove","touchmove","mouseup","mouseleave","cancelOnBlur","touchend","touchcancel","diffLeft","diffTop","calculateItemPositionFromMousePosition","run","Promise","resolve","then","makeDrag","cancelDrag","positionX","positionY","positionXBackup","positionYBackup","enableDrag","dragStartFunction","dragStartDelay","cancelMouse","cancelMouseLeave","cancelTouchMove","eventMove","cancelTouchEnd","cancelTouchCancel","GridsterPushResize","row","canBeResized","backUpY","backUpRows","backUpX","backUpCols","GridsterResizable","itemBackup","bottom","right","diffRight","diffBottom","minHeight","minWidth","pushResize","directionFunction","handleN","handleW","handleS","handleE","handleNW","handleNE","handleSW","handleSE","makeResize","cancelResize","newPosition","setItemTop","setItemHeight","setItemLeft","setItemWidth","ceil","resizeEnabled","GridsterItemComponent","dragEnabled","updateItemSize","init","scrollIntoView","newValue","oldValue","GridsterPreviewComponent","GridsterModule","NgModule","declarations","imports","CommonModule","exports","providers","bootstrap","entryComponents"],"mappings":"qVA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,mBCpB9BQ,IAAM,MACNC,eAAiB,iBACjBC,iBAAmB,mBACnBC,MAAQ,QACRC,cAAgB,gBAChBC,gBAAkB,sBAIlBC,OAAS,SACTC,gBAAkB,gBAClBC,KAAO,WAIPA,KAAO,OACPC,UAAY,YACZC,YAAc,cACdC,iBAAmB,iBACnBC,iBAAmB,iBACnBC,aAAe,eACfC,kBAAoB,kBACpBC,kBAAoB,mBCrCtB,IAAaC,EAAwC,CACnDC,SAAUC,EAASlB,IAMnBmB,cAAe,IACfC,eAAgB,IAChBC,yBAAyB,EACzBC,wBAAwB,EACxBC,aAAa,EACbC,YAAaC,EAAYjB,KACzBkB,iBAAkB,IAClBC,QAAS,EACTC,QAAS,IACTC,QAAS,EACTC,QAAS,IACTC,gBAAiB,EACjBC,gBAAiB,EACjBC,YAAa,GACbC,YAAa,GACbC,YAAa,EACbC,YAAa,EACbC,YAAa,EACbC,YAAa,KACbC,OAAQ,GACRC,aAAa,EACbC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBC,gBAAiB,KACjBC,yBAAyB,EACzBC,kBAAmB,GACnBC,YAAa,GACbC,kBAAcC,EACdC,qBAAiBD,EACjBE,6BAAyBF,EACzBG,wBAAoBH,EAEpBI,wBAAoBJ,EAEpBK,sBAAkBL,EAElBM,yBAAqBN,EAErBO,0BAAsBP,EAEtBQ,sBAAsB,EACtBC,4BAA4B,EAC5BC,qBAAqB,EACrBC,qBAAqB,EACrBC,wBAAwB,EACxBC,4BAAwBb,EACxBc,kCAA8Bd,EAC9Be,2BAAuBf,EACvBgB,2BAAuBhB,EACvBiB,qBAAsB,GACtBC,qBAAsB,GAEtBC,mBAAmB,EACnBC,UAAW,CACTC,WAAY,EACZC,SAAS,EACTC,mBAAoB,wBACpBC,eAAe,EACfC,gBAAiB,eACjBC,UAAM1B,EACN2B,WAAO3B,EAEP4B,eAAe,EACfC,2BAAuB7B,GAGzB8B,UAAW,CACTT,WAAY,EACZC,SAAS,EACTS,QAAS,CACP3F,GAAG,EACH4F,GAAG,EACH1F,GAAG,EACH2F,GAAG,EACHC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,GAENX,UAAM1B,EACN2B,WAAO3B,GAGTsC,MAAM,EACNC,mBAAmB,EACnBC,WAAW,EACXC,mBAAmB,EACnBC,qBAAqB,EACrBC,eAAgB,CAACC,OAAO,EAAMC,MAAM,EAAMC,OAAO,EAAMC,MAAM,GAC7DC,iBAAiB,EACjBC,YAAaC,EAAY5F,gBACzB6F,qBAAqB,EACrBC,iBAAiB,EACjBC,kBAAkB,EAClBC,yBAAyB,EACzBC,uBAAuB,EACvBC,+BAA+B,GC1GjCC,EAAA,WAIA,SAAAA,KAkFA,OA/ESA,EAAAC,MAAP,SAAaC,EAAWC,EAAWC,GACjC,IAAK,IAAMpH,KAAKmH,OACE,IAAZA,EAAKnH,IAAiBoH,EAAWlH,eAAeF,KAC3B,iBAAZmH,EAAKnH,GACdkH,EAAKlH,GAAKgH,EAAcC,MAAMC,EAAKlH,GAAImH,EAAKnH,GAAIoH,EAAWpH,IAE3DkH,EAAKlH,GAAKmH,EAAKnH,IAKrB,OAAOkH,GAGFF,EAAAK,SAAP,SAAgBC,EAAgBC,OAC1BC,EACJ,OAAA,eACQC,EAAUpH,KAAMqH,EAAO5H,UACvB6H,EAAK,WACTH,EAAU,KACVF,EAAKlH,MAAMqH,EAASC,IAEtBE,aAAaJ,GACbA,EAAUK,WAAWF,EAAOJ,KAIzBP,EAAAc,gBAAP,SAAuBvC,QACHhC,IAAdgC,EAAEwC,SAAyBxC,EAAEyC,UAC3BzC,EAAEyC,SAAWzC,EAAEyC,QAAQjI,QACzBwF,EAAEwC,QAAUxC,EAAEyC,QAAQ,GAAGD,QACzBxC,EAAE0C,QAAU1C,EAAEyC,QAAQ,GAAGC,SAChB1C,EAAE2C,gBAAkB3C,EAAE2C,eAAenI,SAC9CwF,EAAEwC,QAAUxC,EAAE2C,eAAe,GAAGH,QAChCxC,EAAE0C,QAAU1C,EAAE2C,eAAe,GAAGD,WAK/BjB,EAAAmB,0BAAP,SAAiCC,EAAsC7C,GACrE,GAAI6C,EAASC,SAAS1D,UAAUI,eAC9B,IAAKiC,EAAcsB,kBAAkB/C,EAAEgD,OAAQhD,EAAEiD,cAAeJ,EAASC,SAAS1D,UAAUK,iBAC1F,OAAO,OAGT,GAAIgC,EAAcsB,kBAAkB/C,EAAEgD,OAAQhD,EAAEiD,cAAeJ,EAASC,SAAS1D,UAAUG,oBACzF,OAAO,EAGX,OAAO,GAGFkC,EAAAyB,wCAAP,SAA+CL,EAAsC7C,GACnF,OAAOyB,EAAcsB,kBAAkB/C,EAAEgD,OAAQhD,EAAEiD,cAAeJ,EAASC,SAAS1D,UAAUG,qBACzFkC,EAAcsB,kBAAkB/C,EAAEgD,OAAQhD,EAAEiD,cAAeJ,EAASC,SAAS1D,UAAUK,kBAGvFgC,EAAAsB,kBAAP,SAAyBC,EAAaG,EAAcC,GAClD,SAAKJ,GAAUA,IAAWG,QAGtBH,EAAOK,aAAa,UAAYL,EAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQJ,IAAiB,IAG5F3B,EAAcsB,kBAAkBC,EAAOS,WAAYN,EAASC,KAIhE3B,EAAAiC,aAAP,SAAoBC,EAA6BC,GAC/C,OAAID,EAAEE,EAAID,EAAEC,GACF,EACCF,EAAEE,EAAID,EAAEC,EACV,EACEF,EAAEG,EAAIF,EAAEE,GACT,EAED,uBA/EZC,EAAAA,aAkFDtC,EAtFA,KCSA,aCTA,IAAAuC,EAAA,WAsBE,SAAAA,EAAoBnB,GAAA/H,KAAA+H,SAAAA,EAkMtB,OA/LEmB,EAAAtJ,UAAAuJ,QAAA,kBACSnJ,KAAKoJ,mBACLpJ,KAAK+H,SAASsB,WACjBrJ,KAAK+H,SAASuB,cAChBtJ,KAAK+H,SAASuB,sBAETtJ,KAAK+H,SACR/H,KAAKuJ,gBACPvJ,KAAKuJ,gBACLvJ,KAAKuJ,cAAgB,OAIzBL,EAAAtJ,UAAA4J,cAAA,WAAA,IAAAC,EAAAzJ,KACMA,KAAK+H,SAASC,SAAStE,uBAAyB1D,KAAK0J,gBAAkB1J,KAAK+H,SAAS4B,QAAQ5F,wBAC/F/D,KAAK0J,eAAiB1J,KAAK+H,SAAS6B,SAASC,OAAO7J,KAAK+H,SAAS+B,GAAI,QAAS9J,KAAK+J,iBAAiBC,KAAKhK,OAC1GA,KAAKiK,oBAAsBjK,KAAK+H,SAAS6B,SAASC,OAAO7J,KAAK+H,SAAS+B,GAAI,WAAY9J,KAAK+J,iBAAiBC,KAAKhK,SACxGA,KAAK+H,SAASC,SAAStE,sBAAwB1D,KAAK0J,gBAAkB1J,KAAKiK,sBACrFjK,KAAK0J,iBACL1J,KAAKiK,sBACLjK,KAAK0J,eAAiB,KACtB1J,KAAKiK,oBAAsB,MAEzBjK,KAAK+H,SAASC,SAASrE,6BAA+B3D,KAAKkK,sBAC7DlK,KAAK+H,SAAS4B,QAAQ3F,6BACtBhE,KAAKkK,qBAAuBlK,KAAK+H,SAAS6B,SAASC,OAAO7J,KAAK+H,SAAS+B,GAAI,cAAe9J,KAAKmK,uBAAuBH,KAAKhK,QAClHA,KAAK+H,SAASC,SAASrE,4BAA8B3D,KAAKkK,uBACpElK,KAAKkK,uBACLlK,KAAKkK,qBAAuB,MAE1BlK,KAAK+H,SAASC,SAASpE,sBAAwB5D,KAAKoK,eAAiBpK,KAAK+H,SAAS4B,QAAQ1F,uBAC7FjE,KAAKoK,cAAgBpK,KAAK+H,SAAS6B,SAASC,OAAO7J,KAAK+H,SAAS+B,GAAI,OAAQ9J,KAAKqK,kBAAkBL,KAAKhK,OACzGA,KAAK+H,SAASuC,KAAKC,kBAAiB,WAClCd,EAAKe,cAAgBf,EAAK1B,SAAS6B,SAASC,OAAOJ,EAAK1B,SAAS+B,GAAI,WAAYL,EAAKgB,kBAAkBT,KAAKP,MAE/GzJ,KAAKuJ,cAAgBvJ,KAAK+H,SAAS6B,SAASC,OAAO,WAAY,UAAS,WACtEJ,EAAK1B,SAASsB,WAAa,KAC3BI,EAAK1B,SAASuB,mBAENtJ,KAAK+H,SAASC,SAASpE,qBAAuB5D,KAAKoK,eAAiBpK,KAAKwK,eAAiBxK,KAAKuJ,gBACzGvJ,KAAKoK,gBACLpK,KAAKwK,gBACLxK,KAAKuJ,gBACLvJ,KAAKwK,cAAgB,KACrBxK,KAAKoK,cAAgB,KACrBpK,KAAKuJ,cAAgB,MAEnBvJ,KAAK+H,SAASC,SAASnE,sBAAwB7D,KAAK0K,eAAiB1K,KAAK+H,SAAS4B,QAAQzF,uBAC7FlE,KAAK0K,cAAgB1K,KAAK+H,SAAS6B,SAASC,OAAO7J,KAAK+H,SAAS+B,GAAI,YAAa9J,KAAK2K,mBAAmBX,KAAKhK,OAC/GA,KAAK4K,mBAAqB5K,KAAK+H,SAAS6B,SAASC,OAAO7J,KAAK+H,SAAS+B,GAAI,aAAc9J,KAAK2K,mBAAmBX,KAAKhK,SAC3GA,KAAK+H,SAASC,SAASnE,qBAAuB7D,KAAK0K,eAAiB1K,KAAK4K,qBACnF5K,KAAK0K,gBACL1K,KAAK4K,qBACL5K,KAAK0K,cAAgB,KACrB1K,KAAK4K,mBAAqB,OAI9B1B,EAAAtJ,UAAAmK,iBAAA,SAAiB7E,GACf,IAAIlF,KAAK+H,SAASsB,aAAc1C,EAAcyB,wCAAwCpI,KAAK+H,SAAU7C,GAArG,KAGM2F,EAAO7K,KAAK8K,sBAAsB5F,GACnC2F,IAGD7K,KAAK+H,SAAS4B,QAAQ5F,wBACxB/D,KAAK+H,SAAS4B,QAAQ5F,uBAAuBmB,EAAG2F,GAElD7K,KAAK+H,SAASgD,MAAMC,kBAGtB9B,EAAAtJ,UAAAuK,uBAAA,SAAuBjF,GACrB,IAAIlF,KAAK+H,SAASsB,aAAc1C,EAAcyB,wCAAwCpI,KAAK+H,SAAU7C,GAArG,KAGM2F,EAAO7K,KAAK8K,sBAAsB5F,GACnC2F,IAGD7K,KAAK+H,SAAS4B,QAAQ3F,8BACxBhE,KAAK+H,SAAS4B,QAAQ3F,6BAA6BkB,EAAG2F,GAExD7K,KAAK+H,SAASgD,MAAMC,kBAGtB9B,EAAAtJ,UAAAyK,kBAAA,SAAkBnF,OACV2F,EAAO7K,KAAK8K,sBAAsB5F,GACnC2F,IAGD7K,KAAK+H,SAAS4B,QAAQ1F,uBACxBjE,KAAK+H,SAAS4B,QAAQ1F,sBAAsBiB,EAAG2F,GAEjD7K,KAAK+H,SAASgD,MAAMC,iBAGtB9B,EAAAtJ,UAAA6K,kBAAA,SAAkBvF,OACV2F,EAAO7K,KAAK8K,sBAAsB5F,GACpC2F,GACF3F,EAAE+F,aAAaC,WAAa,OAC5BlL,KAAK+H,SAASsB,WAAawB,IAE3B3F,EAAE+F,aAAaC,WAAa,OAC5BlL,KAAK+H,SAASsB,WAAa,MAE7BrJ,KAAK+H,SAASuB,gBAGhBJ,EAAAtJ,UAAA+K,mBAAA,SAAmBzF,GAAnB,IAAAuE,EAAAzJ,KACE,IAAI2G,EAAcyB,wCAAwCpI,KAAK+H,SAAU7C,GAAzE,KAGM2F,EAAO7K,KAAK8K,sBAAsB5F,GAEnC2F,GADuB,IACf3F,EAAEiG,UAGfnL,KAAKoJ,YAAcyB,EACnB7K,KAAK+H,SAASsB,WAAawB,EAC3B7K,KAAK+H,SAASuB,eACdtJ,KAAK+H,SAASuC,KAAKC,kBAAiB,WAClCd,EAAK2B,eAAiB3B,EAAK1B,SAAS6B,SAASC,OAAO,SAAU,YAAaJ,EAAK4B,mBAAmBrB,KAAKP,IACxGA,EAAK6B,oBAAsB7B,EAAK1B,SAAS6B,SAASC,OAAO,SAAU,YAAaJ,EAAK4B,mBAAmBrB,KAAKP,MAE/GzJ,KAAKuL,YAAcvL,KAAK+H,SAAS6B,SAASC,OAAO,SAAU,UAAW7J,KAAKwL,iBAAiBxB,KAAKhK,OACjGA,KAAKyL,iBAAmBzL,KAAK+H,SAAS6B,SAASC,OAAO,SAAU,WAAY7J,KAAKwL,iBAAiBxB,KAAKhK,UAGzGkJ,EAAAtJ,UAAAyL,mBAAA,SAAmBnG,OACX2F,EAAO7K,KAAK8K,sBAAsB5F,EAAGlF,KAAKoJ,aAC3CyB,IAIL7K,KAAK+H,SAASsB,WAAawB,EAC3B7K,KAAK+H,SAASuB,iBAGhBJ,EAAAtJ,UAAA4L,iBAAA,SAAiBtG,GAAjB,IAAAuE,EAAAzJ,KACEA,KAAKoL,iBACLpL,KAAKsL,sBACLtL,KAAKuL,cACLvL,KAAKyL,uBACCZ,EAAO7K,KAAK8K,sBAAsB5F,EAAGlF,KAAKoJ,aAC5CyB,IACF7K,KAAK+H,SAASsB,WAAawB,GAEzB7K,KAAK+H,SAAS4B,QAAQzF,uBAAyBlE,KAAK+H,SAASsB,YAC/DrJ,KAAK+H,SAAS4B,QAAQzF,sBAAsBgB,EAAGlF,KAAK+H,SAASsB,YAE/D7B,WAAU,WACRiC,EAAKL,YAAc,KACfK,EAAK1B,WACP0B,EAAK1B,SAASsB,WAAa,KAC3BI,EAAK1B,SAASuB,kBAGlBtJ,KAAK+H,SAASgD,MAAMC,gBAGtB9B,EAAAtJ,UAAAkL,sBAAA,SAAsB5F,EAAQwG,GAC5B/E,EAAcc,gBAAgBvC,OACxByG,EAAO3L,KAAK+H,SAAS+B,GAAG8B,wBACxB5C,EAAI9D,EAAEwC,QAAU1H,KAAK+H,SAAS+B,GAAG+B,WAAaF,EAAKG,KAAO9L,KAAK+H,SAASC,SAASxF,OACjFuG,EAAI7D,EAAE0C,QAAU5H,KAAK+H,SAAS+B,GAAGiC,UAAYJ,EAAKK,IAAMhM,KAAK+H,SAASC,SAASxF,OAC/EqI,EAAqB,CACzB7B,EAAGhJ,KAAK+H,SAASkE,kBAAkBjD,EAAGkD,KAAKC,OAAO,GAClDpD,EAAG/I,KAAK+H,SAASqE,kBAAkBrD,EAAGmD,KAAKC,OAAO,GAClDE,KAAMrM,KAAK+H,SAASC,SAAShG,gBAC7BsK,KAAMtM,KAAK+H,SAASC,SAAS/F,iBAgB/B,GAdIyJ,IACFb,EAAKwB,KAAOH,KAAKK,IAAIL,KAAKM,IAAId,EAAQ1C,EAAI6B,EAAK7B,GAAK,EAAGhJ,KAAK+H,SAASC,SAAS7D,sBAC9E0G,EAAKyB,KAAOJ,KAAKK,IAAIL,KAAKM,IAAId,EAAQ3C,EAAI8B,EAAK9B,GAAK,EAAG/I,KAAK+H,SAASC,SAAS5D,sBAC1EsH,EAAQ1C,EAAI6B,EAAK7B,EACnB6B,EAAK7B,EAAI0C,EAAQ1C,EACR0C,EAAQ1C,EAAI6B,EAAK7B,EAAIhJ,KAAK+H,SAASC,SAAS7D,qBAAuB,IAC5E0G,EAAK7B,EAAIhJ,KAAK+H,SAASsB,WAAarJ,KAAK+H,SAASsB,WAAWL,EAAI,GAE/D0C,EAAQ3C,EAAI8B,EAAK9B,EACnB8B,EAAK9B,EAAI2C,EAAQ3C,EACR2C,EAAQ3C,EAAI8B,EAAK9B,EAAI/I,KAAK+H,SAASC,SAAS5D,qBAAuB,IAC5EyG,EAAK9B,EAAI/I,KAAK+H,SAASsB,WAAarJ,KAAK+H,SAASsB,WAAWN,EAAI,IAGhE/I,KAAK+H,SAASC,SAASlE,yBAA0B9D,KAAK+H,SAAS0E,eAAe5B,GAGnF,OAAOA,uBAhNV5B,EAAAA,sDAFOyD,KAoNRxD,EAxNA,GCAA,IAAAyD,EAAA,WAUE,SAAAA,EAAoB5E,GAAA/H,KAAA+H,SAAAA,EA8ItB,OA3IE4E,EAAA/M,UAAAuJ,QAAA,kBACSnJ,KAAK+H,UAGd4E,EAAA/M,UAAAgN,aAAA,WACM5M,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYjB,OACjDT,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYhB,UACrDV,KAAK6M,iBACI7M,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYf,YAC5DX,KAAK8M,mBACI9M,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYd,kBAC5DZ,KAAK6M,iBACL7M,KAAK8M,oBACI9M,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYb,kBAC5Db,KAAK8M,mBACL9M,KAAK6M,kBACI7M,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYZ,aAC5Dd,KAAK+M,oBACI/M,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYX,mBAC5Df,KAAK6M,iBACL7M,KAAK+M,qBACI/M,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYV,oBAC5DhB,KAAK+M,oBACL/M,KAAK6M,oBAKXF,EAAA/M,UAAAoN,iBAAA,SAAiBnC,GACX7K,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYjB,OACjDT,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYhB,UACrDV,KAAKiN,oBAAoBpC,GAChB7K,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYf,YAC5DX,KAAKkN,sBAAsBrC,GAClB7K,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYd,kBAC5DZ,KAAKiN,oBAAoBpC,GACzB7K,KAAKkN,sBAAsBrC,IAClB7K,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYb,kBAC5Db,KAAKkN,sBAAsBrC,GAC3B7K,KAAKiN,oBAAoBpC,IAChB7K,KAAK+H,SAASC,SAASvG,cAAgBC,EAAYX,oBAC5Df,KAAKiN,oBAAoBpC,GACzB7K,KAAKmN,uBAAuBtC,MAKlC8B,EAAA/M,UAAAiN,eAAA,WAGE,QAF2BO,EAAvBC,GAAgB,EACdC,EAAItN,KAAK+H,SAASwF,KAAK7N,OACpBH,EAAI,EAAGA,EAAI+N,EAAG/N,KAEe,KADpC6N,EAASpN,KAAK+H,SAASwF,KAAKhO,IACjBiO,MAAMC,gBAGTzN,KAAKiN,oBAAoBG,EAAOI,SAEtCH,GAAgB,EAChBD,EAAOvC,KAAK9B,EAAIqE,EAAOI,MAAMzE,EAC7BqE,EAAOM,eAGPL,GACFrN,KAAK4M,gBAITD,EAAA/M,UAAAqN,oBAAA,SAAoBpC,GAElB,OADAA,EAAK9B,GAAK,EACN/I,KAAK+H,SAAS0E,eAAe5B,IAC/BA,EAAK9B,GAAK,GACH,IAEP/I,KAAKiN,oBAAoBpC,IAClB,IAIX8B,EAAA/M,UAAAkN,iBAAA,WAGE,QAF2BM,EAAvBC,GAAgB,EACdC,EAAItN,KAAK+H,SAASwF,KAAK7N,OACpBH,EAAI,EAAGA,EAAI+N,EAAG/N,KAEe,KADpC6N,EAASpN,KAAK+H,SAASwF,KAAKhO,IACjBiO,MAAMC,gBAGTzN,KAAKkN,sBAAsBE,EAAOI,SAExCH,GAAgB,EAChBD,EAAOvC,KAAK7B,EAAIoE,EAAOI,MAAMxE,EAC7BoE,EAAOM,eAGPL,GACFrN,KAAK4M,gBAITD,EAAA/M,UAAAmN,kBAAA,WAGE,QAF2BK,EAAvBC,GAAgB,EACdC,EAAItN,KAAK+H,SAASwF,KAAK7N,OACpBH,EAAI,EAAGA,EAAI+N,EAAG/N,KAEe,KADpC6N,EAASpN,KAAK+H,SAASwF,KAAKhO,IACjBiO,MAAMC,gBAGTzN,KAAKmN,uBAAuBC,EAAOI,SAEzCH,GAAgB,EAChBD,EAAOvC,KAAK7B,EAAIoE,EAAOI,MAAMxE,EAC7BoE,EAAOM,eAGPL,GACFrN,KAAK4M,gBAITD,EAAA/M,UAAAsN,sBAAA,SAAsBrC,GAEpB,OADAA,EAAK7B,GAAK,EACNhJ,KAAK+H,SAAS0E,eAAe5B,IAC/BA,EAAK7B,GAAK,GACH,IAEPhJ,KAAKkN,sBAAsBrC,IACpB,IAIX8B,EAAA/M,UAAAuN,uBAAA,SAAuBtC,GAErB,OADAA,EAAK7B,GAAK,EACNhJ,KAAK+H,SAAS0E,eAAe5B,IAC/BA,EAAK7B,GAAK,GACH,IAEPhJ,KAAKmN,uBAAuBtC,IACrB,wBA9IZ5B,EAAAA,sDALOyD,KAsJRC,EAxJA,GCMA,IAAAgB,EAAA,WAGE,SAAAA,EAAoB5F,GAAA/H,KAAA+H,SAAAA,EAmMtB,OAhME4F,EAAA/N,UAAAuJ,QAAA,kBACSnJ,KAAK+H,UAGd4F,EAAA/N,UAAAgO,WAAA,SAAW9D,EAASe,EAAoBjB,GACtC,GAAI5J,KAAK+H,SAAS8F,OAChB7N,KAAK8N,kBAAkBlE,EAAUE,GAC7B9J,KAAK+H,SAASC,SAAS1G,wBACzBsI,EAASmE,SAASjE,EAAI,SAAWe,EAAKyB,KAAOtM,KAAK+H,SAASC,SAAS3G,eAAkB,MAEtFuI,EAASmE,SAASjE,EAAI,SAAYe,EAAKyB,KAAOtM,KAAK+H,SAASiG,SAAWnD,EAAKwB,KAAS,MAEnFrM,KAAK+H,SAASC,SAASzG,uBACzBqI,EAASmE,SAASjE,EAAI,QAAS9J,KAAK+H,SAASC,SAAS5G,cAAgB,MAEtEwI,EAASmE,SAASjE,EAAI,QAAS,IAGjCF,EAASmE,SAASjE,EAAI,gBAAiB9J,KAAK+H,SAASC,SAASxF,OAAS,MACvEoH,EAASmE,SAASjE,EAAI,eAAgB,QACjC,KACCd,EAAIkD,KAAK+B,MAAMjO,KAAK+H,SAASmG,YAAcrD,EAAK7B,GAChDD,EAAImD,KAAK+B,MAAMjO,KAAK+H,SAASoG,aAAetD,EAAK9B,GACjDqF,EAAQpO,KAAK+H,SAASmG,YAAcrD,EAAKwB,KAAOrM,KAAK+H,SAASC,SAASxF,OACvE6L,EAAUrO,KAAK+H,SAASoG,aAAetD,EAAKyB,KAAOtM,KAAK+H,SAASC,SAASxF,OAEhFxC,KAAKsO,gBAAgB1E,EAAUE,EAAId,EAAGD,GACtCa,EAASmE,SAASjE,EAAI,QAASsE,EAAQ,MACvCxE,EAASmE,SAASjE,EAAI,SAAUuE,EAAS,UACrCE,EAA8B,KAC9BC,EAA6B,KAC7BxO,KAAK+H,SAASC,SAASvF,cACrBzC,KAAK+H,SAASuE,OAASzB,EAAKyB,KAAOzB,EAAK9B,IAExCwF,EAD+C,OAA7CvO,KAAK+H,SAASC,SAASpF,kBACV5C,KAAK+H,SAASC,SAASpF,kBAAoB,KAE3C5C,KAAK+H,SAASC,SAASxF,OAAS,MAG/CxC,KAAK+H,SAAS0G,UAAY5D,EAAKwB,KAAOxB,EAAK7B,IAE3CwF,EAD+C,OAA7CxO,KAAK+H,SAASC,SAASpF,kBACX5C,KAAK+H,SAASC,SAASrF,iBAAmB,KAE1C3C,KAAK+H,SAASC,SAASxF,OAAS,OAKpDoH,EAASmE,SAASjE,EAAI,gBAAiByE,GACvC3E,EAASmE,SAASjE,EAAI,eAAgB0E,KAI1Cb,EAAA/N,UAAA8O,eAAA,eACMC,EAAW,GACXC,EAAe,GACfC,EAAe,GACfC,EAAe,GACf9O,KAAK+H,SAASC,SAAS9G,WAAaC,EAASlB,KAC/C0O,EAAWxN,EAASlB,IACpB2O,EAAezN,EAASjB,eACxB2O,EAAe1N,EAAShB,iBACxB2O,EAAe3N,EAASf,OACfJ,KAAK+H,SAASC,SAAS9G,WAAaC,EAASjB,gBACtDF,KAAK+H,SAASoG,aAAenO,KAAK+H,SAASmG,YAC3CS,EAAWxN,EAASjB,eACpB0O,EAAezN,EAASlB,IACxB4O,EAAe1N,EAAShB,iBACxB2O,EAAe3N,EAASf,OACfJ,KAAK+H,SAASC,SAAS9G,WAAaC,EAAShB,kBACtDH,KAAK+H,SAASmG,YAAclO,KAAK+H,SAASoG,aAC1CQ,EAAWxN,EAAShB,iBACpByO,EAAezN,EAASlB,IACxB4O,EAAe1N,EAASjB,eACxB4O,EAAe3N,EAASf,OACfJ,KAAK+H,SAASC,SAAS9G,WAAaC,EAASf,OACtDJ,KAAK+H,SAASmG,YAAclO,KAAK+H,SAASC,SAAS5G,eAChDpB,KAAK+H,SAASC,SAAS3D,kBAAoB,EAAIrE,KAAK+H,SAASC,SAASxF,QACzExC,KAAK+H,SAASoG,aAAenO,KAAK+H,SAASC,SAAS3G,gBACjDrB,KAAK+H,SAASC,SAAS3D,kBAAoB,EAAIrE,KAAK+H,SAASC,SAASxF,QACzEmM,EAAWxN,EAASf,MACpBwO,EAAezN,EAASlB,IACxB4O,EAAe1N,EAASjB,eACxB4O,EAAe3N,EAAShB,kBACfH,KAAK+H,SAASC,SAAS9G,WAAaC,EAASd,eACtDL,KAAK+H,SAASoG,aAAenO,KAAK+H,SAASC,SAAS3G,gBACjDrB,KAAK+H,SAASC,SAAS3D,kBAAoB,EAAIrE,KAAK+H,SAASC,SAASxF,QACzEmM,EAAWxN,EAASjB,eACpB0O,EAAezN,EAASlB,IACxB4O,EAAe1N,EAAShB,iBACxB2O,EAAe3N,EAASf,OACfJ,KAAK+H,SAASC,SAAS9G,WAAaC,EAASb,kBACtDN,KAAK+H,SAASmG,YAAclO,KAAK+H,SAASC,SAAS5G,eAChDpB,KAAK+H,SAASC,SAAS3D,kBAAoB,EAAIrE,KAAK+H,SAASC,SAASxF,QACzEmM,EAAWxN,EAAShB,iBACpByO,EAAezN,EAASlB,IACxB4O,EAAe1N,EAASjB,eACxB4O,EAAe3N,EAASf,OAGtBJ,KAAK+H,SAAS8F,OAChB7N,KAAK+H,SAAS6B,SAASmF,YAAY/O,KAAK+H,SAAS+B,GAAI6E,GAErD3O,KAAK+H,SAAS6B,SAAS+E,SAAS3O,KAAK+H,SAAS+B,GAAI6E,GAEpD3O,KAAK+H,SAAS6B,SAASmF,YAAY/O,KAAK+H,SAAS+B,GAAI8E,GACrD5O,KAAK+H,SAAS6B,SAASmF,YAAY/O,KAAK+H,SAAS+B,GAAI+E,GACrD7O,KAAK+H,SAAS6B,SAASmF,YAAY/O,KAAK+H,SAAS+B,GAAIgF,IAGvDnB,EAAA/N,UAAAoP,mBAAA,SAAmBzP,GACjB,OAAAL,EAAA,GACKc,KAAKiP,gBAAgBjP,KAAK+H,SAASmG,YAAc3O,GAAE,CACtD6O,MAAOpO,KAAK+H,SAASmG,YAAclO,KAAK+H,SAASC,SAASxF,OAAS,KACnE6L,OAAQrO,KAAK+H,SAASmH,SAASxP,OAASM,KAAK+H,SAASoG,aAAenO,KAAK+H,SAASC,SAASxF,OAAS,QAIzGmL,EAAA/N,UAAAuP,gBAAA,SAAgB5P,GACd,OAAAL,EAAA,GACKc,KAAKoP,eAAepP,KAAK+H,SAASoG,aAAe5O,GAAE,CACtD6O,MAAOpO,KAAK+H,SAASsH,YAAY3P,OAASM,KAAK+H,SAASmG,YAAclO,KAAK+H,SAASC,SAASxF,OAAS,KACtG6L,OAAQrO,KAAK+H,SAASoG,aAAenO,KAAK+H,SAASC,SAASxF,OAAS,QAIzEmL,EAAA/N,UAAAqP,gBAAA,SAAgBK,GACd,OAAItP,KAAK+H,SAASC,SAASlF,wBAClB,CACLyM,UAAW,cAAgBD,EAAI,OAG1B,CACLxD,KAAO9L,KAAKwP,gBAAkBF,EAAK,OAKzC3B,EAAA/N,UAAAwP,eAAA,SAAeE,GACb,OAAItP,KAAK+H,SAASC,SAASlF,wBAClB,CACLyM,UAAW,cAAgBD,EAAI,OAG1B,CACLtD,IAAKhM,KAAKyP,eAAiBH,EAAI,OAKrC3B,EAAA/N,UAAAkO,kBAAA,SAAkBlE,EAAqBE,GACjC9J,KAAK+H,SAASC,SAASlF,wBACzB8G,EAASmE,SAASjE,EAAI,YAAa,KAEnCF,EAASmE,SAASjE,EAAI,MAAO,IAC7BF,EAASmE,SAASjE,EAAI,OAAQ,MAIlC6D,EAAA/N,UAAA0O,gBAAA,SAAgB1E,EAAqBE,EAASd,EAAWD,GACvD,GAAI/I,KAAK+H,SAASC,SAASlF,wBAAyB,KAC5CyM,EAAY,eAAiBvG,EAAI,OAASD,EAAI,SACpDa,EAASmE,SAASjE,EAAI,YAAayF,QAEnC3F,EAASmE,SAASjE,EAAI,OAAQ9J,KAAKwP,gBAAkBxG,EAAI,MACzDY,EAASmE,SAASjE,EAAI,MAAO9J,KAAKyP,eAAiB1G,EAAI,OAI3D4E,EAAA/N,UAAA4P,cAAA,WACE,OAAIxP,KAAK+H,SAASC,SAASvF,YACsB,OAA3CzC,KAAK+H,SAASC,SAASnF,gBAClB7C,KAAK+H,SAASC,SAASnF,gBAEvB7C,KAAK+H,SAASC,SAASxF,OAGzB,GAIXmL,EAAA/N,UAAA6P,aAAA,WACE,OAAIzP,KAAK+H,SAASC,SAASvF,YACqB,OAA1CzC,KAAK+H,SAASC,SAAStF,eAClB1C,KAAK+H,SAASC,SAAStF,eAEvB1C,KAAK+H,SAASC,SAASxF,OAGzB,uBAnMZyG,EAAAA,sDAJOyD,KA0MRiB,EAtMA,GCNA,IAAA+B,EAAA,WAuDE,SAAAA,EAAgC5F,EAA0CF,EAAuDmB,EAAiDT,GAAxGtK,KAAA4J,SAAAA,EAAuD5J,KAAA+K,MAAAA,EAAiD/K,KAAAsK,KAAAA,EAZlLtK,KAAAyO,QAAU,EACVzO,KAAAsM,KAAO,EAGPtM,KAAAqP,YAAc,GACdrP,KAAAkP,SAAW,GAQTlP,KAAK8J,GAAKA,EAAG6F,cACb3P,KAAKgI,SAAW4H,KAAKC,MAAMD,KAAKE,UAAU7O,IAC1CjB,KAAK+P,wBAA0BpJ,EAAcK,SAAShH,KAAKgQ,gBAAgBhG,KAAKhK,MAAO,GACvFA,KAAK6N,QAAS,EACd7N,KAAKgO,SAAW,EAChBhO,KAAKiQ,UAAY,EACjBjQ,KAAKuN,KAAO,GACZvN,KAAKkO,YAAc,EACnBlO,KAAKmO,aAAe,EACpBnO,KAAKkQ,gBAAiB,EACtBlQ,KAAKmQ,UAAY,IAAIjH,EAAkBlJ,MACvCA,KAAKoQ,QAAU,IAAIzD,EAAgB3M,MACnCA,KAAKqQ,aAAe,IAAI1C,EAAiB3N,MAie7C,OA9dS0P,EAAAY,uBAAP,SAA8BzF,EAAoB0F,GAChD,OAAO1F,EAAK7B,EAAIuH,EAAMvH,EAAIuH,EAAMlE,MAC3BxB,EAAK7B,EAAI6B,EAAKwB,KAAOkE,EAAMvH,GAC3B6B,EAAK9B,EAAIwH,EAAMxH,EAAIwH,EAAMjE,MACzBzB,EAAK9B,EAAI8B,EAAKyB,KAAOiE,EAAMxH,GAGlC2G,EAAA9P,UAAA4Q,SAAA,WACMxQ,KAAK2J,QAAQ1G,cACfjD,KAAK2J,QAAQ1G,aAAajD,OAI9B0P,EAAA9P,UAAA6Q,YAAA,SAAYC,GACNA,EAAQ/G,UACV3J,KAAK2Q,aACL3Q,KAAK2J,QAAQiH,IAAM,CACjBC,eAAgB7Q,KAAK6Q,eAAe7G,KAAKhK,MACzC8Q,OAAQ9Q,KAAK+Q,SAAS/G,KAAKhK,MAC3BgR,wBAAyBhR,KAAKgR,wBAAwBhH,KAAKhK,MAC3DiR,yBAA0BjR,KAAKiR,yBAAyBjH,KAAKhK,MAC7DkR,wBAAyBlR,KAAKkR,wBAAwBlH,KAAKhK,OAE7DA,KAAKyO,QAAUzO,KAAKgI,SAASpG,QAC7B5B,KAAKsM,KAAOtM,KAAKgI,SAASlG,QAC1B9B,KAAKwB,cACLxB,KAAKgQ,oBAITN,EAAA9P,UAAAkR,OAAA,eACMzC,EACAD,EAC2B,QAA3BpO,KAAKgI,SAAS9G,UAAuBlB,KAAK6N,QAI5CO,EAAQpO,KAAK8J,GAAGqH,YAChB9C,EAASrO,KAAK8J,GAAGsH,eAJjBhD,EAAQpO,KAAK8J,GAAGuH,YAChBhD,EAASrO,KAAK8J,GAAGwH,cAKdlD,IAAUpO,KAAKgO,UAAYK,IAAWrO,KAAKiQ,YAAcjQ,KAAKuR,mBACjEvR,KAAK+Q,YAITrB,EAAA9P,UAAA+Q,WAAA,WACE3Q,KAAKgI,SAAWrB,EAAcC,MAAM5G,KAAKgI,SAAUhI,KAAK2J,QAAS3J,KAAKgI,UACjEhI,KAAKgI,SAAS3B,qBAAwBrG,KAAKwR,aAErCxR,KAAKgI,SAAS3B,qBAAuBrG,KAAKwR,eACnDxR,KAAKwR,eACLxR,KAAKwR,aAAe,MAHpBxR,KAAKwR,aAAexR,KAAK4J,SAASC,OAAO,SAAU,SAAU7J,KAAK+Q,SAAS/G,KAAKhK,OAKlFA,KAAKmQ,UAAU3G,iBAGjBkG,EAAA9P,UAAAiR,eAAA,WACE7Q,KAAK2Q,aAEL,QADIc,EAAuBzR,KAAKuN,KAAK7N,OAAS,EACvC+R,GAAgB,EAAGA,IACfzR,KAAKuN,KAAKkE,GACZjI,gBAETxJ,KAAKgQ,mBAGPN,EAAA9P,UAAA8R,YAAA,WACM1R,KAAKwR,cACPxR,KAAKwR,eAEHxR,KAAK2J,SAAW3J,KAAK2J,QAAQxG,iBAC/BnD,KAAK2J,QAAQxG,gBAAgBnD,MAE3BA,KAAK2J,SAAW3J,KAAK2J,QAAQiH,MAC/B5Q,KAAK2J,QAAQiH,IAAIE,YAAS5N,EAC1BlD,KAAK2J,QAAQiH,IAAIC,oBAAiB3N,EAClClD,KAAK2J,QAAQiH,IAAII,6BAA0B9N,EAC3ClD,KAAK2J,QAAQiH,SAAM1N,GAErBlD,KAAKmQ,UAAUhH,iBACRnJ,KAAKmQ,UACZnQ,KAAKoQ,QAAQjH,iBACNnJ,KAAKoQ,SAGdV,EAAA9P,UAAAmR,SAAA,WACE/Q,KAAKwB,cACLxB,KAAKgQ,mBAGPN,EAAA9P,UAAA2R,gBAAA,eACQJ,EAAcnR,KAAK8J,GAAGqH,YACtBE,EAAcrR,KAAK8J,GAAGuH,YACtBM,EAAc3R,KAAK8J,GAAG6H,YACtBP,EAAepR,KAAK8J,GAAGsH,aACvBE,EAAetR,KAAK8J,GAAGwH,aACvBM,EAAe5R,KAAK8J,GAAG8H,aAK7B,QAJ8BT,EAAcE,GAAeO,EAAeN,GACrEM,EAAeN,EAAeD,EAAcF,MACjBC,EAAeE,GAC1CK,EAAcN,GAAeM,EAAcN,EAAcC,EAAeF,IAO/E1B,EAAA9P,UAAA4B,YAAA,eACQsI,EAAK9J,KAAK8J,GACZsE,EAAQtE,EAAGqH,YACX9C,EAASvE,EAAGsH,aACZpR,KAAKgI,SAASxG,aAA0C,QAA3BxB,KAAKgI,SAAS9G,WAAuBlB,KAAK6N,QACzEO,EAAQtE,EAAGuH,YACXhD,EAASvE,EAAGwH,eAEZlD,EAAQtE,EAAGqH,YACX9C,EAASvE,EAAGsH,cAEdpR,KAAKgO,SAAWI,EAChBpO,KAAKiQ,UAAY5B,GAGnBqB,EAAA9P,UAAAiS,kBAAA,WACE7R,KAAKwB,eACAxB,KAAK6N,QAAU7N,KAAKgI,SAASrG,iBAAmB3B,KAAKgO,UACxDhO,KAAK6N,QAAU7N,KAAK6N,OACpB7N,KAAK4J,SAAS+E,SAAS3O,KAAK8J,GAAI,WACvB9J,KAAK6N,QAAU7N,KAAKgI,SAASrG,iBAAmB3B,KAAKgO,WAC9DhO,KAAK6N,QAAU7N,KAAK6N,OACpB7N,KAAK4J,SAASmF,YAAY/O,KAAK8J,GAAI,WAKrC,QADyCsD,EAFrCd,EAAOtM,KAAKgI,SAASlG,QAAS2M,EAAUzO,KAAKgI,SAASpG,QAEtD6P,EAAezR,KAAKuN,KAAK7N,OAAS,EAC/B+R,GAAgB,EAAGA,KACxBrE,EAASpN,KAAKuN,KAAKkE,IACPK,YACVxF,EAAOJ,KAAK6F,IAAIzF,EAAMc,EAAOI,MAAMzE,EAAIqE,EAAOI,MAAMlB,MACpDmC,EAAUvC,KAAK6F,IAAItD,EAASrB,EAAOI,MAAMxE,EAAIoE,EAAOI,MAAMnB,OAI1DrM,KAAKyO,UAAYA,GAAWzO,KAAKsM,OAASA,IAC5CtM,KAAKyO,QAAUA,EACfzO,KAAKsM,KAAOA,EACRtM,KAAK2J,QAAQvG,yBACfpD,KAAK2J,QAAQvG,wBAAwBpD,QAK3C0P,EAAA9P,UAAAoQ,gBAAA,WAME,GALIhQ,KAAKoQ,SACPpQ,KAAKoQ,QAAQxD,eAGf5M,KAAK6R,oBACD7R,KAAKgI,SAASvF,YAAa,KACzBuP,GAAehS,KAAKgI,SAASxF,OACK,OAAlCxC,KAAKgI,SAASnF,iBAChBmP,GAAehS,KAAKgI,SAASnF,gBAC7B7C,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,eAAgB9J,KAAKgI,SAASnF,gBAAkB,QAEhFmP,GAAehS,KAAKgI,SAASxF,OAC7BxC,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,eAAgB9J,KAAKgI,SAASxF,OAAS,OAElC,OAAnCxC,KAAKgI,SAASrF,kBAChBqP,GAAehS,KAAKgI,SAASrF,iBAC7B3C,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,gBAAiB9J,KAAKgI,SAASrF,iBAAmB,QAElFqP,GAAehS,KAAKgI,SAASxF,OAC7BxC,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,gBAAiB9J,KAAKgI,SAASxF,OAAS,OAE1ExC,KAAKkO,aAAelO,KAAKgO,SAAWgE,GAAehS,KAAKyO,YACpDwD,GAAgBjS,KAAKgI,SAASxF,OACG,OAAjCxC,KAAKgI,SAAStF,gBAChBuP,GAAgBjS,KAAKgI,SAAStF,eAC9B1C,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,cAAe9J,KAAKgI,SAAStF,eAAiB,QAE9EuP,GAAgBjS,KAAKgI,SAASxF,OAC9BxC,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,cAAe9J,KAAKgI,SAASxF,OAAS,OAEhC,OAApCxC,KAAKgI,SAASpF,mBAChBqP,GAAgBjS,KAAKgI,SAASpF,kBAC9B5C,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,iBAAkB9J,KAAKgI,SAASpF,kBAAoB,QAEpFqP,GAAgBjS,KAAKgI,SAASxF,OAC9BxC,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,iBAAkB9J,KAAKgI,SAASxF,OAAS,OAE3ExC,KAAKmO,cAAgBnO,KAAKiQ,UAAYgC,GAAgBjS,KAAKsM,UAE3DtM,KAAKkO,aAAelO,KAAKgO,SAAWhO,KAAKgI,SAASxF,QAAUxC,KAAKyO,QACjEzO,KAAKmO,cAAgBnO,KAAKiQ,UAAYjQ,KAAKgI,SAASxF,QAAUxC,KAAKsM,KACnEtM,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,eAAgB,OAChD9J,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,gBAAiB,OACjD9J,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,cAAe,OAC/C9J,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,iBAAkB,OAEpD9J,KAAKqQ,aAAa3B,iBAElB1O,KAAKkS,aAEDlS,KAAKgI,SAASxG,aAChBxB,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,QAAU9J,KAAKyO,QAAUzO,KAAKkO,YAAclO,KAAKgI,SAASxF,OAAU,MACpGxC,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,SAAW9J,KAAKsM,KAAOtM,KAAKmO,aAAenO,KAAKgI,SAASxF,OAAU,QAEnGxC,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,QAAS,IACzC9J,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,SAAU,KAI5C,QADiDsD,EAA7CqE,EAAuBzR,KAAKuN,KAAK7N,OAAS,EACvC+R,GAAgB,EAAGA,KACxBrE,EAASpN,KAAKuN,KAAKkE,IACZU,UACP/E,EAAOgF,KAAKC,SACZjF,EAAO0D,OAAOuB,SAGhB7K,WAAWxH,KAAK8Q,OAAO9G,KAAKhK,MAAO,MAGrC0P,EAAA9P,UAAAsS,WAAA,WACoC,WAA9BlS,KAAKgI,SAAS7B,aAA6BnG,KAAK6N,OAEX,kBAA9B7N,KAAKgI,SAAS7B,aAAmCnG,KAAKkQ,eAC/DlQ,KAAK4J,SAAS+E,SAAS3O,KAAK8J,GAAI,gBACO,SAA9B9J,KAAKgI,SAAS7B,aAA2BnG,KAAKkQ,iBAAkBlQ,KAAK6N,QAC9E7N,KAAK4J,SAASmF,YAAY/O,KAAK8J,GAAI,gBAJnC9J,KAAK4J,SAAS+E,SAAS3O,KAAK8J,GAAI,gBAMlC9J,KAAK6R,oBACL7R,KAAKqP,YAAY3P,OAASwM,KAAK6F,IAAI/R,KAAKyO,QAASvC,KAAKC,MAAMnM,KAAKgO,SAAWhO,KAAKkO,eAAiB,EAClGlO,KAAKkP,SAASxP,OAASwM,KAAK6F,IAAI/R,KAAKsM,KAAMJ,KAAKC,MAAMnM,KAAKiQ,UAAYjQ,KAAKmO,gBAAkB,EAC9FnO,KAAK+K,MAAMC,gBAGb0E,EAAA9P,UAAA0S,QAAA,SAAQC,QAC2BrP,IAA7BqP,EAAc/E,MAAMnB,OACtBkG,EAAc/E,MAAMnB,KAAOrM,KAAKgI,SAAShG,gBACzCuQ,EAAc1H,KAAKwB,KAAOkG,EAAc/E,MAAMnB,KAC9CkG,EAAc7E,oBAEiBxK,IAA7BqP,EAAc/E,MAAMlB,OACtBiG,EAAc/E,MAAMlB,KAAOtM,KAAKgI,SAAS/F,gBACzCsQ,EAAc1H,KAAKyB,KAAOiG,EAAc/E,MAAMlB,KAC9CiG,EAAc7E,gBAEe,IAA3B6E,EAAc/E,MAAMxE,IAAuC,IAA3BuJ,EAAc/E,MAAMzE,EACtD/I,KAAKwS,iBAAiBD,GACbvS,KAAKyM,eAAe8F,EAAc/E,SACtCxN,KAAKgI,SAAS1B,kBACjBiM,EAAcT,WAAY,EAC1BW,QAAQC,KAAK,6EACX9C,KAAKE,UAAUyC,EAAc1H,KAAM,CAAC,OAAQ,OAAQ,IAAK,QAExD7K,KAAKgI,SAAStB,8BAGjB6L,EAAcT,WAAY,EAF1B9R,KAAKwS,iBAAiBD,IAK1BvS,KAAKuN,KAAKoF,KAAKJ,GACfvS,KAAK+P,2BAGPL,EAAA9P,UAAAgT,WAAA,SAAWL,GACTvS,KAAKuN,KAAKsF,OAAO7S,KAAKuN,KAAK7E,QAAQ6J,GAAgB,GACnDvS,KAAK+P,0BACD/P,KAAK2J,QAAQnG,qBACfxD,KAAK2J,QAAQnG,oBAAoB+O,EAAc1H,KAAM0H,IAIzD7C,EAAA9P,UAAA6M,eAAA,SAAe5B,OACTiI,GAAsD,EAO1D,GANI9S,KAAK2J,QAAQlG,uBACfqP,GAAa9S,KAAK2J,QAAQlG,qBAAqBoH,KAE5CiI,GAAa9S,KAAK+S,mBAAmBlI,KACxCiI,GAAY,IAETA,EAAW,KACRE,EAAIhT,KAAKiT,iBAAiBpI,GAC5BmI,IACFF,EAAYE,GAGhB,OAAOF,GAITpD,EAAA9P,UAAAmT,mBAAA,SAAmBlI,OACXqI,EAAqBrI,EAAK9B,GAAK,GAAK8B,EAAK7B,GAAK,EAC9CmK,EAActI,EAAKwB,KAAOxB,EAAK7B,GAAKhJ,KAAKgI,SAASnG,QAClDuR,EAAcvI,EAAKyB,KAAOzB,EAAK9B,GAAK/I,KAAKgI,SAASjG,QAClDG,OAAmCgB,IAArB2H,EAAK3I,YAA4BlC,KAAKgI,SAAS9F,YAAc2I,EAAK3I,YAChFE,OAAmCc,IAArB2H,EAAKzI,YAA4BpC,KAAKgI,SAAS5F,YAAcyI,EAAKzI,YAChFD,OAAmCe,IAArB2H,EAAK1I,YAA4BnC,KAAKgI,SAAS7F,YAAc0I,EAAK1I,YAChFE,OAAmCa,IAArB2H,EAAKxI,YAA4BrC,KAAKgI,SAAS3F,YAAcwI,EAAKxI,YAChFgR,EAAexI,EAAKwB,MAAQnK,GAAe2I,EAAKwB,MAAQjK,EACxDkR,EAAezI,EAAKyB,MAAQnK,GAAe0I,EAAKyB,MAAQjK,EACxDkR,OAAoCrQ,IAArB2H,EAAKvI,YAA4BtC,KAAKgI,SAAS1F,YAAcuI,EAAKvI,YACjFkR,OAAoCtQ,IAArB2H,EAAKtI,YAA4BvC,KAAKgI,SAASzF,YAAcsI,EAAKtI,YACjFkR,EAAO5I,EAAKwB,KAAOxB,EAAKyB,KAG9B,QAAS4G,GAAsBC,GAAeC,GAAeC,GAAgBC,GAF3DC,GAAgBE,GAChBD,GAAgBC,IAIpC/D,EAAA9P,UAAAqT,iBAAA,SAAiBpI,GAEf,QADiDuC,EAA7CqE,EAAuBzR,KAAKuN,KAAK7N,OAAS,EACvC+R,GAAgB,EAAGA,IAExB,IADArE,EAASpN,KAAKuN,KAAKkE,IACRjE,QAAU3C,GAAQ6E,EAAkBY,uBAAuBlD,EAAOI,MAAO3C,GAClF,OAAOuC,EAGX,OAAO,GAITsC,EAAA9P,UAAA8T,kBAAA,SAAkB7I,GAGhB,QADiDuC,EAD3CvE,EAA2C,GAC7C4I,EAAuBzR,KAAKuN,KAAK7N,OAAS,EACvC+R,GAAgB,EAAGA,KACxBrE,EAASpN,KAAKuN,KAAKkE,IACRjE,QAAU3C,GAAQ6E,EAAkBY,uBAAuBlD,EAAOI,MAAO3C,IAClFhC,EAAE8J,KAAKvF,GAGX,OAAOvE,GAKT6G,EAAA9P,UAAA4S,iBAAA,SAAiBD,GACXvS,KAAKgR,wBAAwBuB,EAAc/E,QAC7C+E,EAAcT,WAAY,EAC1BS,EAAc1H,KAAK7B,EAAIuJ,EAAc/E,MAAMxE,EAC3CuJ,EAAc1H,KAAK9B,EAAIwJ,EAAc/E,MAAMzE,EAC3CwJ,EAAc7E,gBAEd6E,EAAcT,WAAY,EACrB9R,KAAKgI,SAAS1B,iBACjBmM,QAAQC,KAAK,oDACX9C,KAAKE,UAAUyC,EAAc1H,KAAM,CAAC,OAAQ,OAAQ,IAAK,SAKjE6E,EAAA9P,UAAAoR,wBAAA,SAAwB2C,EAAuBC,QAAA,IAAAA,IAAAA,EAAA,KACvB,IAAlBD,EAAQtH,OACVsH,EAAQtH,KAAOrM,KAAKgI,SAAShG,kBAET,IAAlB2R,EAAQrH,OACVqH,EAAQrH,KAAOtM,KAAKgI,SAAS/F,iBAE/BjC,KAAK6R,oBAEL,QADqCgC,EAAjCC,EAAYF,EAAa7K,GAAK,EAC3B+K,EAAY9T,KAAKsM,KAAMwH,IAG5B,IAFAH,EAAQ5K,EAAI+K,EACZD,EAAYD,EAAa5K,GAAK,EACvB6K,EAAY7T,KAAKyO,QAASoF,IAE/B,GADAF,EAAQ3K,EAAI6K,GACP7T,KAAKyM,eAAekH,GACvB,OAAO,MAIPI,EAAe/T,KAAKgI,SAASjG,SAAW/B,KAAKsM,KAAOqH,EAAQrH,KAC5D0H,EAAkBhU,KAAKgI,SAASnG,SAAW7B,KAAKyO,QAAUkF,EAAQtH,KAExE,QADkBrM,KAAKsM,MAAQtM,KAAKyO,SAAWsF,IAC7BC,GAChBL,EAAQ3K,EAAIhJ,KAAKyO,QACjBkF,EAAQ5K,EAAI,GACL,KACEgL,IACTJ,EAAQ5K,EAAI/I,KAAKsM,KACjBqH,EAAQ3K,EAAI,GACL,IAKX0G,EAAA9P,UAAAqR,yBAAA,SAAyBpG,OACjBoJ,EAAU9U,OAAOC,OAAO,GAAIyL,GAElC,OADA7K,KAAKgR,wBAAwBiD,GACtBA,GAGTvE,EAAA9P,UAAAsR,wBAAA,SAAwBrG,OAClBqJ,EAAyC,CAACnL,EAAG,EAAGC,EAAG,GACvDkL,EAAelU,KAAKuN,KAAK4G,OAAM,SAAEC,EAAWC,OACpCC,EAAa,CAACvL,EAAGsL,EAAK7G,MAAMzE,EAAIsL,EAAK7G,MAAMlB,KAAO,EAAGtD,EAAGqL,EAAK7G,MAAMxE,EAAIqL,EAAK7G,MAAMnB,KAAO,GAC/F,OAAqD,IAAjD1F,EAAciC,aAAawL,EAAME,GAC5BA,EAEAF,GAERF,OAEGD,EAAU9U,OAAOC,OAAO,GAAIyL,GAElC,OADA7K,KAAKgR,wBAAwBiD,EAASC,GAC/BD,GAGTvE,EAAA9P,UAAAqM,kBAAA,SAAkBjD,EAAWuL,EAA0BC,OAC/CC,EAAWF,EAAevL,EAAIhJ,KAAKkO,aACzC,OAAIsG,EACKC,EAEAvI,KAAK6F,IAAI0C,EAAU,IAI9B/E,EAAA9P,UAAAwM,kBAAA,SAAkBrD,EAAWwL,EAA0BC,OAC/CC,EAAWF,EAAexL,EAAI/I,KAAKmO,cACzC,OAAIqG,EACKC,EAEAvI,KAAK6F,IAAI0C,EAAU,IAI9B/E,EAAA9P,UAAA8U,kBAAA,SAAkB1L,GAChB,OAAOA,EAAIhJ,KAAKkO,aAGlBwB,EAAA9P,UAAA+U,kBAAA,SAAkB5L,GAChB,OAAOA,EAAI/I,KAAKmO,cAMXuB,EAAAkF,iCAAP,SAAwC/J,EAAoB0F,OAEpDsE,EAAwC,IAAdhK,EAAKwB,KAAa,EAAI,EAChDyI,EAAyC,IAAfvE,EAAMlE,KAAa,EAAI,EACjD0I,EAAsC,IAAdlK,EAAKyB,KAAa,EAAI,EAC9C0I,EAAuC,IAAfzE,EAAMjE,KAAa,EAAI,EACrD,OAAOzB,EAAK7B,EAAI6L,EAA0BtE,EAAMvH,EAAIuH,EAAMlE,MACrDxB,EAAK7B,EAAI6B,EAAKwB,KAAOkE,EAAMvH,EAAI8L,GAC/BjK,EAAK9B,EAAIgM,EAAwBxE,EAAMxH,EAAIwH,EAAMjE,MACjDzB,EAAK9B,EAAI8B,EAAKyB,KAAOiE,EAAMxH,EAAIiM,GAItCtF,EAAA9P,UAAAqV,yBAAA,SAAyBpK,OACnBiI,GAAsD,EAO1D,GANI9S,KAAK2J,QAAQlG,uBACfqP,GAAa9S,KAAK2J,QAAQlG,qBAAqBoH,KAE5CiI,GAAa9S,KAAK+S,mBAAmBlI,KACxCiI,GAAY,IAETA,EAAW,KACRE,EAAIhT,KAAKkV,2BAA2BrK,GACtCmI,IACFF,EAAYE,GAGhB,OAAOF,GAITpD,EAAA9P,UAAAsV,2BAAA,SAA2BrK,GAEzB,QADiDuC,EAA7CqE,EAAuBzR,KAAKuN,KAAK7N,OAAS,EACvC+R,GAAgB,EAAGA,IAExB,IADArE,EAASpN,KAAKuN,KAAKkE,IACRjE,QAAU3C,GAAQ6E,EAAkBkF,iCAAiCxH,EAAOI,MAAO3C,GAC5F,OAAOuC,EAGX,OAAO,uBAtgBV+H,EAAAA,UAAS9N,KAAA,CAAC,CACT+N,SAAU,WACVC,SAAA,wXAEAC,cAAeC,EAAAA,kBAAkB9U,44BA3BjC+U,EAAAA,WAAUC,WAAA,CAAA,CAAAC,KAoDGC,EAAAA,OAAMtO,KAAA,CAACmO,EAAAA,qBA9CpBI,EAAAA,UAASH,WAAA,CAAA,CAAAC,KA8CwCC,EAAAA,OAAMtO,KAAA,CAACuO,EAAAA,oBAtDxDC,EAAAA,kBAAiBJ,WAAA,CAAA,CAAAC,KAsD+EC,EAAAA,OAAMtO,KAAA,CAACwO,EAAAA,4BAlDvGC,EAAAA,OAAML,WAAA,CAAA,CAAAC,KAkDsJC,EAAAA,OAAMtO,KAAA,CAACyO,EAAAA,8CAtBlKC,EAAAA,SAogBHrG,EAriBA,GCMA,MAAA,aCNA,ICGI3M,EACAC,EDJJgT,EAAA,WAWE,SAAAA,EAAYC,GACVjW,KAAKiW,aAAeA,EACpBjW,KAAK+H,SAAWkO,EAAalO,SAmFjC,OAhFEiO,EAAApW,UAAAuJ,QAAA,kBACSnJ,KAAK+H,gBACL/H,KAAKiW,oBACLjW,KAAKkW,YAGdF,EAAApW,UAAAuW,UAAA,WACMnW,KAAK+H,SAASC,SAASxC,OACzBxF,KAAKoW,gBACLpW,KAAKqW,UAAUrW,KAAKiW,gBAIxBD,EAAApW,UAAAwW,cAAA,WACE,GAAIpW,KAAKkW,WAAY,KACblN,EAAYhJ,KAAKkW,WAAW1I,MAAMxE,EAClCD,EAAY/I,KAAKkW,WAAW1I,MAAMzE,EACxC/I,KAAKkW,WAAW1I,MAAMxE,EAAIhJ,KAAKkW,WAAWrL,KAAK7B,GAAK,EACpDhJ,KAAKkW,WAAW1I,MAAMzE,EAAI/I,KAAKkW,WAAWrL,KAAK9B,GAAK,EAChD/I,KAAK+H,SAAS0E,eAAezM,KAAKkW,WAAW1I,QAC/CxN,KAAKkW,WAAW1I,MAAMxE,EAAIA,EAC1BhJ,KAAKkW,WAAW1I,MAAMzE,EAAIA,IAE1B/I,KAAKkW,WAAW/D,UAChBnS,KAAKiW,aAAazI,MAAMxE,EAAIhJ,KAAKiW,aAAapL,KAAK7B,GAAK,EACxDhJ,KAAKiW,aAAazI,MAAMzE,EAAI/I,KAAKiW,aAAapL,KAAK9B,GAAK,EACxD/I,KAAKkW,gBAAahT,KAMxB8S,EAAApW,UAAA0W,gBAAA,WACMtW,KAAKkW,aACPlW,KAAKkW,WAAW1I,MAAMxE,EAAIhJ,KAAKkW,WAAWrL,KAAK7B,GAAK,EACpDhJ,KAAKkW,WAAW1I,MAAMzE,EAAI/I,KAAKkW,WAAWrL,KAAK9B,GAAK,EACpD/I,KAAKkW,WAAW/D,UAChBnS,KAAKkW,gBAAahT,IAItB8S,EAAApW,UAAA2W,YAAA,WACMvW,KAAKkW,aACPlW,KAAKkW,WAAWM,iBAAiBxW,KAAKkW,WAAW1I,MAAOxN,KAAKkW,WAAWrL,MACxE7K,KAAKkW,gBAAahT,IAItB8S,EAAApW,UAAAyW,UAAA,SAAUI,OACJC,EAMJ,IAJEA,EADE1W,KAAK+H,SAASC,SAASvC,kBACDzF,KAAK+H,SAASkN,yBAAyBwB,EAASjJ,OAEhDxN,KAAK+H,SAAS0E,eAAegK,EAASjJ,UAET,IAA1BkJ,GAAkCA,EAAsBC,eAAgB,KAC7FC,EAAsDF,EACtDG,EAAiBD,EAAoBpJ,MAAMxE,EAC3C8N,EAAiBF,EAAoBpJ,MAAMzE,EAC3CgO,EAAQN,EAASjJ,MAAMxE,EACvBgO,EAAQP,EAASjJ,MAAMzE,EAC7B6N,EAAoBpJ,MAAMxE,EAAIyN,EAAS5L,KAAK7B,GAAK,EACjD4N,EAAoBpJ,MAAMzE,EAAI0N,EAAS5L,KAAK9B,GAAK,EACjD0N,EAASjJ,MAAMxE,EAAI4N,EAAoB/L,KAAK7B,GAAK,EACjDyN,EAASjJ,MAAMzE,EAAI6N,EAAoB/L,KAAK9B,GAAK,EAC7C/I,KAAK+H,SAAS0E,eAAemK,EAAoBpJ,QAAUxN,KAAK+H,SAAS0E,eAAegK,EAASjJ,QACnGiJ,EAASjJ,MAAMxE,EAAI+N,EACnBN,EAASjJ,MAAMzE,EAAIiO,EACnBJ,EAAoBpJ,MAAMxE,EAAI6N,EAC9BD,EAAoBpJ,MAAMzE,EAAI+N,IAE9BF,EAAoBzE,UACpBnS,KAAKkW,WAAaU,EACd5W,KAAK+H,SAASC,SAASvC,oBACzBzF,KAAKiW,aAAaO,iBAAiBxW,KAAKiW,aAAazI,MAAOxN,KAAKiW,aAAapL,MAC9E7K,KAAKuW,sCAtFdtN,EAAAA,sDAHOgO,KA8FRjB,EAhGA,OCMIkB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAPEC,EAAmB,GASzB,SAAgBC,EAAO3P,EAAsC+D,EAAcE,EAAaoC,EAAeC,EAChFnJ,EAAeyS,EACfC,EAAiC9G,EAAkB+G,GACxE9U,EAAoBgF,EAASC,SAASjF,kBACtCC,EAAc+E,EAASC,SAAShF,YAChCkU,EAAkBnP,EAAS+B,GAC3BqN,EAAcrG,EACdsG,EAAkBS,MAEZxG,EAAc6F,EAAgB7F,YAC9BC,EAAe4F,EAAgB5F,aAC/BwG,EAAaZ,EAAgBrL,WAC7BkM,EAAYb,EAAgBnL,UAC5BiM,EAAgBhM,EAAM+L,EACtBE,EAAmB3G,EAAeyG,EAAY/L,EAAMqC,EAE1D,IAAKtG,EAASC,SAASvB,sBACrB,GAAIkR,EAAU/P,QAAU1C,EAAE0C,SAAWqQ,EAAmBlV,EAAmB,CAEzE,GADAmV,IACKf,GAAeC,IAAoBA,EAAgB9X,GAAMkY,EAC5D,OAEFA,EAAYW,EAAc,EAAGP,EAAuBD,QAC/C,GAAIA,EAAU/P,QAAU1C,EAAE0C,SAAWmQ,EAAY,GAAKC,EAAgBjV,EAAmB,CAE9F,GADAqV,IACKjB,GAAeC,IAAoBA,EAAgB5X,GAAM+X,EAC5D,OAEFA,EAAYY,GAAe,EAAGP,EAAuBD,QAC5CA,EAAU/P,UAAY1C,EAAE0C,SACjCyQ,QAIEC,EAAkBR,EAAazG,EAAcvF,EAAOsC,EACpDmK,EAAiBzM,EAAOgM,EAE9B,IAAK/P,EAASC,SAASxB,wBACrB,GAAImR,EAAUjQ,QAAUxC,EAAEwC,SAAW4Q,GAAmBvV,EAAmB,CAEzE,GADAyV,IACKrB,GAAeC,IAAoBA,EAAgBlS,GAAMmS,EAC5D,OAEFA,EAAYoB,EAAgB,EAAGb,EAAuBD,QACjD,GAAIA,EAAUjQ,QAAUxC,EAAEwC,SAAWoQ,EAAa,GAAKS,EAAiBxV,EAAmB,CAEhG,GADA2V,IACKvB,GAAeC,IAAoBA,EAAgBjS,GAAMmS,EAC5D,OAEFA,EAAYmB,GAAiB,EAAGb,EAAuBD,QAC9CA,EAAUjQ,UAAYxC,EAAEwC,SACjCiR,IAKN,SAASR,EAAcS,EAAchB,EAAiCD,OAChE/P,EAAU+P,EAAU/P,QACxB,OAAOiR,YAAW,aACX3B,IAA6B,IAAV0B,GAAe1B,EAAgBnL,UAAY/I,EAAc,IAC/EqV,IAEFnB,EAAgBnL,WAAa6M,EAAO5V,EACpC4E,GAAWgR,EAAO5V,EAClB4U,EAAsB,CAAClQ,QAASiQ,EAAUjQ,QAASE,QAASA,KAC3D6P,GAGL,SAASgB,EAAgBG,EAAchB,EAAiCD,OAClEjQ,EAAUiQ,EAAUjQ,QACxB,OAAOmR,YAAW,aACX3B,IAA6B,IAAV0B,GAAe1B,EAAgBrL,WAAa7I,EAAc,IAChF2V,IAEFzB,EAAgBrL,YAAc+M,EAAO5V,EAErC4U,EAAsB,CAAClQ,QADvBA,GAAWkR,EAAO5V,EACuB4E,QAAS+P,EAAU/P,WAC3D6P,GAGL,SAAgBqB,IACdH,IACAN,IACAnB,OAAkBhU,EAGpB,SAASyV,IACPD,IACAF,IAGF,SAASH,IACPH,IACAE,IAGF,SAASM,IACHrB,IACF0B,cAAc1B,GACdA,EAAY,GAIhB,SAASmB,IACHlB,IACFyB,cAAczB,GACdA,EAAY,GAIhB,SAASc,IACHZ,IACFuB,cAAcvB,GACdA,EAAY,GAIhB,SAASU,IACHX,IACFwB,cAAcxB,GACdA,EAAY,GCtIhB,IAAAyB,EAAA,WA0BE,SAAAA,EAAY/C,GACVjW,KAAKiZ,YAAc,GACnBjZ,KAAKkZ,gBAAkB,GACvBlZ,KAAKmZ,oBAAsB,GAC3BnZ,KAAKoZ,gBAAkB,GACvBnD,EAAiB,GAAIjW,KAAKqZ,uBAC1BrZ,KAAKiW,aAAeA,EACpBjW,KAAK+H,SAAWkO,EAAalO,SAC7B/H,KAAKsZ,WAAa,CAChBC,SAAU,CAACvZ,KAAKwZ,QAASxZ,KAAKyZ,SAAUzZ,KAAK0Z,SAAU1Z,KAAK2Z,SAC5DC,SAAU,CAAC5Z,KAAK2Z,QAAS3Z,KAAKyZ,SAAUzZ,KAAK0Z,SAAU1Z,KAAKwZ,SAC5DK,UAAW,CAAC7Z,KAAKyZ,SAAUzZ,KAAK2Z,QAAS3Z,KAAKwZ,QAASxZ,KAAK0Z,UAC5DI,UAAW,CAAC9Z,KAAK0Z,SAAU1Z,KAAK2Z,QAAS3Z,KAAKwZ,QAASxZ,KAAKyZ,WAE9DzZ,KAAK8Z,UAAY,YACjB9Z,KAAK6Z,UAAY,YACjB7Z,KAAKuZ,SAAW,WAChBvZ,KAAK4Z,SAAW,WA6RpB,OA1REZ,EAAApZ,UAAAuJ,QAAA,kBACSnJ,KAAK+H,gBACL/H,KAAKiW,cAGd+C,EAAApZ,UAAA8F,UAAA,SAAUqU,EAAmBC,GAC3B,GAAIha,KAAK+H,SAASC,SAAStC,YAAcsU,EAAS,CAChDha,KAAKia,iBAAmB,OAClBC,EAASla,KAAK2S,KAAK3S,KAAKiW,aAAc8D,GAQ5C,OAPKG,GACHla,KAAKma,mBAEPna,KAAKia,iBAAmB,GACxBja,KAAKkZ,gBAAkB,GACvBlZ,KAAKmZ,oBAAsB,GAC3BnZ,KAAKoa,eACEF,EAEP,OAAO,GAIXlB,EAAApZ,UAAAua,iBAAA,WAEE,QADI5a,EAAIS,KAAKkZ,gBAAgBxZ,OAAS,EAC/BH,GAAK,EAAGA,IACbS,KAAKqa,qBAAqBra,KAAKkZ,gBAAgB3Z,KAInDyZ,EAAApZ,UAAA0a,aAAA,WAIE,QADIC,EAFAhb,EAAI,EACF+N,EAAYtN,KAAKiZ,YAAYvZ,OAE5BH,EAAI+N,EAAG/N,KACZgb,EAAava,KAAKiZ,YAAY1Z,IACnBiO,MAAMxE,EAAIuR,EAAW1P,KAAK7B,GAAK,EAC1CuR,EAAW/M,MAAMzE,EAAIwR,EAAW1P,KAAK9B,GAAK,EAC1CwR,EAAWpI,UAEbnS,KAAKiZ,YAAc,GACnBjZ,KAAKoZ,gBAAkB,IAGzBJ,EAAApZ,UAAA4a,eAAA,WAIE,QADID,EAFAhb,EAAI,EACF+N,EAAYtN,KAAKiZ,YAAYvZ,OAE5BH,EAAI+N,EAAG/N,KACZgb,EAAava,KAAKiZ,YAAY1Z,IACnBiX,iBAAiB+D,EAAW/M,MAAO+M,EAAW1P,MAE3D7K,KAAKiZ,YAAc,GACnBjZ,KAAKoZ,gBAAkB,IAGzBJ,EAAApZ,UAAA6a,cAAA,WAGE,QAFIlb,EAAYS,KAAKiZ,YAAYvZ,OAAS,EACtCgb,GAAS,EACNnb,GAAK,EAAGA,IACTS,KAAK2a,gBAAgB3a,KAAKiZ,YAAY1Z,GAAIA,KAC5Cmb,GAAS,GAGTA,GACF1a,KAAKya,iBAIDzB,EAAApZ,UAAAyZ,qBAAR,WACE,OAAOnN,KAAK0O,SAASC,SAAS,IAAIC,QAAQ,WAAY,IAAIC,OAAO,EAAG,KAG9D/B,EAAApZ,UAAAwa,aAAR,WAC0Bpa,KAAK+H,SAASwF,KAAKyN,OAAM,SAAElR,GAAsC,OAAAA,EAAO,KAChFmR,QAAO,SAAEnR,GAAuC,cAAOA,EAAO,MAGxEkP,EAAApZ,UAAA+S,KAAR,SAAasD,EAA8C8D,GACzD,GAAI/Z,KAAK+H,SAASgL,mBAAmBkD,EAAazI,OAChD,OAAO,EAET,GAAkB,KAAduM,EACF,OAAO,EAMT,QAHsBmB,EADhBrS,EAA2C7I,KAAK+H,SAAS2L,kBAAkBuC,EAAazI,OAC1FjO,EAAIsJ,EAAEnJ,OAAS,EACfyb,GAAW,EACTrS,EAA2C,GAC1CvJ,GAAK,EAAGA,IAAK,CAKlB,IAJA2b,EAAgBrS,EAAEtJ,IACK,KACrB2b,EAAkB,GAAIlb,KAAKqZ,wBAEzB6B,IAAkBlb,KAAKiW,aAAc,CACvCkF,GAAW,EACX,MAEF,IAAKD,EAAcvE,eAAgB,CACjCwE,GAAW,EACX,MAKF,GAHgBnb,KAAKkZ,gBAAgBkC,KAAI,SAAEtR,GACzC,OAAOA,EAAO,KAAMoR,EAAkB,KAE3B,CACXC,GAAW,EACX,MAEF,GAAInb,KAAKsZ,WAAWS,GAAW,GAAGja,KAAKE,KAAMkb,EAAejF,GAC1DjW,KAAKia,iBAAiBtH,KAAKuI,GAC3BpS,EAAE6J,KAAKuI,QACF,GAAIlb,KAAKsZ,WAAWS,GAAW,GAAGja,KAAKE,KAAMkb,EAAejF,GACjEjW,KAAKia,iBAAiBtH,KAAKuI,GAC3BpS,EAAE6J,KAAKuI,QACF,GAAIlb,KAAKsZ,WAAWS,GAAW,GAAGja,KAAKE,KAAMkb,EAAejF,GACjEjW,KAAKia,iBAAiBtH,KAAKuI,GAC3BpS,EAAE6J,KAAKuI,OACF,CAAA,IAAIlb,KAAKsZ,WAAWS,GAAW,GAAGja,KAAKE,KAAMkb,EAAejF,GAG5D,CACLkF,GAAW,EACX,MAJAnb,KAAKia,iBAAiBtH,KAAKuI,GAC3BpS,EAAE6J,KAAKuI,IAMX,IAAKC,IACH5b,EAAIS,KAAKia,iBAAiBoB,YAAYvS,EAAE,MAC/B,EAEP,QADIwS,EAAItb,KAAKia,iBAAiBva,OAAS,EAChC4b,GAAK/b,EAAG+b,IACbJ,EAAgBlb,KAAKia,iBAAiBqB,GACtCtb,KAAKia,iBAAiBsB,MACtBvb,KAAKqa,qBAAqBa,GAC1Blb,KAAKwb,qBAAqBN,GAIhC,OAAOC,GAGDnC,EAAApZ,UAAA6Z,SAAR,SAAiB7C,EAAqDX,GACpE,QAAKjW,KAAK+H,SAASC,SAASnC,eAAeG,QAG3ChG,KAAKyb,gBAAgB7E,GACrBA,EAAoBpJ,MAAMzE,EAAIkN,EAAazI,MAAMzE,EAAIkN,EAAazI,MAAMlB,KACpEtM,KAAK2S,KAAKiE,EAAqB5W,KAAK6Z,YACtCjD,EAAoBzE,UACpBnS,KAAK0b,YAAY9E,IACV,IAEP5W,KAAKqa,qBAAqBzD,IAErB,KAGDoC,EAAApZ,UAAA8Z,SAAR,SAAiB9C,EAAqDX,GACpE,QAAKjW,KAAK+H,SAASC,SAASnC,eAAeC,QAG3C9F,KAAKyb,gBAAgB7E,GACrBA,EAAoBpJ,MAAMzE,EAAIkN,EAAazI,MAAMzE,EAAI6N,EAAoBpJ,MAAMlB,KAC3EtM,KAAK2S,KAAKiE,EAAqB5W,KAAK8Z,YACtClD,EAAoBzE,UACpBnS,KAAK0b,YAAY9E,IACV,IAEP5W,KAAKqa,qBAAqBzD,IAErB,KAGDoC,EAAApZ,UAAA+Z,QAAR,SAAgB/C,EAAqDX,GACnE,QAAKjW,KAAK+H,SAASC,SAASnC,eAAeE,OAG3C/F,KAAKyb,gBAAgB7E,GACrBA,EAAoBpJ,MAAMxE,EAAIiN,EAAazI,MAAMxE,EAAIiN,EAAazI,MAAMnB,KACpErM,KAAK2S,KAAKiE,EAAqB5W,KAAK4Z,WACtChD,EAAoBzE,UACpBnS,KAAK0b,YAAY9E,IACV,IAEP5W,KAAKqa,qBAAqBzD,IAErB,KAGDoC,EAAApZ,UAAA4Z,QAAR,SAAgB5C,EAAqDX,GACnE,QAAKjW,KAAK+H,SAASC,SAASnC,eAAeI,OAG3CjG,KAAKyb,gBAAgB7E,GACrBA,EAAoBpJ,MAAMxE,EAAIiN,EAAazI,MAAMxE,EAAI4N,EAAoBpJ,MAAMnB,KAC3ErM,KAAK2S,KAAKiE,EAAqB5W,KAAKuZ,WACtC3C,EAAoBzE,UACpBnS,KAAK0b,YAAY9E,IACV,IAEP5W,KAAKqa,qBAAqBzD,IAErB,KAGDoC,EAAApZ,UAAA6b,gBAAR,SAAwBxF,OAClB1W,EAAIS,KAAKkZ,gBAAgBxQ,QAAQuN,IAC1B,IAAP1W,IACFA,EAAIS,KAAKkZ,gBAAgBvG,KAAKsD,GAAgB,EAC9CjW,KAAKmZ,oBAAoB5Z,GAAK,IAEhCS,KAAKmZ,oBAAoB5Z,GAAGoT,KAAK,CAAC3J,EAAGiN,EAAazI,MAAMxE,EAAGD,EAAGkN,EAAazI,MAAMzE,KAG3EiQ,EAAApZ,UAAAya,qBAAR,SAA6BpE,OACrB1W,EAAIS,KAAKkZ,gBAAgBxQ,QAAQuN,GACjC0F,EAAe3b,KAAKmZ,oBAAoB5Z,GAAGgc,MAC5CI,IAGL1F,EAAazI,MAAMxE,EAAI2S,EAAa3S,EACpCiN,EAAazI,MAAMzE,EAAI4S,EAAa5S,EACpCkN,EAAa9D,UACRnS,KAAKmZ,oBAAoB5Z,GAAGG,SAC/BM,KAAKkZ,gBAAgBrG,OAAOtT,EAAG,GAC/BS,KAAKmZ,oBAAoBtG,OAAOtT,EAAG,MAI/ByZ,EAAApZ,UAAA8b,YAAR,SAAoBzF,GAClB,GAAIjW,KAAKiZ,YAAYvQ,QAAQuN,GAAgB,EAC3CjW,KAAKiZ,YAAYtG,KAAKsD,GACtBjW,KAAKoZ,gBAAgBzG,KAAK,CAAC,CAAC3J,EAAGiN,EAAapL,KAAK7B,GAAK,EAAGD,EAAGkN,EAAapL,KAAK9B,GAAK,GACjF,CAACC,EAAGiN,EAAazI,MAAMxE,EAAGD,EAAGkN,EAAazI,MAAMzE,SAC7C,KACCxJ,EAAIS,KAAKiZ,YAAYvQ,QAAQuN,GACnCjW,KAAKoZ,gBAAgB7Z,GAAGoT,KAAK,CAAC3J,EAAGiN,EAAazI,MAAMxE,EAAGD,EAAGkN,EAAazI,MAAMzE,MAIzEiQ,EAAApZ,UAAAgc,iBAAR,SAAyBrc,GACnBA,GAAK,IACPS,KAAKiZ,YAAYpG,OAAOtT,EAAG,GAC3BS,KAAKoZ,gBAAgBvG,OAAOtT,EAAG,KAI3ByZ,EAAApZ,UAAA4b,qBAAR,SAA6BvF,OACrB1W,EAAIS,KAAKiZ,YAAYvQ,QAAQuN,GAC/B1W,GAAK,IACPS,KAAKoZ,gBAAgB7Z,GAAGgc,MACnBvb,KAAKoZ,gBAAgB1Z,SACxBM,KAAKiZ,YAAYpG,OAAOtT,EAAG,GAC3BS,KAAKoZ,gBAAgBvG,OAAOtT,EAAG,MAK7ByZ,EAAApZ,UAAA+a,gBAAR,SAAwBJ,EAA4Chb,GAKlE,QAFIsc,EAAc7S,EAAGD,EAFf+S,EAAO9b,KAAKoZ,gBAAgB7Z,GAC9B+b,EAAIQ,EAAKpc,OAAS,EAElBgb,GAAS,EACNY,GAAK,EAAGA,IACbO,EAAeC,EAAKR,GACpBtS,EAAIuR,EAAW/M,MAAMxE,EACrBD,EAAIwR,EAAW/M,MAAMzE,EACrBwR,EAAW/M,MAAMxE,EAAI6S,EAAa7S,EAClCuR,EAAW/M,MAAMzE,EAAI8S,EAAa9S,EAC7B/I,KAAK+H,SAASkL,iBAAiBsH,EAAW/M,QAK7C+M,EAAW/M,MAAMxE,EAAIA,EACrBuR,EAAW/M,MAAMzE,EAAIA,IALrBwR,EAAWpI,UACX2J,EAAKjJ,OAAOyI,EAAI,EAAGQ,EAAKpc,OAAS4b,EAAI,GACrCZ,GAAS,GASb,OAHIoB,EAAKpc,OAAS,GAChBM,KAAK4b,iBAAiBrc,GAEjBmb,uBAjUVzR,EAAAA,sDAHOgO,KAsUR+B,EAxUA,GCAA,IAAA+C,EAAA,WAgDE,SAAAA,EAAY9F,EAA8ClO,EAA8CuC,GAAAtK,KAAAsK,KAAAA,EAFxGtK,KAAA8S,WAAsD,EAGpD9S,KAAKiW,aAAeA,EACpBjW,KAAK+H,SAAWA,EAChB/H,KAAK2X,UAAY,CACfjQ,QAAS,EACTE,QAAS,GAEX5H,KAAK8b,KAAO,GAqQhB,OAlQEC,EAAAnc,UAAAuJ,QAAA,WACMnJ,KAAK+H,SAASuB,cAChBtJ,KAAK+H,SAASuB,cAAa,UAEtBtJ,KAAKiW,oBACLjW,KAAK+H,gBACL/H,KAAK8S,UACR9S,KAAKgc,YACPhc,KAAKgc,YACLhc,KAAKic,eAITF,EAAAnc,UAAAsc,UAAA,SAAUhX,GAAV,IAAAuE,EAAAzJ,KACE,OAAQkF,EAAEiX,OACR,KAAK,EAEH,MACF,KAAK,EACL,KAAK,EAEH,OAGAnc,KAAK+H,SAAS4B,QAAQrF,WAAatE,KAAK+H,SAAS4B,QAAQrF,UAAUO,OACrE7E,KAAK+H,SAAS4B,QAAQrF,UAAUO,MAAM7E,KAAKiW,aAAapL,KAAM7K,KAAKiW,aAAc/Q,GAGnFA,EAAEkX,kBACFlX,EAAEmX,iBACFrc,KAAKsc,aAAetc,KAAKuc,SAASvS,KAAKhK,MACvCA,KAAKwc,iBAAmBxc,KAAKyc,SAASzS,KAAKhK,MAE3CA,KAAKsK,KAAKC,kBAAiB,WACzBd,EAAKiT,UAAYjT,EAAKwM,aAAarM,SAASC,OAAO,WAAY,YAAaJ,EAAK6S,cACjF7S,EAAKkT,UAAYlT,EAAK1B,SAAS6B,SAASC,OAAOJ,EAAK1B,SAAS+B,GAAI,YAAaL,EAAK6S,gBAErFtc,KAAK4c,QAAU5c,KAAKiW,aAAarM,SAASC,OAAO,WAAY,UAAW7J,KAAKwc,kBAC7Exc,KAAK6c,WAAa7c,KAAKiW,aAAarM,SAASC,OAAO,WAAY,aAAc7J,KAAKwc,kBACnFxc,KAAK8c,aAAe9c,KAAKiW,aAAarM,SAASC,OAAO,SAAU,OAAQ7J,KAAKwc,kBAC7Exc,KAAK+c,SAAW/c,KAAKiW,aAAarM,SAASC,OAAO,WAAY,WAAY7J,KAAKwc,kBAC/Exc,KAAKgd,YAAchd,KAAKiW,aAAarM,SAASC,OAAO,WAAY,cAAe7J,KAAKwc,kBACrFxc,KAAKiW,aAAarM,SAAS+E,SAAS3O,KAAKiW,aAAanM,GAAI,wBAC1D9J,KAAKwC,OAASxC,KAAK+H,SAASC,SAASxF,OACrCxC,KAAK8X,WAAa9X,KAAK+H,SAAS+B,GAAG+B,WAAa7L,KAAK+H,SAAS+B,GAAGgO,WACjE9X,KAAK+X,UAAY/X,KAAK+H,SAAS+B,GAAGiC,UAAY/L,KAAK+H,SAAS+B,GAAGiO,UAC/D/X,KAAK8L,KAAO9L,KAAKiW,aAAanK,KAAO9L,KAAKwC,OAC1CxC,KAAKgM,IAAMhM,KAAKiW,aAAajK,IAAMhM,KAAKwC,OACxCxC,KAAKoO,MAAQpO,KAAKiW,aAAa7H,MAC/BpO,KAAKqO,OAASrO,KAAKiW,aAAa5H,OAChCrO,KAAKid,SAAW/X,EAAEwC,QAAU1H,KAAK8X,WAAa9X,KAAKwC,OAASxC,KAAK8L,KACjE9L,KAAKkd,QAAUhY,EAAE0C,QAAU5H,KAAK+X,UAAY/X,KAAKwC,OAASxC,KAAKgM,IAC/DhM,KAAK+H,SAASsB,WAAarJ,KAAKiW,aAAazI,MAC7CxN,KAAK+H,SAASuB,cAAa,GAC3BtJ,KAAK2S,KAAO,IAAIqG,EAAahZ,KAAKiW,cAClCjW,KAAKwF,KAAO,IAAIwQ,EAAahW,KAAKiW,cAClCjW,KAAK+H,SAASmI,gBAAiB,EAC/BlQ,KAAK+H,SAASmK,aACdlS,KAAK8b,KAAKnJ,KAAK,CAAC3J,EAAGhJ,KAAKiW,aAAapL,KAAK7B,GAAK,EAAGD,EAAG/I,KAAKiW,aAAapL,KAAK9B,GAAK,KAGnFgT,EAAAnc,UAAA2c,SAAA,SAASrX,GACPA,EAAEkX,kBACFlX,EAAEmX,iBACF1V,EAAcc,gBAAgBvC,GAC9BlF,KAAK8X,WAAa9X,KAAK+H,SAAS+B,GAAG+B,WAAa7L,KAAK+H,SAAS+B,GAAGgO,WACjE9X,KAAK+X,UAAY/X,KAAK+H,SAAS+B,GAAGiC,UAAY/L,KAAK+H,SAAS+B,GAAGiO,UAC/DL,EAAO1X,KAAK+H,SAAU/H,KAAK8L,KAAM9L,KAAKgM,IAAKhM,KAAKoO,MAAOpO,KAAKqO,OAAQnJ,EAAGlF,KAAK2X,UAC1E3X,KAAKmd,uCAAuCnT,KAAKhK,OAEnDA,KAAKmd,uCAAuCjY,IAG9C6W,EAAAnc,UAAAud,uCAAA,SAAuCjY,GAAvC,IAAAuE,EAAAzJ,KACEA,KAAK8L,KAAO5G,EAAEwC,QAAU1H,KAAK8X,WAAa9X,KAAKid,SAC/Cjd,KAAKgM,IAAM9G,EAAE0C,QAAU5H,KAAK+X,UAAY/X,KAAKkd,QAC7Cld,KAAK4X,wBACL5X,KAAK2X,UAAUjQ,QAAUxC,EAAEwC,QAC3B1H,KAAK2X,UAAU/P,QAAU1C,EAAE0C,QAC3B5H,KAAKsK,KAAK8S,IAAG,WACX3T,EAAK1B,SAASmK,gBAIlB6J,EAAAnc,UAAA6c,SAAA,SAASvX,GAAT,IAAAuE,EAAAzJ,KACEkF,EAAEkX,kBACFlX,EAAEmX,iBAEFvD,IACA9Y,KAAK8c,eACL9c,KAAK0c,YACL1c,KAAK4c,UACL5c,KAAK6c,aACL7c,KAAK2c,YACL3c,KAAK+c,WACL/c,KAAKgd,cACLhd,KAAKiW,aAAarM,SAASmF,YAAY/O,KAAKiW,aAAanM,GAAI,wBAC7D9J,KAAK+H,SAASmI,gBAAiB,EAC/BlQ,KAAK+H,SAASmK,aACdlS,KAAK8b,KAAO,GACR9b,KAAK+H,SAAS4B,QAAQrF,WAAatE,KAAK+H,SAAS4B,QAAQrF,UAAUM,KACrEyY,QAAQC,QAAQtd,KAAK+H,SAAS4B,QAAQrF,UAAUM,KAAK5E,KAAKiW,aAAapL,KAAM7K,KAAKiW,aAAc/Q,IAC7FqY,KAAKvd,KAAKwd,SAASxT,KAAKhK,MAAOA,KAAKyd,WAAWzT,KAAKhK,OAEvDA,KAAKwd,WAEPhW,WAAU,WACJiC,EAAK1B,WACP0B,EAAK1B,SAASsB,WAAa,KAC3BI,EAAK1B,SAASuB,cAAa,OAKjCyS,EAAAnc,UAAA6d,WAAA,WACEzd,KAAKiW,aAAazI,MAAMxE,EAAIhJ,KAAKiW,aAAapL,KAAK7B,GAAK,EACxDhJ,KAAKiW,aAAazI,MAAMzE,EAAI/I,KAAKiW,aAAapL,KAAK9B,GAAK,EACxD/I,KAAKiW,aAAa9D,UACdnS,KAAK2S,MACP3S,KAAK2S,KAAK2H,eAERta,KAAKwF,MACPxF,KAAKwF,KAAK8Q,kBAERtW,KAAK2S,OACP3S,KAAK2S,KAAKxJ,iBACHnJ,KAAK2S,MAEV3S,KAAKwF,OACPxF,KAAKwF,KAAK2D,iBACHnJ,KAAKwF,OAIhBuW,EAAAnc,UAAA4d,SAAA,WACMxd,KAAK+H,SAASC,SAAS1D,UAAUQ,eAAiB9E,KAAK+H,SAAS4B,QAAQrF,WACvEtE,KAAK+H,SAAS4B,QAAQrF,UAAUS,uBAChC/E,KAAK8S,YAAgC,IAAnB9S,KAAK8S,WAAsB9S,KAAK8S,UAAUtF,OAC/DxN,KAAK+H,SAAS4B,QAAQrF,UAAUS,sBAAsB/E,KAAKiW,aAAapL,KAAM7K,KAAK8S,UAAUjI,KAAM7K,KAAK+H,UAE1G/H,KAAK8S,WAAY,EACjB9S,KAAKiW,aAAa9D,UAClBnS,KAAKiW,aAAaO,iBAAiBxW,KAAKiW,aAAazI,MAAOxN,KAAKiW,aAAapL,MAC1E7K,KAAK2S,MACP3S,KAAK2S,KAAK6H,iBAERxa,KAAKwF,MACPxF,KAAKwF,KAAK+Q,cAERvW,KAAK2S,OACP3S,KAAK2S,KAAKxJ,iBACHnJ,KAAK2S,MAEV3S,KAAKwF,OACPxF,KAAKwF,KAAK2D,iBACHnJ,KAAKwF,OAIhBuW,EAAAnc,UAAAgY,sBAAA,WAgBE,GAfA5X,KAAK+H,SAASsB,WAAarJ,KAAKiW,aAAazI,MAC7CxN,KAAK0d,UAAY1d,KAAK+H,SAASkE,kBAAkBjM,KAAK8L,KAAMI,KAAK+B,OACjEjO,KAAK2d,UAAY3d,KAAK+H,SAASqE,kBAAkBpM,KAAKgM,IAAKE,KAAK+B,OAChEjO,KAAK4d,gBAAkB5d,KAAKiW,aAAazI,MAAMxE,EAC/ChJ,KAAK6d,gBAAkB7d,KAAKiW,aAAazI,MAAMzE,EAC/C/I,KAAKiW,aAAazI,MAAMxE,EAAIhJ,KAAK0d,UAC7B1d,KAAK+H,SAASgL,mBAAmB/S,KAAKiW,aAAazI,SACrDxN,KAAKiW,aAAazI,MAAMxE,EAAIhJ,KAAK4d,iBAEnC5d,KAAKiW,aAAazI,MAAMzE,EAAI/I,KAAK2d,UAC7B3d,KAAK+H,SAASgL,mBAAmB/S,KAAKiW,aAAazI,SACrDxN,KAAKiW,aAAazI,MAAMzE,EAAI/I,KAAK6d,iBAEnC7d,KAAK+H,SAASsI,aAAa/B,gBAAgBtO,KAAKiW,aAAarM,SAAU5J,KAAKiW,aAAanM,GAAI9J,KAAK8L,KAAM9L,KAAKgM,KAEzGhM,KAAK4d,kBAAoB5d,KAAKiW,aAAazI,MAAMxE,GAAKhJ,KAAK6d,kBAAoB7d,KAAKiW,aAAazI,MAAMzE,EAAG,KACtG8S,EAAe7b,KAAK8b,KAAK9b,KAAK8b,KAAKpc,OAAS,GAC9Cqa,EAAY,GACZ8B,EAAa7S,EAAIhJ,KAAKiW,aAAazI,MAAMxE,EAC3C+Q,EAAY/Z,KAAK2S,KAAKiH,SACbiC,EAAa7S,EAAIhJ,KAAKiW,aAAazI,MAAMxE,EAClD+Q,EAAY/Z,KAAK2S,KAAK4G,SACbsC,EAAa9S,EAAI/I,KAAKiW,aAAazI,MAAMzE,EAClDgR,EAAY/Z,KAAK2S,KAAKkH,UACbgC,EAAa9S,EAAI/I,KAAKiW,aAAazI,MAAMzE,IAClDgR,EAAY/Z,KAAK2S,KAAKmH,WAExB9Z,KAAK2S,KAAKjN,UAAUqU,EAAW/Z,KAAK+H,SAASC,SAASrC,mBACtD3F,KAAKwF,KAAK2Q,YACVnW,KAAK8S,UAAY9S,KAAK+H,SAAS0E,eAAezM,KAAKiW,aAAazI,OAC5DxN,KAAK8S,WACP9S,KAAKiW,aAAazI,MAAMxE,EAAIhJ,KAAK4d,gBACjC5d,KAAKiW,aAAazI,MAAMzE,EAAI/I,KAAK6d,gBAC7B7d,KAAK+H,SAASC,SAAS1D,UAAUQ,gBAAoC,IAAnB9E,KAAK8S,WAAsB9S,KAAK8S,UAAUtF,QAC9FxN,KAAK+H,SAASsB,WAAa,OAG7BrJ,KAAK8b,KAAKnJ,KAAK,CAAC3J,EAAGhJ,KAAKiW,aAAazI,MAAMxE,EAAGD,EAAG/I,KAAKiW,aAAazI,MAAMzE,IAE3E/I,KAAK2S,KAAK8H,gBAEZza,KAAK+H,SAASuB,cAAa,IAG7ByS,EAAAnc,UAAAyS,OAAA,eACQyL,EAAa9d,KAAKiW,aAAaU,gBAChC3W,KAAKwE,SAAWsZ,GACnB9d,KAAKwE,SAAWxE,KAAKwE,QACrBxE,KAAK+d,kBAAoB/d,KAAKge,eAAehU,KAAKhK,MAClDA,KAAKgc,UAAYhc,KAAKiW,aAAarM,SAASC,OAAO7J,KAAKiW,aAAanM,GAAI,YAAa9J,KAAK+d,mBAC3F/d,KAAKic,WAAajc,KAAKiW,aAAarM,SAASC,OAAO7J,KAAKiW,aAAanM,GAAI,aAAc9J,KAAK+d,oBACpF/d,KAAKwE,UAAYsZ,IAC1B9d,KAAKwE,SAAWxE,KAAKwE,QACrBxE,KAAKgc,YACLhc,KAAKic,eAITF,EAAAnc,UAAAoe,eAAA,SAAe9Y,GAAf,IAAAuE,EAAAzJ,KACE,KAAIkF,EAAEgD,OAAOK,aAAa,UAAYrD,EAAEgD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,oCAAsC,GAG1H/B,EAAcmB,0BAA0B9H,KAAK+H,SAAU7C,IAI3D,GADAyB,EAAcc,gBAAgBvC,GACzBlF,KAAK+H,SAASC,SAAS1D,UAAUC,eAIhC4C,EAAUK,WAAU,WACxBiC,EAAKyS,UAAUhX,GACfuY,KACCzd,KAAK+H,SAASC,SAAS1D,UAAUC,YAC9B0Z,EAAcje,KAAKiW,aAAarM,SAASC,OAAO,WAAY,UAAW4T,GACvES,EAAmBle,KAAKiW,aAAarM,SAASC,OAAO,WAAY,aAAc4T,GAC/EX,EAAe9c,KAAKiW,aAAarM,SAASC,OAAO,SAAU,OAAQ4T,GACnEU,EAAkBne,KAAKiW,aAAarM,SAASC,OAAO,WAAY,YAItE,SAAoBuU,GAClBzX,EAAcc,gBAAgB2W,IAC1BlS,KAAKM,IAAI4R,EAAU1W,QAAUxC,EAAEwC,SAAW,GAAKwE,KAAKM,IAAI4R,EAAUxW,QAAU1C,EAAE0C,SAAW,IAC3F6V,MANEY,EAAiBre,KAAKiW,aAAarM,SAASC,OAAO,WAAY,WAAY4T,GAC3Ea,EAAoBte,KAAKiW,aAAarM,SAASC,OAAO,WAAY,cAAe4T,QAZrFzd,KAAKkc,UAAUhX,GAqBjB,SAASuY,IACPlW,aAAaJ,GACb2V,IACAmB,IACAC,IACAC,IACAE,IACAC,0BAhTLrV,EAAAA,sDAHOgO,SACAvK,SAPYoJ,EAAAA,UA4TpBiG,EA5TA,GCAA,IAAAwC,EAAA,WAyBE,SAAAA,EAAYtI,GACVjW,KAAKiZ,YAAc,GACnBjZ,KAAKoZ,gBAAkB,GACvBpZ,KAAKiW,aAAeA,EACpBjW,KAAK+H,SAAWkO,EAAalO,SAC7B/H,KAAKsZ,WAAa,CAChBC,SAAUvZ,KAAKwZ,QACfI,SAAU5Z,KAAK2Z,QACfE,UAAW7Z,KAAKyZ,SAChBK,UAAW9Z,KAAK0Z,UAElB1Z,KAAK8Z,UAAY,YACjB9Z,KAAK6Z,UAAY,YACjB7Z,KAAKuZ,SAAW,WAChBvZ,KAAK4Z,SAAW,WA6MpB,OA1ME2E,EAAA3e,UAAAuJ,QAAA,kBACSnJ,KAAK+H,gBACL/H,KAAKiW,cAGdsI,EAAA3e,UAAA8F,UAAA,SAAUqU,GACR,QAAI/Z,KAAK+H,SAASC,SAAS9B,iBAClBlG,KAAK2S,KAAK3S,KAAKiW,aAAc8D,IAMxCwE,EAAA3e,UAAA0a,aAAA,WAIE,QADIC,EAFAhb,EAAI,EACF+N,EAAYtN,KAAKiZ,YAAYvZ,OAE5BH,EAAI+N,EAAG/N,KACZgb,EAAava,KAAKiZ,YAAY1Z,IACnBiO,MAAMxE,EAAIuR,EAAW1P,KAAK7B,GAAK,EAC1CuR,EAAW/M,MAAMzE,EAAIwR,EAAW1P,KAAK9B,GAAK,EAC1CwR,EAAW/M,MAAMnB,KAAOkO,EAAW1P,KAAKwB,MAAQ,EAChDkO,EAAW/M,MAAMgR,IAAMjE,EAAW1P,KAAK2T,KAAO,EAC9CjE,EAAWpI,UAEbnS,KAAKiZ,YAAc,GACnBjZ,KAAKoZ,gBAAkB,IAGzBmF,EAAA3e,UAAA4a,eAAA,WAIE,QADID,EAFAhb,EAAI,EACF+N,EAAYtN,KAAKiZ,YAAYvZ,OAE5BH,EAAI+N,EAAG/N,KACZgb,EAAava,KAAKiZ,YAAY1Z,IACnBiX,iBAAiB+D,EAAW/M,MAAO+M,EAAW1P,MAE3D7K,KAAKiZ,YAAc,GACnBjZ,KAAKoZ,gBAAkB,IAGzBmF,EAAA3e,UAAA6a,cAAA,WAGE,QAFIlb,EAAYS,KAAKiZ,YAAYvZ,OAAS,EACtCgb,GAAS,EACNnb,GAAK,EAAGA,IACTS,KAAK2a,gBAAgB3a,KAAKiZ,YAAY1Z,GAAIA,KAC5Cmb,GAAS,GAGTA,GACF1a,KAAKya,iBAID8D,EAAA3e,UAAA+S,KAAR,SAAasD,EAA8C8D,OACnDrD,EAA6B1W,KAAK+H,SAAS0E,eAAewJ,EAAazI,OAC7E,GAAIkJ,IAAmD,IAA1BA,GAC3BA,IAA0B1W,KAAKiW,cAAgBS,EAAsB+H,gBACrE,GAAIze,KAAKsZ,WAAWS,GAAWja,KAAKE,KAAM0W,EAAuBT,EAAc8D,GAC7E,OAAO,OAEJ,IAA8B,IAA1BrD,EACT,OAAO,EAET,OAAO,GAGD6H,EAAA3e,UAAA6Z,SAAR,SAAiB7C,EAAqDX,EACrD8D,OACT2E,EAAU9H,EAAoBpJ,MAAMzE,EACpC4V,EAAa/H,EAAoBpJ,MAAMlB,KAG7C,OAFAsK,EAAoBpJ,MAAMzE,EAAIkN,EAAazI,MAAMzE,EAAIkN,EAAazI,MAAMlB,KACxEsK,EAAoBpJ,MAAMlB,KAAOqS,EAAaD,EAAU9H,EAAoBpJ,MAAMzE,EAC7E2G,EAAkBY,uBAAuBsG,EAAoBpJ,MAAOyI,EAAazI,QAChFxN,KAAK+H,SAASgL,mBAAmB6D,EAAoBpJ,QAMzDoJ,EAAoBpJ,MAAMzE,EAAI2V,EAC9B9H,EAAoBpJ,MAAMlB,KAAOqS,GAE5B,IARL/H,EAAoBzE,UACpBnS,KAAK0b,YAAY9E,GACjB5W,KAAK2S,KAAKsD,EAAc8D,IACjB,IAQHwE,EAAA3e,UAAA8Z,SAAR,SAAiB9C,EAAqDX,EACrD8D,OACT4E,EAAa/H,EAAoBpJ,MAAMlB,KAE7C,OADAsK,EAAoBpJ,MAAMlB,KAAO2J,EAAazI,MAAMzE,EAAI6N,EAAoBpJ,MAAMzE,EAC7E2G,EAAkBY,uBAAuBsG,EAAoBpJ,MAAOyI,EAAazI,QAChFxN,KAAK+H,SAASgL,mBAAmB6D,EAAoBpJ,QAMzDoJ,EAAoBpJ,MAAMlB,KAAOqS,GAE5B,IAPL/H,EAAoBzE,UACpBnS,KAAK0b,YAAY9E,GACjB5W,KAAK2S,KAAKsD,EAAc8D,IACjB,IAOHwE,EAAA3e,UAAA+Z,QAAR,SAAgB/C,EAAqDX,EACrD8D,OACR6E,EAAUhI,EAAoBpJ,MAAMxE,EACpC6V,EAAajI,EAAoBpJ,MAAMnB,KAG7C,OAFAuK,EAAoBpJ,MAAMxE,EAAIiN,EAAazI,MAAMxE,EAAIiN,EAAazI,MAAMnB,KACxEuK,EAAoBpJ,MAAMnB,KAAOwS,EAAaD,EAAUhI,EAAoBpJ,MAAMxE,EAC7E0G,EAAkBY,uBAAuBsG,EAAoBpJ,MAAOyI,EAAazI,QAChFxN,KAAK+H,SAASgL,mBAAmB6D,EAAoBpJ,QAMzDoJ,EAAoBpJ,MAAMxE,EAAI4V,EAC9BhI,EAAoBpJ,MAAMnB,KAAOwS,GAE5B,IARLjI,EAAoBzE,UACpBnS,KAAK0b,YAAY9E,GACjB5W,KAAK2S,KAAKsD,EAAc8D,IACjB,IAQHwE,EAAA3e,UAAA4Z,QAAR,SAAgB5C,EAAqDX,EACrD8D,OACR8E,EAAajI,EAAoBpJ,MAAMnB,KAE7C,OADAuK,EAAoBpJ,MAAMnB,KAAO4J,EAAazI,MAAMxE,EAAI4N,EAAoBpJ,MAAMxE,EAC7E0G,EAAkBY,uBAAuBsG,EAAoBpJ,MAAOyI,EAAazI,QAChFxN,KAAK+H,SAASgL,mBAAmB6D,EAAoBpJ,QAMzDoJ,EAAoBpJ,MAAMnB,KAAOwS,GAE5B,IAPLjI,EAAoBzE,UACpBnS,KAAK0b,YAAY9E,GACjB5W,KAAK2S,KAAKsD,EAAc8D,IACjB,IAOHwE,EAAA3e,UAAA8b,YAAR,SAAoBzF,GAClB,GAAIjW,KAAKiZ,YAAYvQ,QAAQuN,GAAgB,EAC3CjW,KAAKiZ,YAAYtG,KAAKsD,GACtBjW,KAAKoZ,gBAAgBzG,KAAK,CACxB,CACE3J,EAAGiN,EAAapL,KAAK7B,GAAK,EAC1BD,EAAGkN,EAAapL,KAAK9B,GAAK,EAC1BsD,KAAM4J,EAAapL,KAAKwB,MAAQ,EAChCC,KAAM2J,EAAapL,KAAKyB,MAAQ,GAElC,CACEtD,EAAGiN,EAAazI,MAAMxE,EACtBD,EAAGkN,EAAazI,MAAMzE,EACtBsD,KAAM4J,EAAazI,MAAMnB,KACzBC,KAAM2J,EAAazI,MAAMlB,YAExB,KACC/M,EAAIS,KAAKiZ,YAAYvQ,QAAQuN,GACnCjW,KAAKoZ,gBAAgB7Z,GAAGoT,KACtB,CACE3J,EAAGiN,EAAazI,MAAMxE,EACtBD,EAAGkN,EAAazI,MAAMzE,EACtBsD,KAAM4J,EAAazI,MAAMnB,KACzBC,KAAM2J,EAAazI,MAAMlB,SAKzBiS,EAAA3e,UAAAgc,iBAAR,SAAyBrc,GACnBA,GAAK,IACPS,KAAKiZ,YAAYpG,OAAOtT,EAAG,GAC3BS,KAAKoZ,gBAAgBvG,OAAOtT,EAAG,KAI3Bgf,EAAA3e,UAAA+a,gBAAR,SAAwBJ,EAA4Chb,GAIlE,QADIsc,EAAoE7S,EAAGD,EAAGsD,EAAMC,EAF9EwP,EAAO9b,KAAKoZ,gBAAgB7Z,GAC9B+b,EAAIQ,EAAKpc,OAAS,EAEf4b,GAAK,EAAGA,IACbO,EAAeC,EAAKR,GACpBtS,EAAIuR,EAAW/M,MAAMxE,EACrBD,EAAIwR,EAAW/M,MAAMzE,EACrBsD,EAAOkO,EAAW/M,MAAMnB,KACxBC,EAAOiO,EAAW/M,MAAMlB,KACxBiO,EAAW/M,MAAMxE,EAAI6S,EAAa7S,EAClCuR,EAAW/M,MAAMzE,EAAI8S,EAAa9S,EAClCwR,EAAW/M,MAAMnB,KAAOwP,EAAaxP,KACrCkO,EAAW/M,MAAMlB,KAAOuP,EAAavP,KAChCtM,KAAK+H,SAASkL,iBAAiBsH,EAAW/M,QAI7C+M,EAAW/M,MAAMxE,EAAIA,EACrBuR,EAAW/M,MAAMzE,EAAIA,EACrBwR,EAAW/M,MAAMnB,KAAOA,EACxBkO,EAAW/M,MAAMlB,KAAOA,IANxBiO,EAAWpI,UACX2J,EAAKjJ,OAAOyI,EAAI,EAAGQ,EAAKpc,OAAS,EAAI4b,IAQzC,OAAIQ,EAAKpc,OAAS,IAChBM,KAAK4b,iBAAiBrc,IACf,wBAzOZ0J,EAAAA,sDAJOgO,KAiPRsH,EApPA,GCAA,IAAAO,EAAA,WAkDE,SAAAA,EAAY7I,EAA8ClO,EAA8CuC,GAAAtK,KAAAsK,KAAAA,EACtGtK,KAAKiW,aAAeA,EACpBjW,KAAK+H,SAAWA,EAChB/H,KAAK2X,UAAY,CACfjQ,QAAS,EACTE,QAAS,GAEX5H,KAAK+e,WAAa,CAAC,EAAG,EAAG,EAAG,GAC5B/e,KAAK6X,sBAAwB,CAAC1S,GAAG,EAAOD,GAAG,EAAO1F,GAAG,EAAOF,GAAG,GAgWnE,OA7VEwf,EAAAlf,UAAAuJ,QAAA,WACMnJ,KAAK+H,SAASuB,cAChBtJ,KAAK+H,SAASuB,sBAETtJ,KAAKiW,oBACLjW,KAAK+H,UAGd+W,EAAAlf,UAAAsc,UAAA,SAAUhX,GAAV,IAAAuE,EAAAzJ,KACE,OAAQkF,EAAEiX,OACR,KAAK,EAEH,MACF,KAAK,EACL,KAAK,EAEH,OAEAnc,KAAK+H,SAAS4B,QAAQ3E,WAAahF,KAAK+H,SAAS4B,QAAQ3E,UAAUH,OACrE7E,KAAK+H,SAAS4B,QAAQ3E,UAAUH,MAAM7E,KAAKiW,aAAapL,KAAM7K,KAAKiW,aAAc/Q,GAEnFA,EAAEkX,kBACFlX,EAAEmX,iBACFrc,KAAKsc,aAAetc,KAAKuc,SAASvS,KAAKhK,MACvCA,KAAKwc,iBAAmBxc,KAAKyc,SAASzS,KAAKhK,MAC3CA,KAAKsK,KAAKC,kBAAiB,WACzBd,EAAKiT,UAAYjT,EAAKwM,aAAarM,SAASC,OAAO,WAAY,YAAaJ,EAAK6S,cACjF7S,EAAKkT,UAAYlT,EAAK1B,SAAS6B,SAASC,OAAOJ,EAAK1B,SAAS+B,GAAI,YAAaL,EAAK6S,gBAErFtc,KAAK4c,QAAU5c,KAAKiW,aAAarM,SAASC,OAAO,WAAY,UAAW7J,KAAKwc,kBAC7Exc,KAAK6c,WAAa7c,KAAKiW,aAAarM,SAASC,OAAO,WAAY,aAAc7J,KAAKwc,kBACnFxc,KAAK8c,aAAe9c,KAAKiW,aAAarM,SAASC,OAAO,SAAU,OAAQ7J,KAAKwc,kBAC7Exc,KAAK+c,SAAW/c,KAAKiW,aAAarM,SAASC,OAAO,WAAY,WAAY7J,KAAKwc,kBAC/Exc,KAAKgd,YAAchd,KAAKiW,aAAarM,SAASC,OAAO,WAAY,cAAe7J,KAAKwc,kBAErFxc,KAAKiW,aAAarM,SAAS+E,SAAS3O,KAAKiW,aAAanM,GAAI,0BAC1D9J,KAAK2X,UAAUjQ,QAAUxC,EAAEwC,QAC3B1H,KAAK2X,UAAU/P,QAAU1C,EAAE0C,QAC3B5H,KAAK8L,KAAO9L,KAAKiW,aAAanK,KAC9B9L,KAAKgM,IAAMhM,KAAKiW,aAAajK,IAC7BhM,KAAKoO,MAAQpO,KAAKiW,aAAa7H,MAC/BpO,KAAKqO,OAASrO,KAAKiW,aAAa5H,OAChCrO,KAAKgf,OAAShf,KAAKiW,aAAajK,IAAMhM,KAAKiW,aAAa5H,OACxDrO,KAAKif,MAAQjf,KAAKiW,aAAanK,KAAO9L,KAAKiW,aAAa7H,MACxDpO,KAAKwC,OAASxC,KAAK+H,SAASC,SAASxF,OACrCxC,KAAK8X,WAAa9X,KAAK+H,SAAS+B,GAAG+B,WAAa7L,KAAK+H,SAAS+B,GAAGgO,WACjE9X,KAAK+X,UAAY/X,KAAK+H,SAAS+B,GAAGiC,UAAY/L,KAAK+H,SAAS+B,GAAGiO,UAC/D/X,KAAKid,SAAW/X,EAAEwC,QAAU1H,KAAK8X,WAAa9X,KAAK8L,KACnD9L,KAAKkf,UAAYha,EAAEwC,QAAU1H,KAAK8X,WAAa9X,KAAKif,MACpDjf,KAAKkd,QAAUhY,EAAE0C,QAAU5H,KAAK+X,UAAY/X,KAAKgM,IACjDhM,KAAKmf,WAAaja,EAAE0C,QAAU5H,KAAK+X,UAAY/X,KAAKgf,OACpDhf,KAAKof,UAAYpf,KAAK+H,SAAS4M,kBAAkB3U,KAAKiW,aAAazI,MAAMnL,aAAerC,KAAK+H,SAASC,SAAS3F,aAC3GrC,KAAKwC,OACTxC,KAAKqf,SAAWrf,KAAK+H,SAAS2M,kBAAkB1U,KAAKiW,aAAazI,MAAMpL,aAAepC,KAAK+H,SAASC,SAAS5F,aAC1GpC,KAAKwC,OACTxC,KAAK+H,SAASsB,WAAarJ,KAAKiW,aAAazI,MAC7CxN,KAAK+H,SAASuB,eACdtJ,KAAK2S,KAAO,IAAIqG,EAAahZ,KAAKiW,cAClCjW,KAAKsf,WAAa,IAAIf,EAAmBve,KAAKiW,cAC9CjW,KAAK+H,SAASmI,gBAAiB,EAC/BlQ,KAAK+H,SAASmK,aAEVhN,EAAEgD,OAAOK,aAAa,UAAYrD,EAAEgD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,GACrG1I,KAAK6X,sBAAsBrY,GAAI,EAC/BQ,KAAKuf,kBAAoBvf,KAAKwf,SACrBta,EAAEgD,OAAOK,aAAa,UAAYrD,EAAEgD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,GAC5G1I,KAAK6X,sBAAsB1S,GAAI,EAC/BnF,KAAKuf,kBAAoBvf,KAAKyf,SACrBva,EAAEgD,OAAOK,aAAa,UAAYrD,EAAEgD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,GAC5G1I,KAAK6X,sBAAsBvY,GAAI,EAC/BU,KAAKuf,kBAAoBvf,KAAK0f,SACrBxa,EAAEgD,OAAOK,aAAa,UAAYrD,EAAEgD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,GAC5G1I,KAAK6X,sBAAsB3S,GAAI,EAC/BlF,KAAKuf,kBAAoBvf,KAAK2f,SACrBza,EAAEgD,OAAOK,aAAa,UAAYrD,EAAEgD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,GAC7G1I,KAAK6X,sBAAsBrY,GAAI,EAC/BQ,KAAK6X,sBAAsB1S,GAAI,EAC/BnF,KAAKuf,kBAAoBvf,KAAK4f,UACrB1a,EAAEgD,OAAOK,aAAa,UAAYrD,EAAEgD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,GAC7G1I,KAAK6X,sBAAsBrY,GAAI,EAC/BQ,KAAK6X,sBAAsB3S,GAAI,EAC/BlF,KAAKuf,kBAAoBvf,KAAK6f,UACrB3a,EAAEgD,OAAOK,aAAa,UAAYrD,EAAEgD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,GAC7G1I,KAAK6X,sBAAsBvY,GAAI,EAC/BU,KAAK6X,sBAAsB1S,GAAI,EAC/BnF,KAAKuf,kBAAoBvf,KAAK8f,UACrB5a,EAAEgD,OAAOK,aAAa,UAAYrD,EAAEgD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,IAC7G1I,KAAK6X,sBAAsBvY,GAAI,EAC/BU,KAAK6X,sBAAsB3S,GAAI,EAC/BlF,KAAKuf,kBAAoBvf,KAAK+f,WAIlCjB,EAAAlf,UAAA2c,SAAA,SAASrX,GAAT,IAAAuE,EAAAzJ,KACEkF,EAAEkX,kBACFlX,EAAEmX,iBACF1V,EAAcc,gBAAgBvC,GAC9BlF,KAAK+X,UAAY/X,KAAK+H,SAAS+B,GAAGiC,UAAY/L,KAAK+H,SAAS+B,GAAGiO,UAC/D/X,KAAK8X,WAAa9X,KAAK+H,SAAS+B,GAAG+B,WAAa7L,KAAK+H,SAAS+B,GAAGgO,WACjEJ,EAAO1X,KAAK+H,SAAU/H,KAAK8L,KAAM9L,KAAKgM,IAAKhM,KAAKoO,MAAOpO,KAAKqO,OAAQnJ,EAAGlF,KAAK2X,UAAW3X,KAAKuf,kBAAkBvV,KAAKhK,OAAO,EACxHA,KAAK6X,uBACP7X,KAAKuf,kBAAkBra,GAEvBlF,KAAK2X,UAAUjQ,QAAUxC,EAAEwC,QAC3B1H,KAAK2X,UAAU/P,QAAU1C,EAAE0C,QAC3B5H,KAAKsK,KAAK8S,IAAG,WACX3T,EAAK1B,SAASmK,gBAIlB4M,EAAAlf,UAAA6c,SAAA,SAASvX,GAAT,IAAAuE,EAAAzJ,KACEkF,EAAEkX,kBACFlX,EAAEmX,iBACFvD,IACA9Y,KAAK0c,YACL1c,KAAK4c,UACL5c,KAAK6c,aACL7c,KAAK8c,eACL9c,KAAK2c,YACL3c,KAAK+c,WACL/c,KAAKgd,cACLhd,KAAK+H,SAASmI,gBAAiB,EAC/BlQ,KAAK+H,SAASmK,aACVlS,KAAK+H,SAAS4B,QAAQ3E,WAAahF,KAAK+H,SAAS4B,QAAQ3E,UAAUJ,KACrEyY,QAAQC,QAAQtd,KAAK+H,SAAS4B,QAAQ3E,UAAUJ,KAAK5E,KAAKiW,aAAapL,KAAM7K,KAAKiW,aAAc/Q,IAC7FqY,KAAKvd,KAAKggB,WAAWhW,KAAKhK,MAAOA,KAAKigB,aAAajW,KAAKhK,OAE3DA,KAAKggB,aAEPxY,WAAU,WACRiC,EAAKwM,aAAarM,SAASmF,YAAYtF,EAAKwM,aAAanM,GAAI,0BACzDL,EAAK1B,WACP0B,EAAK1B,SAASsB,WAAa,KAC3BI,EAAK1B,SAASuB,mBAKpBwV,EAAAlf,UAAAqgB,aAAA,WACEjgB,KAAKiW,aAAazI,MAAMnB,KAAOrM,KAAKiW,aAAapL,KAAKwB,MAAQ,EAC9DrM,KAAKiW,aAAazI,MAAMlB,KAAOtM,KAAKiW,aAAapL,KAAKyB,MAAQ,EAC9DtM,KAAKiW,aAAazI,MAAMxE,EAAIhJ,KAAKiW,aAAapL,KAAK7B,GAAK,EACxDhJ,KAAKiW,aAAazI,MAAMzE,EAAI/I,KAAKiW,aAAapL,KAAK9B,GAAK,EACxD/I,KAAKiW,aAAa9D,UAClBnS,KAAK2S,KAAK2H,eACVta,KAAKsf,WAAWhF,eAChBta,KAAK2S,KAAKxJ,iBACHnJ,KAAK2S,KACZ3S,KAAKsf,WAAWnW,iBACTnJ,KAAKsf,YAGdR,EAAAlf,UAAAogB,WAAA,WACEhgB,KAAKiW,aAAa9D,UAClBnS,KAAKiW,aAAaO,iBAAiBxW,KAAKiW,aAAazI,MAAOxN,KAAKiW,aAAapL,MAC9E7K,KAAK2S,KAAK6H,iBACVxa,KAAKsf,WAAW9E,iBAChBxa,KAAK2S,KAAKxJ,iBACHnJ,KAAK2S,KACZ3S,KAAKsf,WAAWnW,iBACTnJ,KAAKsf,YAGdR,EAAAlf,UAAA4f,QAAA,SAAQta,GAQN,GAPAlF,KAAKgM,IAAM9G,EAAE0C,QAAU5H,KAAK+X,UAAY/X,KAAKkd,QAC7Cld,KAAKqO,OAASrO,KAAKgf,OAAShf,KAAKgM,IAC7BhM,KAAKof,UAAYpf,KAAKqO,SACxBrO,KAAKqO,OAASrO,KAAKof,UACnBpf,KAAKgM,IAAMhM,KAAKgf,OAAShf,KAAKof,WAEhCpf,KAAKkgB,YAAclgB,KAAK+H,SAASqE,kBAAkBpM,KAAKgM,IAAMhM,KAAKwC,OAAQ0J,KAAKC,OAC5EnM,KAAKiW,aAAazI,MAAMzE,IAAM/I,KAAKkgB,YAAa,CAOlD,GANAlgB,KAAK+e,WAAW,GAAK/e,KAAKiW,aAAazI,MAAMzE,EAC7C/I,KAAK+e,WAAW,GAAK/e,KAAKiW,aAAazI,MAAMlB,KAC7CtM,KAAKiW,aAAazI,MAAMlB,MAAQtM,KAAKiW,aAAazI,MAAMzE,EAAI/I,KAAKkgB,YACjElgB,KAAKiW,aAAazI,MAAMzE,EAAI/I,KAAKkgB,YACjClgB,KAAKsf,WAAW5Z,UAAU1F,KAAKsf,WAAWxF,WAC1C9Z,KAAK2S,KAAKjN,UAAU1F,KAAK2S,KAAKmH,UAAW9Z,KAAK+H,SAASC,SAASpC,qBAC5D5F,KAAK+H,SAAS0E,eAAezM,KAAKiW,aAAazI,OAKjD,OAJAxN,KAAKiW,aAAazI,MAAMzE,EAAI/I,KAAK+e,WAAW,GAC5C/e,KAAKiW,aAAazI,MAAMlB,KAAOtM,KAAK+e,WAAW,GAC/C/e,KAAKmgB,WAAWngB,KAAK+H,SAAS4M,kBAAkB3U,KAAKiW,aAAazI,MAAMzE,SACxE/I,KAAKogB,cAAcpgB,KAAK+H,SAAS4M,kBAAkB3U,KAAKiW,aAAazI,MAAMlB,MAAQtM,KAAKwC,QAGxFxC,KAAK+H,SAASuB,eAEhBtJ,KAAKsf,WAAW7E,gBAChBza,KAAK2S,KAAK8H,gBAEZza,KAAKmgB,WAAWngB,KAAKgM,KACrBhM,KAAKogB,cAAcpgB,KAAKqO,SAG1ByQ,EAAAlf,UAAA6f,QAAA,SAAQva,GAQN,GAPAlF,KAAK8L,KAAO5G,EAAEwC,QAAU1H,KAAK8X,WAAa9X,KAAKid,SAC/Cjd,KAAKoO,MAAQpO,KAAKif,MAAQjf,KAAK8L,KAC3B9L,KAAKqf,SAAWrf,KAAKoO,QACvBpO,KAAKoO,MAAQpO,KAAKqf,SAClBrf,KAAK8L,KAAO9L,KAAKif,MAAQjf,KAAKqf,UAEhCrf,KAAKkgB,YAAclgB,KAAK+H,SAASkE,kBAAkBjM,KAAK8L,KAAO9L,KAAKwC,OAAQ0J,KAAKC,OAC7EnM,KAAKiW,aAAazI,MAAMxE,IAAMhJ,KAAKkgB,YAAa,CAOlD,GANAlgB,KAAK+e,WAAW,GAAK/e,KAAKiW,aAAazI,MAAMxE,EAC7ChJ,KAAK+e,WAAW,GAAK/e,KAAKiW,aAAazI,MAAMnB,KAC7CrM,KAAKiW,aAAazI,MAAMnB,MAAQrM,KAAKiW,aAAazI,MAAMxE,EAAIhJ,KAAKkgB,YACjElgB,KAAKiW,aAAazI,MAAMxE,EAAIhJ,KAAKkgB,YACjClgB,KAAKsf,WAAW5Z,UAAU1F,KAAKsf,WAAW/F,UAC1CvZ,KAAK2S,KAAKjN,UAAU1F,KAAK2S,KAAK4G,SAAUvZ,KAAK+H,SAASC,SAASpC,qBAC3D5F,KAAK+H,SAAS0E,eAAezM,KAAKiW,aAAazI,OAKjD,OAJAxN,KAAKiW,aAAazI,MAAMxE,EAAIhJ,KAAK+e,WAAW,GAC5C/e,KAAKiW,aAAazI,MAAMnB,KAAOrM,KAAK+e,WAAW,GAC/C/e,KAAKqgB,YAAYrgB,KAAK+H,SAAS2M,kBAAkB1U,KAAKiW,aAAazI,MAAMxE,SACzEhJ,KAAKsgB,aAAatgB,KAAK+H,SAAS2M,kBAAkB1U,KAAKiW,aAAazI,MAAMnB,MAAQrM,KAAKwC,QAGvFxC,KAAK+H,SAASuB,eAEhBtJ,KAAKsf,WAAW7E,gBAChBza,KAAK2S,KAAK8H,gBAEZza,KAAKqgB,YAAYrgB,KAAK8L,MACtB9L,KAAKsgB,aAAatgB,KAAKoO,QAGzB0Q,EAAAlf,UAAA8f,QAAA,SAAQxa,GAON,GANAlF,KAAKqO,OAASnJ,EAAE0C,QAAU5H,KAAK+X,UAAY/X,KAAKmf,WAAanf,KAAKgM,IAC9DhM,KAAKof,UAAYpf,KAAKqO,SACxBrO,KAAKqO,OAASrO,KAAKof,WAErBpf,KAAKgf,OAAShf,KAAKgM,IAAMhM,KAAKqO,OAC9BrO,KAAKkgB,YAAclgB,KAAK+H,SAASqE,kBAAkBpM,KAAKgf,OAAQ9S,KAAKqU,MAChEvgB,KAAKiW,aAAazI,MAAMzE,EAAI/I,KAAKiW,aAAazI,MAAMlB,OAAUtM,KAAKkgB,YAAa,CAKnF,GAJAlgB,KAAK+e,WAAW,GAAK/e,KAAKiW,aAAazI,MAAMlB,KAC7CtM,KAAKiW,aAAazI,MAAMlB,KAAOtM,KAAKkgB,YAAclgB,KAAKiW,aAAazI,MAAMzE,EAC1E/I,KAAKsf,WAAW5Z,UAAU1F,KAAKsf,WAAWzF,WAC1C7Z,KAAK2S,KAAKjN,UAAU1F,KAAK2S,KAAKkH,UAAW7Z,KAAK+H,SAASC,SAASpC,qBAC5D5F,KAAK+H,SAAS0E,eAAezM,KAAKiW,aAAazI,OAGjD,OAFAxN,KAAKiW,aAAazI,MAAMlB,KAAOtM,KAAK+e,WAAW,QAC/C/e,KAAKogB,cAAcpgB,KAAK+H,SAAS4M,kBAAkB3U,KAAKiW,aAAazI,MAAMlB,MAAQtM,KAAKwC,QAGxFxC,KAAK+H,SAASuB,eAEhBtJ,KAAKsf,WAAW7E,gBAChBza,KAAK2S,KAAK8H,gBAEZza,KAAKogB,cAAcpgB,KAAKqO,SAG1ByQ,EAAAlf,UAAA+f,QAAA,SAAQza,GAON,GANAlF,KAAKoO,MAAQlJ,EAAEwC,QAAU1H,KAAK8X,WAAa9X,KAAKkf,UAAYlf,KAAK8L,KAC7D9L,KAAKqf,SAAWrf,KAAKoO,QACvBpO,KAAKoO,MAAQpO,KAAKqf,UAEpBrf,KAAKif,MAAQjf,KAAK8L,KAAO9L,KAAKoO,MAC9BpO,KAAKkgB,YAAclgB,KAAK+H,SAASkE,kBAAkBjM,KAAKif,MAAO/S,KAAKqU,MAC/DvgB,KAAKiW,aAAazI,MAAMxE,EAAIhJ,KAAKiW,aAAazI,MAAMnB,OAAUrM,KAAKkgB,YAAa,CAKnF,GAJAlgB,KAAK+e,WAAW,GAAK/e,KAAKiW,aAAazI,MAAMnB,KAC7CrM,KAAKiW,aAAazI,MAAMnB,KAAOrM,KAAKkgB,YAAclgB,KAAKiW,aAAazI,MAAMxE,EAC1EhJ,KAAKsf,WAAW5Z,UAAU1F,KAAKsf,WAAW1F,UAC1C5Z,KAAK2S,KAAKjN,UAAU1F,KAAK2S,KAAKiH,SAAU5Z,KAAK+H,SAASC,SAASpC,qBAC3D5F,KAAK+H,SAAS0E,eAAezM,KAAKiW,aAAazI,OAGjD,OAFAxN,KAAKiW,aAAazI,MAAMnB,KAAOrM,KAAK+e,WAAW,QAC/C/e,KAAKsgB,aAAatgB,KAAK+H,SAAS2M,kBAAkB1U,KAAKiW,aAAazI,MAAMnB,MAAQrM,KAAKwC,QAGvFxC,KAAK+H,SAASuB,eAEhBtJ,KAAKsf,WAAW7E,gBAChBza,KAAK2S,KAAK8H,gBAEZza,KAAKsgB,aAAatgB,KAAKoO,QAGzB0Q,EAAAlf,UAAAggB,SAAA,SAAS1a,GACPlF,KAAKwf,QAAQta,GACblF,KAAKyf,QAAQva,IAGf4Z,EAAAlf,UAAAigB,SAAA,SAAS3a,GACPlF,KAAKwf,QAAQta,GACblF,KAAK2f,QAAQza,IAGf4Z,EAAAlf,UAAAkgB,SAAA,SAAS5a,GACPlF,KAAK0f,QAAQxa,GACblF,KAAKyf,QAAQva,IAGf4Z,EAAAlf,UAAAmgB,SAAA,SAAS7a,GACPlF,KAAK0f,QAAQxa,GACblF,KAAK2f,QAAQza,IAGf4Z,EAAAlf,UAAAyS,OAAA,WACErS,KAAKwgB,cAAgBxgB,KAAKiW,aAAawI,gBAGzCK,EAAAlf,UAAAoe,eAAA,SAAe9Y,GAAf,IAAAuE,EAAAzJ,KAEE,GADA2G,EAAcc,gBAAgBvC,GACzBlF,KAAK+H,SAASC,SAAShD,UAAUT,eAIhC4C,EAAUK,WAAU,WACxBiC,EAAKyS,UAAUhX,GACfuY,KACCzd,KAAK+H,SAASC,SAAShD,UAAUT,YAC9B0Z,EAAcje,KAAKiW,aAAarM,SAASC,OAAO,WAAY,UAAW4T,GACvES,EAAmBle,KAAKiW,aAAarM,SAASC,OAAO,WAAY,aAAc4T,GAC/EX,EAAe9c,KAAKiW,aAAarM,SAASC,OAAO,SAAU,OAAQ4T,GACnEU,EAAkBne,KAAKiW,aAAarM,SAASC,OAAO,WAAY,YAItE,SAAoBuU,GAClBzX,EAAcc,gBAAgB2W,IAC1BlS,KAAKM,IAAI4R,EAAU1W,QAAUxC,EAAEwC,SAAW,GAAKwE,KAAKM,IAAI4R,EAAUxW,QAAU1C,EAAE0C,SAAW,IAC3F6V,MANEY,EAAiBre,KAAKiW,aAAarM,SAASC,OAAO,WAAY,WAAY4T,GAC3Ea,EAAoBte,KAAKiW,aAAarM,SAASC,OAAO,WAAY,cAAe4T,QAZrFzd,KAAKkc,UAAUhX,GAqBjB,SAASuY,IACPlW,aAAaJ,GACb2V,IACAmB,IACAC,IACAC,IACAE,IACAC,MAIJQ,EAAAlf,UAAAugB,WAAA,SAAWnU,GACThM,KAAK+H,SAASsI,aAAa/B,gBAAgBtO,KAAKiW,aAAarM,SAAU5J,KAAKiW,aAAanM,GAAI9J,KAAK8L,KAAME,IAG1G8S,EAAAlf,UAAAygB,YAAA,SAAYvU,GACV9L,KAAK+H,SAASsI,aAAa/B,gBAAgBtO,KAAKiW,aAAarM,SAAU5J,KAAKiW,aAAanM,GAAIgC,EAAM9L,KAAKgM,MAG1G8S,EAAAlf,UAAAwgB,cAAA,SAAc/R,GACZrO,KAAKiW,aAAarM,SAASmE,SAAS/N,KAAKiW,aAAanM,GAAI,SAAUuE,EAAS,OAG/EyQ,EAAAlf,UAAA0gB,aAAA,SAAalS,GACXpO,KAAKiW,aAAarM,SAASmE,SAAS/N,KAAKiW,aAAanM,GAAI,QAASsE,EAAQ,2BA9Y9EnF,EAAAA,sDAHOgO,SACAvK,SARYoJ,EAAAA,UA0ZpBgJ,EA1ZA,GCAA,IAAA2B,EAAA,WA6BE,SAAAA,EAAgC3W,EAAiB/B,EAAuD6B,EAA6CU,GAA7CtK,KAAA4J,SAAAA,EAA6C5J,KAAAsK,KAAAA,EACnJtK,KAAK8J,GAAKA,EAAG6F,cACb3P,KAAKwN,MAAQ,CACXnB,MAAO,EACPC,MAAO,EACPtD,GAAI,EACJD,GAAI,GAEN/I,KAAK+H,SAAWA,EAChB/H,KAAKoS,KAAO,IAAI2J,EAAkB/b,KAAM+H,EAAU/H,KAAKsK,MACvDtK,KAAK8Q,OAAS,IAAIgO,EAAkB9e,KAAM+H,EAAU/H,KAAKsK,MA0G7D,OAvGEmW,EAAA7gB,UAAA4Q,SAAA,WACExQ,KAAKwJ,gBACLxJ,KAAK+H,SAASuK,QAAQtS,OAGxBygB,EAAA7gB,UAAA4J,cAAA,WACExJ,KAAKwN,MAAQ7G,EAAcC,MAAM5G,KAAKwN,MAAOxN,KAAK6K,KAAM,CACtDwB,UAAMnJ,EACNoJ,UAAMpJ,EACN8F,OAAG9F,EACH6F,OAAG7F,EACHwd,iBAAaxd,EACbsd,mBAAetd,EACfuK,oBAAgBvK,EAChBf,iBAAae,EACbb,iBAAaa,EACbhB,iBAAagB,EACbd,iBAAac,EACbX,iBAAaW,EACbZ,iBAAaY,KAIjBud,EAAA7gB,UAAA8R,YAAA,WACE1R,KAAK+H,SAAS6K,WAAW5S,aAClBA,KAAK+H,SACZ/H,KAAKoS,KAAKjJ,iBACHnJ,KAAKoS,KACZpS,KAAK8Q,OAAO3H,iBACLnJ,KAAK8Q,QAGd2P,EAAA7gB,UAAAuS,QAAA,WACEnS,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,UAAW9J,KAAK8R,UAAY,GAAK,SACjE9R,KAAK+H,SAASsI,aAAazC,WAAW5N,KAAK8J,GAAI9J,KAAKwN,MAAOxN,KAAK4J,UAChE5J,KAAK2gB,kBAGPF,EAAA7gB,UAAA+gB,eAAA,eACQ3U,EAAMhM,KAAKwN,MAAMzE,EAAI/I,KAAK+H,SAASoG,aACnCrC,EAAO9L,KAAKwN,MAAMxE,EAAIhJ,KAAK+H,SAASmG,YACpCE,EAAQpO,KAAKwN,MAAMnB,KAAOrM,KAAK+H,SAASmG,YAAclO,KAAK+H,SAASC,SAASxF,OAC7E6L,EAASrO,KAAKwN,MAAMlB,KAAOtM,KAAK+H,SAASoG,aAAenO,KAAK+H,SAASC,SAASxF,QAEhFxC,KAAK4gB,MAAQxS,EAAQ,GAAKC,EAAS,IACtCrO,KAAK4gB,MAAO,EACR5gB,KAAK6K,KAAK5H,cACZjD,KAAK6K,KAAK5H,aAAajD,KAAK6K,KAAM7K,MAEhCA,KAAK+H,SAAS4B,QAAQpG,kBACxBvD,KAAK+H,SAAS4B,QAAQpG,iBAAiBvD,KAAK6K,KAAM7K,MAEhDA,KAAK+H,SAASC,SAASzB,kBACzBvG,KAAK8J,GAAG+W,gBAAe,IAGvBzS,IAAUpO,KAAKoO,OAASC,IAAWrO,KAAKqO,SAC1CrO,KAAKoO,MAAQA,EACbpO,KAAKqO,OAASA,EACVrO,KAAK+H,SAAS4B,QAAQrG,oBACxBtD,KAAK+H,SAAS4B,QAAQrG,mBAAmBtD,KAAK6K,KAAM7K,OAGxDA,KAAKgM,IAAMA,EACXhM,KAAK8L,KAAOA,GAGd2U,EAAA7gB,UAAA8N,YAAA,WACM1N,KAAK+H,SAAS4B,QAAQtG,oBACxBrD,KAAK+H,SAAS4B,QAAQtG,mBAAmBrD,KAAK6K,KAAM7K,OAIxDygB,EAAA7gB,UAAA4W,iBAAA,SAAiBsK,EAAwBC,GACnCD,EAASxU,OAASyU,EAASzU,MAAQwU,EAASzU,OAAS0U,EAAS1U,MAAQyU,EAAS9X,IAAM+X,EAAS/X,GAAK8X,EAAS/X,IAAMgY,EAAShY,IAG3H/I,KAAK+H,SAAS0E,eAAezM,KAAKwN,QACpCxN,KAAKwN,MAAMxE,EAAI+X,EAAS/X,GAAK,EAC7BhJ,KAAKwN,MAAMzE,EAAIgY,EAAShY,GAAK,EAC7B/I,KAAKwN,MAAMnB,KAAO0U,EAAS1U,MAAQ,EACnCrM,KAAKwN,MAAMlB,KAAOyU,EAASzU,MAAQ,EACnCtM,KAAKmS,YAELnS,KAAK6K,KAAKwB,KAAOrM,KAAKwN,MAAMnB,KAC5BrM,KAAK6K,KAAKyB,KAAOtM,KAAKwN,MAAMlB,KAC5BtM,KAAK6K,KAAK7B,EAAIhJ,KAAKwN,MAAMxE,EACzBhJ,KAAK6K,KAAK9B,EAAI/I,KAAKwN,MAAMzE,EACzB/I,KAAK+H,SAASgI,0BACd/P,KAAK0N,iBAIT+S,EAAA7gB,UAAA+W,aAAA,WACE,OAAQ3W,KAAK+H,SAAS8F,cACQ3K,IAA3BlD,KAAKwN,MAAMkT,YAA4B1gB,KAAK+H,SAASC,SAAS1D,UAAUE,QAAUxE,KAAKwN,MAAMkT,cAGlGD,EAAA7gB,UAAA6e,aAAA,WACE,OAAQze,KAAK+H,SAAS8F,cACU3K,IAA7BlD,KAAKwN,MAAMgT,cAA8BxgB,KAAK+H,SAASC,SAAShD,UAAUR,QAAUxE,KAAKwN,MAAMgT,oCArIrGrL,EAAAA,UAAS9N,KAAA,CAAC,CACT+N,SAAU,gBACVC,SAAA,g6DAEAC,cAAeC,EAAAA,kBAAkB9U,+9CAbhB+U,EAAAA,WAAUC,WAAA,CAAA,CAAAC,KA6BdC,EAAAA,OAAMtO,KAAA,CAACmO,EAAAA,qBAtBd9F,SAP+DkG,EAAAA,UAASH,WAAA,CAAA,CAAAC,KA6BCC,EAAAA,OAAMtO,KAAA,CAACuO,EAAAA,oBA7B5CE,EAAAA,OAAML,WAAA,CAAA,CAAAC,KA6B8EC,EAAAA,OAAMtO,KAAA,CAACyO,EAAAA,2CAbpIC,EAAAA,SAiIH0K,EAjJA,GCAA,IAAAO,EAAA,WAcE,SAAAA,EAAiClX,EAAiB/B,EAAuD6B,GAAA5J,KAAA4J,SAAAA,EACvG5J,KAAK8J,GAAKA,EAAG6F,cACb3P,KAAK+H,SAAWA,EAChB/H,KAAK+H,SAASuB,aAAetJ,KAAKsJ,aAAaU,KAAKhK,MAoBxD,OAjBEghB,EAAAphB,UAAA8R,YAAA,kBACS1R,KAAK8J,UACL9J,KAAK+H,SAASuB,oBACdtJ,KAAK+H,UAGdiZ,EAAAphB,UAAA0J,aAAA,SAAa8I,GACNpS,KAAK+H,SAASsB,YAGbrJ,KAAK+H,SAASqI,SAAWgC,GAC3BpS,KAAK+H,SAASqI,QAAQpD,iBAAiBhN,KAAK+H,SAASsB,YAEvDrJ,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,UAAW,SAC3C9J,KAAK+H,SAASsI,aAAazC,WAAW5N,KAAK8J,GAAI9J,KAAK+H,SAASsB,WAAYrJ,KAAK4J,WAN9E5J,KAAK4J,SAASmE,SAAS/N,KAAK8J,GAAI,UAAW,yBAxBhDqL,EAAAA,UAAS9N,KAAA,CAAC,CACT+N,SAAU,mBACVC,SAAU,GAEVC,cAAeC,EAAAA,kBAAkB9U,yIARhB+U,EAAAA,WAAUC,WAAA,CAAA,CAAAC,KAcdC,EAAAA,OAAMtO,KAAA,CAACmO,EAAAA,qBAZd9F,SAFwCkG,EAAAA,UAASH,WAAA,CAAA,CAAAC,KAcyBC,EAAAA,OAAMtO,KAAA,CAACuO,EAAAA,gBAuBzFoL,EArCA,GCAA,IAAAC,EAAA,WAOA,SAAAA,KAeA,2BAfCC,EAAAA,SAAQ7Z,KAAA,CAAC,CACR8Z,aAAc,CACZzR,EACA+Q,EACAO,GAEFI,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAAC5R,EAAmB+Q,GAC7Bc,UAAW,GACXC,UAAW,GACXC,gBAAiB,CAAC/R,EAAmB+Q,OAGvCQ,EAtBA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {GridsterItem} from './gridsterItem.interface';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\r\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\r\nexport type compactTypes =\r\n  'none'\r\n  | 'compactUp'\r\n  | 'compactLeft'\r\n  | 'compactUp&Left'\r\n  | 'compactLeft&Up'\r\n  | 'compactRight'\r\n  | 'compactUp&Right'\r\n  | 'compactRight&Up';\r\n\r\nexport enum GridType {\r\n  Fit = 'fit',\r\n  ScrollVertical = 'scrollVertical',\r\n  ScrollHorizontal = 'scrollHorizontal',\r\n  Fixed = 'fixed',\r\n  VerticalFixed = 'verticalFixed',\r\n  HorizontalFixed = 'horizontalFixed'\r\n}\r\n\r\nexport enum DisplayGrid {\r\n  Always = 'always',\r\n  OnDragAndResize = 'onDrag&Resize',\r\n  None = 'none'\r\n}\r\n\r\nexport enum CompactType {\r\n  None = 'none',\r\n  CompactUp = 'compactUp',\r\n  CompactLeft = 'compactLeft',\r\n  CompactUpAndLeft = 'compactUp&Left',\r\n  CompactLeftAndUp = 'compactLeft&Up',\r\n  CompactRight = 'compactRight',\r\n  CompactUpAndRight = 'compactUp&Right',\r\n  CompactRightAndUp = 'compactRight&Up',\r\n}\r\n\r\nexport interface GridsterConfig {\r\n  gridType?: gridTypes;\r\n  fixedColWidth?: number;\r\n  fixedRowHeight?: number;\r\n  keepFixedHeightInMobile?: boolean;\r\n  keepFixedWidthInMobile?: boolean;\r\n  setGridSize?: boolean;\r\n  compactType?: compactTypes;\r\n  mobileBreakpoint?: number;\r\n  minCols?: number;\r\n  maxCols?: number;\r\n  minRows?: number;\r\n  maxRows?: number;\r\n  defaultItemCols?: number;\r\n  defaultItemRows?: number;\r\n  maxItemCols?: number;\r\n  maxItemRows?: number;\r\n  minItemCols?: number;\r\n  minItemRows?: number;\r\n  minItemArea?: number;\r\n  maxItemArea?: number;\r\n  margin?: number;\r\n  outerMargin?: boolean;\r\n  outerMarginTop?: number | null;\r\n  outerMarginRight?: number | null;\r\n  outerMarginBottom?: number | null;\r\n  outerMarginLeft?: number | null;\r\n  useTransformPositioning?: boolean;\r\n  scrollSensitivity?: number | null;\r\n  scrollSpeed?: number;\r\n  initCallback?: (gridster: GridsterComponentInterface) => void;\r\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\r\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\r\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\r\n  itemValidateCallback?: (item: GridsterItem) => boolean;\r\n  draggable?: Draggable;\r\n  resizable?: Resizable;\r\n  swap?: boolean;\r\n  swapWhileDragging?: boolean;\r\n  pushItems?: boolean;\r\n  disablePushOnDrag?: boolean;\r\n  disablePushOnResize?: boolean;\r\n  disableAutoPositionOnConflict?: boolean;\r\n  pushDirections?: PushDirections;\r\n  pushResizeItems?: boolean;\r\n  displayGrid?: displayGrids;\r\n  disableWindowResize?: boolean;\r\n  disableWarnings?: boolean;\r\n  scrollToNewItems?: boolean;\r\n  disableScrollHorizontal?: boolean;\r\n  disableScrollVertical?: boolean;\r\n  enableEmptyCellClick?: boolean;\r\n  enableEmptyCellContextMenu?: boolean;\r\n  enableEmptyCellDrop?: boolean;\r\n  enableEmptyCellDrag?: boolean;\r\n  enableOccupiedCellDrop?: boolean;\r\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\r\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\r\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\r\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\r\n  emptyCellDragMaxCols?: number;\r\n  emptyCellDragMaxRows?: number;\r\n  ignoreMarginInRow?: boolean;\r\n  api?: {\r\n    resize?: () => void,\r\n    optionsChanged?: () => void,\r\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\r\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\r\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\r\n  };\r\n\r\n  [propName: string]: any;\r\n}\r\n\r\nexport interface DragBase {\r\n  enabled?: boolean;\r\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\r\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\r\n  delayStart?: number;\r\n}\r\n\r\nexport interface Draggable extends DragBase {\r\n  ignoreContentClass?: string;\r\n  ignoreContent?: boolean;\r\n  dragHandleClass?: string;\r\n  dropOverItems?: boolean;\r\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\r\n}\r\n\r\nexport interface Resizable extends DragBase {\r\n  handles?: {\r\n    s: boolean,\r\n    e: boolean,\r\n    n: boolean,\r\n    w: boolean,\r\n    se: boolean,\r\n    ne: boolean,\r\n    sw: boolean,\r\n    nw: boolean\r\n  };\r\n}\r\n\r\nexport interface PushDirections {\r\n  north: boolean;\r\n  east: boolean;\r\n  south: boolean;\r\n  west: boolean;\r\n}\r\n","import {CompactType, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\r\n\r\nexport const GridsterConfigService: GridsterConfig = {\r\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\r\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\r\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\r\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\r\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\r\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\r\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\r\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\r\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\r\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\r\n  setGridSize: false, // sets grid size depending on content\r\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\r\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\r\n  minCols: 1, // minimum amount of columns in the grid\r\n  maxCols: 100, // maximum amount of columns in the grid\r\n  minRows: 1, // minimum amount of rows in the grid\r\n  maxRows: 100, // maximum amount of rows in the grid\r\n  defaultItemCols: 1, // default width of an item in columns\r\n  defaultItemRows: 1, // default height of an item in rows\r\n  maxItemCols: 50, // max item number of cols\r\n  maxItemRows: 50, // max item number of rows\r\n  minItemCols: 1, // min item number of columns\r\n  minItemRows: 1, // min item number of rows\r\n  minItemArea: 1, // min item area: cols * rows\r\n  maxItemArea: 2500, // max item area: cols * rows\r\n  margin: 10,  // margin between grid items\r\n  outerMargin: true,  // if margins will apply to the sides of the container\r\n  outerMarginTop: null, // override outer margin for grid\r\n  outerMarginRight: null, // override outer margin for grid\r\n  outerMarginBottom: null, // override outer margin for grid\r\n  outerMarginLeft: null, // override outer margin for grid\r\n  useTransformPositioning: true, // toggle between transform or top/left positioning of items\r\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\r\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\r\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\r\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\r\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\r\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\r\n  // Arguments: gridsterItem, gridsterItemComponent\r\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\r\n  // Arguments: gridsterItem, gridsterItemComponent\r\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\r\n  // Arguments: gridsterItem, gridsterItemComponent\r\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\r\n  // Arguments: gridsterItem, gridsterItemComponent\r\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\r\n  // Arguments: gridsterItem\r\n  enableEmptyCellClick: false, // enable empty cell click events\r\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\r\n  enableEmptyCellDrop: false, // enable empty cell drop events\r\n  enableEmptyCellDrag: false, // enable empty cell drag events\r\n  enableOccupiedCellDrop: false, // enable occupied cell drop events\r\n  emptyCellClickCallback: undefined, // empty cell click callback\r\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\r\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\r\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\r\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\r\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\r\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\r\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\r\n  draggable: {\r\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\r\n    enabled: false, // enable/disable draggable items\r\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\r\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\r\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\r\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\r\n    start: undefined, // callback when dragging an item starts.\r\n    // Arguments: item, gridsterItem, event\r\n    dropOverItems: false, // enable drop items on top other item\r\n    dropOverItemsCallback: undefined // callback on drop over another item\r\n    // Arguments: source, target, gridComponent\r\n  },\r\n  resizable: {\r\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\r\n    enabled: false, // enable/disable resizable items\r\n    handles: {\r\n      s: true,\r\n      e: true,\r\n      n: true,\r\n      w: true,\r\n      se: true,\r\n      ne: true,\r\n      sw: true,\r\n      nw: true\r\n    }, // resizable edges of an item\r\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\r\n    start: undefined // callback when resizing an item starts.\r\n    // Arguments: item, gridsterItem, event\r\n  },\r\n  swap: true, // allow items to switch position if drop on top of another\r\n  swapWhileDragging: false, // allow items to switch position while dragging\r\n  pushItems: false, // push items when resizing and dragging\r\n  disablePushOnDrag: false, // disable push on drag\r\n  disablePushOnResize: false, // disable push on resize\r\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\r\n  pushResizeItems: false, // on resize of item will shrink adjacent items\r\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\r\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\r\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\r\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\r\n  disableScrollHorizontal: false, // disable horizontal scrolling\r\n  disableScrollVertical: false, // disable vertical scrolling\r\n  disableAutoPositionOnConflict: false  // disable auto-position of items on conflict state\r\n};\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\n@Injectable()\r\nexport class GridsterUtils {\r\n\r\n  static merge(obj1: any, obj2: any, properties: any) {\r\n    for (const p in obj2) {\r\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\r\n        if (typeof obj2[p] === 'object') {\r\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\r\n        } else {\r\n          obj1[p] = obj2[p];\r\n        }\r\n      }\r\n    }\r\n\r\n    return obj1;\r\n  }\r\n\r\n  static debounce(func: Function, wait: number): () => void {\r\n    let timeout: any;\r\n    return function () {\r\n      const context = this, args = arguments;\r\n      const later = function () {\r\n        timeout = null;\r\n        func.apply(context, args);\r\n      };\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n    };\r\n  }\r\n\r\n  static checkTouchEvent(e: any): void {\r\n    if (e.clientX === undefined && e.touches) {\r\n      if (e.touches && e.touches.length) {\r\n        e.clientX = e.touches[0].clientX;\r\n        e.clientY = e.touches[0].clientY;\r\n      } else if (e.changedTouches && e.changedTouches.length) {\r\n        e.clientX = e.changedTouches[0].clientX;\r\n        e.clientY = e.changedTouches[0].clientY;\r\n      }\r\n    }\r\n  }\r\n\r\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\r\n    if (gridster.$options.draggable.ignoreContent) {\r\n      if (!GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass)) {\r\n        return true;\r\n      }\r\n    } else {\r\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\r\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\r\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\r\n  }\r\n\r\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\r\n    if (!target || target === current) {\r\n      return false;\r\n    }\r\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\r\n      return true;\r\n    } else {\r\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\r\n    }\r\n  }\r\n\r\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\r\n    if (a.y > b.y) {\r\n      return -1;\r\n    } else if (a.y < b.y) {\r\n      return 1;\r\n    } else if (a.x > b.x) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n}\r\n","import {GridsterConfigS} from './gridsterConfigS.interface';\r\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\r\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\r\nimport {GridsterCompact} from './gridsterCompact.service';\r\nimport {GridsterConfig} from './gridsterConfig.interface';\r\nimport {GridsterItem} from './gridsterItem.interface';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterRenderer} from './gridsterRenderer.service';\r\n\r\nexport abstract class GridsterComponentInterface {\r\n  $options: GridsterConfigS;\r\n  grid: Array<GridsterItemComponentInterface>;\r\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\r\n  checkCollisionForSwaping: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\r\n  positionXToPixels: (x: number) => number;\r\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\r\n  positionYToPixels: (y: number) => number;\r\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\r\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\r\n  findItemsWithItem: (item: GridsterItem) => Array<GridsterItemComponentInterface>;\r\n  checkGridCollision: (item: GridsterItem) => boolean;\r\n  el: any;\r\n  renderer: Renderer2;\r\n  gridRenderer: GridsterRenderer;\r\n  cdRef: ChangeDetectorRef;\r\n  options: GridsterConfig;\r\n  calculateLayoutDebounce: () => void;\r\n  updateGrid: () => void;\r\n  movingItem: GridsterItem | null;\r\n  addItem: (item: GridsterItemComponentInterface) => void;\r\n  removeItem: (item: GridsterItemComponentInterface) => void;\r\n  previewStyle: (drag?: boolean) => void;\r\n  mobile: boolean;\r\n  curWidth: number;\r\n  curHeight: number;\r\n  columns: number;\r\n  rows: number;\r\n  curColWidth: number;\r\n  curRowHeight: number;\r\n  windowResize: (() => void) | null;\r\n  setGridDimensions: (() => void);\r\n  dragInProgress: boolean;\r\n  emptyCell: GridsterEmptyCell;\r\n  compact: GridsterCompact;\r\n  zone: NgZone;\r\n  gridRows: Array<number>;\r\n  gridColumns: Array<number>;\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {GridsterUtils} from './gridsterUtils.service';\r\nimport {GridsterItem} from './gridsterItem.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\n@Injectable()\r\nexport class GridsterEmptyCell {\r\n  initialItem: GridsterItem | null;\r\n  emptyCellClick: Function | null;\r\n  emptyCellClickTouch: Function | null;\r\n  emptyCellContextMenu: Function | null;\r\n  emptyCellDrop: Function | null;\r\n  emptyCellDrag: Function | null;\r\n  emptyCellDragTouch: Function | null;\r\n  emptyCellMMove: Function;\r\n  emptyCellMMoveTouch: Function;\r\n  emptyCellUp: Function;\r\n  emptyCellUpTouch: Function;\r\n  emptyCellMove: Function | null;\r\n  emptyCellExit: Function | null;\r\n\r\n  constructor(private gridster: GridsterComponentInterface) {\r\n  }\r\n\r\n  destroy(): void {\r\n    delete this.initialItem;\r\n    delete this.gridster.movingItem;\r\n    if (this.gridster.previewStyle) {\r\n      this.gridster.previewStyle();\r\n    }\r\n    delete this.gridster;\r\n    if (this.emptyCellExit) {\r\n      this.emptyCellExit();\r\n      this.emptyCellExit = null;\r\n    }\r\n  }\r\n\r\n  updateOptions(): void {\r\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\r\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\r\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\r\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\r\n      this.emptyCellClick();\r\n      this.emptyCellClickTouch();\r\n      this.emptyCellClick = null;\r\n      this.emptyCellClickTouch = null;\r\n    }\r\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\r\n      this.gridster.options.emptyCellContextMenuCallback) {\r\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\r\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\r\n      this.emptyCellContextMenu();\r\n      this.emptyCellContextMenu = null;\r\n    }\r\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\r\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\r\n      this.gridster.zone.runOutsideAngular(() => {\r\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\r\n      });\r\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\r\n        this.gridster.movingItem = null;\r\n        this.gridster.previewStyle();\r\n      });\r\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\r\n      this.emptyCellDrop();\r\n      this.emptyCellMove();\r\n      this.emptyCellExit();\r\n      this.emptyCellMove = null;\r\n      this.emptyCellDrop = null;\r\n      this.emptyCellExit = null;\r\n    }\r\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\r\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\r\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\r\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\r\n      this.emptyCellDrag();\r\n      this.emptyCellDragTouch();\r\n      this.emptyCellDrag = null;\r\n      this.emptyCellDragTouch = null;\r\n    }\r\n  }\r\n\r\n  emptyCellClickCb(e: any): void {\r\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\r\n      return;\r\n    }\r\n    const item = this.getValidItemFromEvent(e);\r\n    if (!item) {\r\n      return;\r\n    }\r\n    if (this.gridster.options.emptyCellClickCallback) {\r\n      this.gridster.options.emptyCellClickCallback(e, item);\r\n    }\r\n    this.gridster.cdRef.markForCheck();\r\n  }\r\n\r\n  emptyCellContextMenuCb(e: any): void {\r\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\r\n      return;\r\n    }\r\n    const item = this.getValidItemFromEvent(e);\r\n    if (!item) {\r\n      return;\r\n    }\r\n    if (this.gridster.options.emptyCellContextMenuCallback) {\r\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\r\n    }\r\n    this.gridster.cdRef.markForCheck();\r\n  }\r\n\r\n  emptyCellDragDrop(e: any): void {\r\n    const item = this.getValidItemFromEvent(e);\r\n    if (!item) {\r\n      return;\r\n    }\r\n    if (this.gridster.options.emptyCellDropCallback) {\r\n      this.gridster.options.emptyCellDropCallback(e, item);\r\n    }\r\n    this.gridster.cdRef.markForCheck();\r\n  }\r\n\r\n  emptyCellDragOver(e: any): void {\r\n    const item = this.getValidItemFromEvent(e);\r\n    if (item) {\r\n      e.dataTransfer.dropEffect = 'move';\r\n      this.gridster.movingItem = item;\r\n    } else {\r\n      e.dataTransfer.dropEffect = 'none';\r\n      this.gridster.movingItem = null;\r\n    }\r\n    this.gridster.previewStyle();\r\n  }\r\n\r\n  emptyCellMouseDown(e: any): void {\r\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\r\n      return;\r\n    }\r\n    const item = this.getValidItemFromEvent(e);\r\n    const leftMouseButtonCode = 1;\r\n    if (!item || e.buttons !== leftMouseButtonCode) {\r\n      return;\r\n    }\r\n    this.initialItem = item;\r\n    this.gridster.movingItem = item;\r\n    this.gridster.previewStyle();\r\n    this.gridster.zone.runOutsideAngular(() => {\r\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\r\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\r\n    });\r\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\r\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\r\n  }\r\n\r\n  emptyCellMouseMove(e: any): void {\r\n    const item = this.getValidItemFromEvent(e, this.initialItem);\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    this.gridster.movingItem = item;\r\n    this.gridster.previewStyle();\r\n  }\r\n\r\n  emptyCellMouseUp(e: any): void {\r\n    this.emptyCellMMove();\r\n    this.emptyCellMMoveTouch();\r\n    this.emptyCellUp();\r\n    this.emptyCellUpTouch();\r\n    const item = this.getValidItemFromEvent(e, this.initialItem);\r\n    if (item) {\r\n      this.gridster.movingItem = item;\r\n    }\r\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\r\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\r\n    }\r\n    setTimeout(() => {\r\n      this.initialItem = null;\r\n      if (this.gridster) {\r\n        this.gridster.movingItem = null;\r\n        this.gridster.previewStyle();\r\n      }\r\n    });\r\n    this.gridster.cdRef.markForCheck();\r\n  }\r\n\r\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\r\n    GridsterUtils.checkTouchEvent(e);\r\n    const rect = this.gridster.el.getBoundingClientRect();\r\n    const x = e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.$options.margin;\r\n    const y = e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.$options.margin;\r\n    const item: GridsterItem = {\r\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\r\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\r\n      cols: this.gridster.$options.defaultItemCols,\r\n      rows: this.gridster.$options.defaultItemRows\r\n    };\r\n    if (oldItem) {\r\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\r\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\r\n      if (oldItem.x < item.x) {\r\n        item.x = oldItem.x;\r\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\r\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\r\n      }\r\n      if (oldItem.y < item.y) {\r\n        item.y = oldItem.y;\r\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\r\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\r\n      }\r\n    }\r\n    if (!this.gridster.$options.enableOccupiedCellDrop && this.gridster.checkCollision(item)) {\r\n      return;\r\n    }\r\n    return item;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterItem} from './gridsterItem.interface';\r\nimport {CompactType} from './gridsterConfig.interface';\r\n\r\n@Injectable()\r\nexport class GridsterCompact {\r\n\r\n  constructor(private gridster: GridsterComponentInterface) {\r\n  }\r\n\r\n  destroy(): void {\r\n    delete this.gridster;\r\n  }\r\n\r\n  checkCompact(): void {\r\n    if (this.gridster.$options.compactType !== CompactType.None) {\r\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\r\n        this.checkCompactUp();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\r\n        this.checkCompactLeft();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\r\n        this.checkCompactUp();\r\n        this.checkCompactLeft();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\r\n        this.checkCompactLeft();\r\n        this.checkCompactUp();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\r\n        this.checkCompactRight();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\r\n        this.checkCompactUp();\r\n        this.checkCompactRight();\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\r\n        this.checkCompactRight();\r\n        this.checkCompactUp();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkCompactItem(item: GridsterItem): void {\r\n    if (this.gridster.$options.compactType !== CompactType.None) {\r\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\r\n        this.moveUpTillCollision(item);\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\r\n        this.moveLeftTillCollision(item);\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\r\n        this.moveUpTillCollision(item);\r\n        this.moveLeftTillCollision(item);\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\r\n        this.moveLeftTillCollision(item);\r\n        this.moveUpTillCollision(item);\r\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\r\n        this.moveUpTillCollision(item);\r\n        this.moveRightTillCollision(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkCompactUp(): void {\r\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\r\n    const l = this.gridster.grid.length;\r\n    for (let i = 0; i < l; i++) {\r\n      widget = this.gridster.grid[i];\r\n      if (widget.$item.compactEnabled === false) {\r\n        continue;\r\n      }\r\n      moved = this.moveUpTillCollision(widget.$item);\r\n      if (moved) {\r\n        widgetMovedUp = true;\r\n        widget.item.y = widget.$item.y;\r\n        widget.itemChanged();\r\n      }\r\n    }\r\n    if (widgetMovedUp) {\r\n      this.checkCompact();\r\n    }\r\n  }\r\n\r\n  moveUpTillCollision(item: GridsterItem): boolean {\r\n    item.y -= 1;\r\n    if (this.gridster.checkCollision(item)) {\r\n      item.y += 1;\r\n      return false;\r\n    } else {\r\n      this.moveUpTillCollision(item);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  checkCompactLeft(): void {\r\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\r\n    const l = this.gridster.grid.length;\r\n    for (let i = 0; i < l; i++) {\r\n      widget = this.gridster.grid[i];\r\n      if (widget.$item.compactEnabled === false) {\r\n        continue;\r\n      }\r\n      moved = this.moveLeftTillCollision(widget.$item);\r\n      if (moved) {\r\n        widgetMovedUp = true;\r\n        widget.item.x = widget.$item.x;\r\n        widget.itemChanged();\r\n      }\r\n    }\r\n    if (widgetMovedUp) {\r\n      this.checkCompact();\r\n    }\r\n  }\r\n\r\n  checkCompactRight(): void {\r\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\r\n    const l = this.gridster.grid.length;\r\n    for (let i = 0; i < l; i++) {\r\n      widget = this.gridster.grid[i];\r\n      if (widget.$item.compactEnabled === false) {\r\n        continue;\r\n      }\r\n      moved = this.moveRightTillCollision(widget.$item);\r\n      if (moved) {\r\n        widgetMovedUp = true;\r\n        widget.item.x = widget.$item.x;\r\n        widget.itemChanged();\r\n      }\r\n    }\r\n    if (widgetMovedUp) {\r\n      this.checkCompact();\r\n    }\r\n  }\r\n\r\n  moveLeftTillCollision(item: GridsterItem): boolean {\r\n    item.x -= 1;\r\n    if (this.gridster.checkCollision(item)) {\r\n      item.x += 1;\r\n      return false;\r\n    } else {\r\n      this.moveLeftTillCollision(item);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  moveRightTillCollision(item) {\r\n    item.x += 1;\r\n    if (this.gridster.checkCollision(item)) {\r\n      item.x -= 1;\r\n      return false;\r\n    } else {\r\n      this.moveRightTillCollision(item);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import {Injectable, Renderer2} from '@angular/core';\r\n\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\nimport {GridType} from './gridsterConfig.interface';\r\nimport {GridsterItem} from './gridsterItem.interface';\r\n\r\n@Injectable()\r\nexport class GridsterRenderer {\r\n\r\n  constructor(private gridster: GridsterComponentInterface) {\r\n  }\r\n\r\n  destroy(): void {\r\n    delete this.gridster;\r\n  }\r\n\r\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\r\n    if (this.gridster.mobile) {\r\n      this.clearCellPosition(renderer, el);\r\n      if (this.gridster.$options.keepFixedHeightInMobile) {\r\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\r\n      } else {\r\n        renderer.setStyle(el, 'height',  (item.rows * this.gridster.curWidth / item.cols ) + 'px');\r\n      }\r\n      if (this.gridster.$options.keepFixedWidthInMobile) {\r\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\r\n      } else {\r\n        renderer.setStyle(el, 'width', '');\r\n      }\r\n\r\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\r\n      renderer.setStyle(el, 'margin-right', '');\r\n    } else {\r\n      const x = Math.round(this.gridster.curColWidth * item.x);\r\n      const y = Math.round(this.gridster.curRowHeight * item.y);\r\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\r\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\r\n      // set the cell style\r\n      this.setCellPosition(renderer, el, x, y);\r\n      renderer.setStyle(el, 'width', width + 'px');\r\n      renderer.setStyle(el, 'height', height + 'px');\r\n      let marginBottom: string | null = null;\r\n      let marginRight: string | null = null;\r\n      if (this.gridster.$options.outerMargin) {\r\n        if (this.gridster.rows === item.rows + item.y) {\r\n          if (this.gridster.$options.outerMarginBottom !== null) {\r\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\r\n          } else {\r\n            marginBottom = this.gridster.$options.margin + 'px';\r\n          }\r\n        }\r\n        if (this.gridster.columns === item.cols + item.x) {\r\n          if (this.gridster.$options.outerMarginBottom !== null) {\r\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\r\n          } else {\r\n            marginRight = this.gridster.$options.margin + 'px';\r\n          }\r\n        }\r\n      }\r\n\r\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\r\n      renderer.setStyle(el, 'margin-right', marginRight);\r\n    }\r\n  }\r\n\r\n  updateGridster() {\r\n    let addClass = '';\r\n    let removeClass1 = '';\r\n    let removeClass2 = '';\r\n    let removeClass3 = '';\r\n    if (this.gridster.$options.gridType === GridType.Fit) {\r\n      addClass = GridType.Fit;\r\n      removeClass1 = GridType.ScrollVertical;\r\n      removeClass2 = GridType.ScrollHorizontal;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\r\n      this.gridster.curRowHeight = this.gridster.curColWidth;\r\n      addClass = GridType.ScrollVertical;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollHorizontal;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\r\n      this.gridster.curColWidth = this.gridster.curRowHeight;\r\n      addClass = GridType.ScrollHorizontal;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollVertical;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\r\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\r\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\r\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\r\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\r\n      addClass = GridType.Fixed;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollVertical;\r\n      removeClass3 = GridType.ScrollHorizontal;\r\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\r\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\r\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\r\n      addClass = GridType.ScrollVertical;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollHorizontal;\r\n      removeClass3 = GridType.Fixed;\r\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\r\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\r\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\r\n      addClass = GridType.ScrollHorizontal;\r\n      removeClass1 = GridType.Fit;\r\n      removeClass2 = GridType.ScrollVertical;\r\n      removeClass3 = GridType.Fixed;\r\n    }\r\n\r\n    if (this.gridster.mobile) {\r\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\r\n    } else {\r\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\r\n    }\r\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\r\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\r\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\r\n  }\r\n\r\n  getGridColumnStyle(i: number) {\r\n    return {\r\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\r\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\r\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\r\n    };\r\n  }\r\n\r\n  getGridRowStyle(i: number) {\r\n    return {\r\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\r\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\r\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\r\n    };\r\n  }\r\n\r\n  getLeftPosition(d: number): Object {\r\n    if (this.gridster.$options.useTransformPositioning) {\r\n      return {\r\n        transform: 'translateX(' + d + 'px)',\r\n      };\r\n    } else {\r\n      return {\r\n        left: (this.getLeftMargin() + d) + 'px'\r\n      };\r\n    }\r\n  }\r\n\r\n  getTopPosition(d: number): Object {\r\n    if (this.gridster.$options.useTransformPositioning) {\r\n      return {\r\n        transform: 'translateY(' + d + 'px)',\r\n      };\r\n    } else {\r\n      return {\r\n        top: this.getTopMargin() + d + 'px'\r\n      };\r\n    }\r\n  }\r\n\r\n  clearCellPosition(renderer: Renderer2, el: any): void {\r\n    if (this.gridster.$options.useTransformPositioning) {\r\n      renderer.setStyle(el, 'transform', '');\r\n    } else {\r\n      renderer.setStyle(el, 'top', '');\r\n      renderer.setStyle(el, 'left', '');\r\n    }\r\n  }\r\n\r\n  setCellPosition(renderer: Renderer2, el: any, x: number, y: number): void {\r\n    if (this.gridster.$options.useTransformPositioning) {\r\n      const transform = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\r\n      renderer.setStyle(el, 'transform', transform);\r\n    } else {\r\n      renderer.setStyle(el, 'left', this.getLeftMargin() + x + 'px');\r\n      renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\r\n    }\r\n  }\r\n\r\n  getLeftMargin(): number {\r\n    if (this.gridster.$options.outerMargin) {\r\n      if (this.gridster.$options.outerMarginLeft !== null) {\r\n        return this.gridster.$options.outerMarginLeft;\r\n      } else {\r\n        return this.gridster.$options.margin;\r\n      }\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  getTopMargin(): number {\r\n    if (this.gridster.$options.outerMargin) {\r\n      if (this.gridster.$options.outerMarginTop !== null) {\r\n        return this.gridster.$options.outerMarginTop;\r\n      } else {\r\n        return this.gridster.$options.margin;\r\n      }\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n  Inject\r\n} from '@angular/core';\r\n\r\nimport {GridsterConfigService} from './gridsterConfig.constant';\r\nimport {GridsterConfig} from './gridsterConfig.interface';\r\nimport {GridsterUtils} from './gridsterUtils.service';\r\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\r\nimport {GridsterCompact} from './gridsterCompact.service';\r\nimport {GridsterConfigS} from './gridsterConfigS.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterRenderer} from './gridsterRenderer.service';\r\nimport {GridsterItem} from './gridsterItem.interface';\r\n\r\n@Component({\r\n  selector: 'gridster',\r\n  templateUrl: './gridster.html',\r\n  styleUrls: ['./gridster.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GridsterComponent implements OnInit, OnChanges, OnDestroy, GridsterComponentInterface {\r\n  @Input() options: GridsterConfig;\r\n  calculateLayoutDebounce: () => void;\r\n  movingItem: GridsterItem | null;\r\n  previewStyle: () => void;\r\n  el: any;\r\n  $options: GridsterConfigS;\r\n  mobile: boolean;\r\n  curWidth: number;\r\n  curHeight: number;\r\n  grid: Array<GridsterItemComponentInterface>;\r\n  columns = 0;\r\n  rows = 0;\r\n  curColWidth: number;\r\n  curRowHeight: number;\r\n  gridColumns = [];\r\n  gridRows = [];\r\n  windowResize: (() => void) | null;\r\n  dragInProgress: boolean;\r\n  emptyCell: GridsterEmptyCell;\r\n  compact: GridsterCompact;\r\n  gridRenderer: GridsterRenderer;\r\n\r\n  constructor(@Inject(ElementRef) el: ElementRef, @Inject(Renderer2) public renderer: Renderer2, @Inject(ChangeDetectorRef) public cdRef: ChangeDetectorRef, @Inject(NgZone) public zone: NgZone) {\r\n    this.el = el.nativeElement;\r\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\r\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\r\n    this.mobile = false;\r\n    this.curWidth = 0;\r\n    this.curHeight = 0;\r\n    this.grid = [];\r\n    this.curColWidth = 0;\r\n    this.curRowHeight = 0;\r\n    this.dragInProgress = false;\r\n    this.emptyCell = new GridsterEmptyCell(this);\r\n    this.compact = new GridsterCompact(this);\r\n    this.gridRenderer = new GridsterRenderer(this);\r\n  }\r\n\r\n  static checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\r\n    return item.x < item2.x + item2.cols\r\n      && item.x + item.cols > item2.x\r\n      && item.y < item2.y + item2.rows\r\n      && item.y + item.rows > item2.y;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.options.initCallback) {\r\n      this.options.initCallback(this);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.options) {\r\n      this.setOptions();\r\n      this.options.api = {\r\n        optionsChanged: this.optionsChanged.bind(this),\r\n        resize: this.onResize.bind(this),\r\n        getNextPossiblePosition: this.getNextPossiblePosition.bind(this),\r\n        getFirstPossiblePosition: this.getFirstPossiblePosition.bind(this),\r\n        getLastPossiblePosition: this.getLastPossiblePosition.bind(this),\r\n      };\r\n      this.columns = this.$options.minCols;\r\n      this.rows = this.$options.minRows;\r\n      this.setGridSize();\r\n      this.calculateLayout();\r\n    }\r\n  }\r\n\r\n  resize(): void {\r\n    let height;\r\n    let width;\r\n    if (this.$options.gridType === 'fit' && !this.mobile) {\r\n      width = this.el.offsetWidth;\r\n      height = this.el.offsetHeight;\r\n    } else {\r\n      width = this.el.clientWidth;\r\n      height = this.el.clientHeight;\r\n    }\r\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\r\n      this.onResize();\r\n    }\r\n  }\r\n\r\n  setOptions(): void {\r\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\r\n    if (!this.$options.disableWindowResize && !this.windowResize) {\r\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize.bind(this));\r\n    } else if (this.$options.disableWindowResize && this.windowResize) {\r\n      this.windowResize();\r\n      this.windowResize = null;\r\n    }\r\n    this.emptyCell.updateOptions();\r\n  }\r\n\r\n  optionsChanged(): void {\r\n    this.setOptions();\r\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\r\n    for (; widgetsIndex >= 0; widgetsIndex--) {\r\n      widget = this.grid[widgetsIndex];\r\n      widget.updateOptions();\r\n    }\r\n    this.calculateLayout();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.windowResize) {\r\n      this.windowResize();\r\n    }\r\n    if (this.options && this.options.destroyCallback) {\r\n      this.options.destroyCallback(this);\r\n    }\r\n    if (this.options && this.options.api) {\r\n      this.options.api.resize = undefined;\r\n      this.options.api.optionsChanged = undefined;\r\n      this.options.api.getNextPossiblePosition = undefined;\r\n      this.options.api = undefined;\r\n    }\r\n    this.emptyCell.destroy();\r\n    delete this.emptyCell;\r\n    this.compact.destroy();\r\n    delete this.compact;\r\n  }\r\n\r\n  onResize(): void {\r\n    this.setGridSize();\r\n    this.calculateLayout();\r\n  }\r\n\r\n  checkIfToResize(): boolean {\r\n    const clientWidth = this.el.clientWidth;\r\n    const offsetWidth = this.el.offsetWidth;\r\n    const scrollWidth = this.el.scrollWidth;\r\n    const clientHeight = this.el.clientHeight;\r\n    const offsetHeight = this.el.offsetHeight;\r\n    const scrollHeight = this.el.scrollHeight;\r\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\r\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\r\n    const horizontalScrollPresent = clientHeight < offsetHeight\r\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\r\n    if (verticalScrollPresent) {\r\n      return false;\r\n    }\r\n    return !horizontalScrollPresent;\r\n  }\r\n\r\n  setGridSize(): void {\r\n    const el = this.el;\r\n    let width = el.clientWidth;\r\n    let height = el.clientHeight;\r\n    if (this.$options.setGridSize || this.$options.gridType === 'fit' && !this.mobile) {\r\n      width = el.offsetWidth;\r\n      height = el.offsetHeight;\r\n    } else {\r\n      width = el.clientWidth;\r\n      height = el.clientHeight;\r\n    }\r\n    this.curWidth = width;\r\n    this.curHeight = height;\r\n  }\r\n\r\n  setGridDimensions(): void {\r\n    this.setGridSize();\r\n    if (!this.mobile && this.$options.mobileBreakpoint > this.curWidth) {\r\n      this.mobile = !this.mobile;\r\n      this.renderer.addClass(this.el, 'mobile');\r\n    } else if (this.mobile && this.$options.mobileBreakpoint < this.curWidth) {\r\n      this.mobile = !this.mobile;\r\n      this.renderer.removeClass(this.el, 'mobile');\r\n    }\r\n    let rows = this.$options.minRows, columns = this.$options.minCols;\r\n\r\n    let widgetsIndex = this.grid.length - 1, widget;\r\n    for (; widgetsIndex >= 0; widgetsIndex--) {\r\n      widget = this.grid[widgetsIndex];\r\n      if (!widget.notPlaced) {\r\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\r\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\r\n      }\r\n    }\r\n\r\n    if (this.columns !== columns || this.rows !== rows) {\r\n      this.columns = columns;\r\n      this.rows = rows;\r\n      if (this.options.gridSizeChangedCallback) {\r\n        this.options.gridSizeChangedCallback(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateLayout(): void {\r\n    if (this.compact) {\r\n      this.compact.checkCompact();\r\n    }\r\n\r\n    this.setGridDimensions();\r\n    if (this.$options.outerMargin) {\r\n      let marginWidth = -this.$options.margin;\r\n      if (this.$options.outerMarginLeft !== null) {\r\n        marginWidth += this.$options.outerMarginLeft;\r\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\r\n      } else {\r\n        marginWidth += this.$options.margin;\r\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\r\n      }\r\n      if (this.$options.outerMarginRight !== null) {\r\n        marginWidth += this.$options.outerMarginRight;\r\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\r\n      } else {\r\n        marginWidth += this.$options.margin;\r\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\r\n      }\r\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\r\n      let marginHeight = -this.$options.margin;\r\n      if (this.$options.outerMarginTop !== null) {\r\n        marginHeight += this.$options.outerMarginTop;\r\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\r\n      } else {\r\n        marginHeight += this.$options.margin;\r\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\r\n      }\r\n      if (this.$options.outerMarginBottom !== null) {\r\n        marginHeight += this.$options.outerMarginBottom;\r\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\r\n      } else {\r\n        marginHeight += this.$options.margin;\r\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\r\n      }\r\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\r\n    } else {\r\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\r\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows;\r\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\r\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\r\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\r\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\r\n    }\r\n    this.gridRenderer.updateGridster();\r\n\r\n    this.updateGrid();\r\n\r\n    if (this.$options.setGridSize) {\r\n      this.renderer.setStyle(this.el, 'width', (this.columns * this.curColWidth + this.$options.margin) + 'px');\r\n      this.renderer.setStyle(this.el, 'height', (this.rows * this.curRowHeight + this.$options.margin) + 'px');\r\n    } else {\r\n      this.renderer.setStyle(this.el, 'width', '');\r\n      this.renderer.setStyle(this.el, 'height', '');\r\n    }\r\n\r\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\r\n    for (; widgetsIndex >= 0; widgetsIndex--) {\r\n      widget = this.grid[widgetsIndex];\r\n      widget.setSize();\r\n      widget.drag.toggle();\r\n      widget.resize.toggle();\r\n    }\r\n\r\n    setTimeout(this.resize.bind(this), 100);\r\n  }\r\n\r\n  updateGrid(): void {\r\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\r\n      this.renderer.addClass(this.el, 'display-grid');\r\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\r\n      this.renderer.addClass(this.el, 'display-grid');\r\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\r\n      this.renderer.removeClass(this.el, 'display-grid');\r\n    }\r\n    this.setGridDimensions();\r\n    this.gridColumns.length = Math.max(this.columns, Math.floor(this.curWidth / this.curColWidth)) || 0;\r\n    this.gridRows.length = Math.max(this.rows, Math.floor(this.curHeight / this.curRowHeight)) || 0;\r\n    this.cdRef.markForCheck();\r\n  }\r\n\r\n  addItem(itemComponent: GridsterItemComponentInterface): void {\r\n    if (itemComponent.$item.cols === undefined) {\r\n      itemComponent.$item.cols = this.$options.defaultItemCols;\r\n      itemComponent.item.cols = itemComponent.$item.cols;\r\n      itemComponent.itemChanged();\r\n    }\r\n    if (itemComponent.$item.rows === undefined) {\r\n      itemComponent.$item.rows = this.$options.defaultItemRows;\r\n      itemComponent.item.rows = itemComponent.$item.rows;\r\n      itemComponent.itemChanged();\r\n    }\r\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\r\n      this.autoPositionItem(itemComponent);\r\n    } else if (this.checkCollision(itemComponent.$item)) {\r\n      if (!this.$options.disableWarnings) {\r\n        itemComponent.notPlaced = true;\r\n        console.warn('Can\\'t be placed in the bounds of the dashboard, trying to auto position!/n' +\r\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\r\n      }\r\n      if (!this.$options.disableAutoPositionOnConflict) {\r\n        this.autoPositionItem(itemComponent);\r\n      } else {\r\n        itemComponent.notPlaced = true;\r\n      }\r\n    }\r\n    this.grid.push(itemComponent);\r\n    this.calculateLayoutDebounce();\r\n  }\r\n\r\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\r\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\r\n    this.calculateLayoutDebounce();\r\n    if (this.options.itemRemovedCallback) {\r\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\r\n    }\r\n  }\r\n\r\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean {\r\n    let collision: GridsterItemComponentInterface | boolean = false;\r\n    if (this.options.itemValidateCallback) {\r\n      collision = !this.options.itemValidateCallback(item);\r\n    }\r\n    if (!collision && this.checkGridCollision(item)) {\r\n      collision = true;\r\n    }\r\n    if (!collision) {\r\n      const c = this.findItemWithItem(item);\r\n      if (c) {\r\n        collision = c;\r\n      }\r\n    }\r\n    return collision;\r\n  }\r\n\r\n\r\n  checkGridCollision(item: GridsterItem): boolean {\r\n    const noNegativePosition = item.y > -1 && item.x > -1;\r\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\r\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\r\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\r\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\r\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\r\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\r\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\r\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\r\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\r\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\r\n    const area = item.cols * item.rows;\r\n    const inMinArea = minAreaLimit <= area;\r\n    const inMaxArea = maxAreaLimit >= area;\r\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\r\n  }\r\n\r\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\r\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\r\n    for (; widgetsIndex > -1; widgetsIndex--) {\r\n      widget = this.grid[widgetsIndex];\r\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\r\n        return widget;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\r\n    const a: Array<GridsterItemComponentInterface> = [];\r\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\r\n    for (; widgetsIndex > -1; widgetsIndex--) {\r\n      widget = this.grid[widgetsIndex];\r\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\r\n        a.push(widget);\r\n      }\r\n    }\r\n    return a;\r\n  }\r\n\r\n\r\n\r\n  autoPositionItem(itemComponent: GridsterItemComponentInterface): void {\r\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\r\n      itemComponent.notPlaced = false;\r\n      itemComponent.item.x = itemComponent.$item.x;\r\n      itemComponent.item.y = itemComponent.$item.y;\r\n      itemComponent.itemChanged();\r\n    } else {\r\n      itemComponent.notPlaced = true;\r\n      if (!this.$options.disableWarnings) {\r\n        console.warn('Can\\'t be placed in the bounds of the dashboard!/n' +\r\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\r\n      }\r\n    }\r\n  }\r\n\r\n  getNextPossiblePosition(newItem: GridsterItem, startingFrom: { y?: number, x?: number } = {}): boolean {\r\n    if (newItem.cols === -1) {\r\n      newItem.cols = this.$options.defaultItemCols;\r\n    }\r\n    if (newItem.rows === -1) {\r\n      newItem.rows = this.$options.defaultItemRows;\r\n    }\r\n    this.setGridDimensions();\r\n    let rowsIndex = startingFrom.y || 0, colsIndex;\r\n    for (; rowsIndex < this.rows; rowsIndex++) {\r\n      newItem.y = rowsIndex;\r\n      colsIndex = startingFrom.x || 0;\r\n      for (; colsIndex < this.columns; colsIndex++) {\r\n        newItem.x = colsIndex;\r\n        if (!this.checkCollision(newItem)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\r\n    const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\r\n    const addToRows = this.rows <= this.columns && canAddToRows;\r\n    if (!addToRows && canAddToColumns) {\r\n      newItem.x = this.columns;\r\n      newItem.y = 0;\r\n      return true;\r\n    } else if (canAddToRows) {\r\n      newItem.y = this.rows;\r\n      newItem.x = 0;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFirstPossiblePosition(item: GridsterItem): GridsterItem {\r\n    const tmpItem = Object.assign({}, item);\r\n    this.getNextPossiblePosition(tmpItem);\r\n    return tmpItem;\r\n  }\r\n\r\n  getLastPossiblePosition(item: GridsterItem): GridsterItem {\r\n    let farthestItem: { y: number, x: number } = {y: 0, x: 0};\r\n    farthestItem = this.grid.reduce((prev: any, curr: GridsterItemComponentInterface) => {\r\n      const currCoords = {y: curr.$item.y + curr.$item.rows - 1, x: curr.$item.x + curr.$item.cols - 1};\r\n      if (GridsterUtils.compareItems(prev, currCoords) === 1) {\r\n        return currCoords;\r\n      } else {\r\n        return prev;\r\n      }\r\n    }, farthestItem);\r\n\r\n    const tmpItem = Object.assign({}, item);\r\n    this.getNextPossiblePosition(tmpItem, farthestItem);\r\n    return tmpItem;\r\n  }\r\n\r\n  pixelsToPositionX(x: number, roundingMethod: Function, noLimit?: boolean): number {\r\n    const position = roundingMethod(x / this.curColWidth);\r\n    if (noLimit) {\r\n      return position;\r\n    } else {\r\n      return Math.max(position, 0);\r\n    }\r\n  }\r\n\r\n  pixelsToPositionY(y: number, roundingMethod: Function, noLimit?: boolean): number {\r\n    const position = roundingMethod(y / this.curRowHeight);\r\n    if (noLimit) {\r\n      return position;\r\n    } else {\r\n      return Math.max(position, 0);\r\n    }\r\n  }\r\n\r\n  positionXToPixels(x: number): number {\r\n    return x * this.curColWidth;\r\n  }\r\n\r\n  positionYToPixels(y: number): number {\r\n    return y * this.curRowHeight;\r\n  }\r\n\r\n  // ------ Functions for swapWhileDragging option\r\n\r\n  // identical to checkCollision() except that here we add bondaries. \r\n  static checkCollisionTwoItemsForSwaping(item: GridsterItem, item2: GridsterItem): boolean {\r\n    // if the cols or rows of the items are 1 , doesnt make any sense to set a boundary. Only if the item is bigger we set a boundary\r\n    const horizontalBoundaryItem1 = item.cols === 1 ? 0 : 1;\r\n    const horizontalBoundaryItem2 = item2.cols === 1 ? 0 : 1;\r\n    const verticalBoundaryItem1 = item.rows === 1 ? 0 : 1;\r\n    const verticalBoundaryItem2 = item2.rows === 1 ? 0 : 1;\r\n    return item.x + horizontalBoundaryItem1 < item2.x + item2.cols\r\n      && item.x + item.cols > item2.x + horizontalBoundaryItem2\r\n      && item.y + verticalBoundaryItem1 < item2.y + item2.rows\r\n      && item.y + item.rows > item2.y + verticalBoundaryItem2;\r\n  }\r\n\r\n  // identical to checkCollision() except that this function calls findItemWithItemForSwaping() instead of findItemWithItem()\r\n  checkCollisionForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\r\n    let collision: GridsterItemComponentInterface | boolean = false;\r\n    if (this.options.itemValidateCallback) {\r\n      collision = !this.options.itemValidateCallback(item);\r\n    }\r\n    if (!collision && this.checkGridCollision(item)) {\r\n      collision = true;\r\n    }\r\n    if (!collision) {\r\n      const c = this.findItemWithItemForSwaping(item);\r\n      if (c) {\r\n        collision = c;\r\n      }\r\n    }\r\n    return collision;\r\n  }\r\n\r\n  // identical to findItemWithItem() except that this function calls checkCollisionTwoItemsForSwaping() instead of checkCollisionTwoItems()\r\n  findItemWithItemForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\r\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\r\n    for (; widgetsIndex > -1; widgetsIndex--) {\r\n      widget = this.grid[widgetsIndex];\r\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItemsForSwaping(widget.$item, item)) {\r\n        return widget;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // ------ End of functions for swapWhileDragging option\r\n\r\n}\r\n","import {GridsterItem} from './gridsterItem.interface';\r\nimport {GridsterDraggable} from './gridsterDraggable.service';\r\nimport {Renderer2} from '@angular/core';\r\nimport {GridsterResizable} from './gridsterResizable.service';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\nexport abstract class GridsterItemComponentInterface {\r\n  item: GridsterItem;\r\n  $item: GridsterItem;\r\n  top: number;\r\n  left: number;\r\n  width: number;\r\n  height: number;\r\n  drag: GridsterDraggable;\r\n  resize: GridsterResizable;\r\n  notPlaced: boolean;\r\n  updateOptions: () => void;\r\n  itemChanged: () => void;\r\n  setSize: () => void;\r\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\r\n  canBeDragged: () => boolean;\r\n  canBeResized: () => boolean;\r\n  el: any;\r\n  gridster: GridsterComponentInterface;\r\n  renderer: Renderer2;\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\n@Injectable()\r\nexport class GridsterSwap {\r\n  private swapedItem: GridsterItemComponentInterface | undefined;\r\n  private gridsterItem: GridsterItemComponentInterface;\r\n  private gridster: GridsterComponentInterface;\r\n\r\n  constructor(gridsterItem: GridsterItemComponentInterface) {\r\n    this.gridsterItem = gridsterItem;\r\n    this.gridster = gridsterItem.gridster;\r\n  }\r\n\r\n  destroy(): void {\r\n    delete this.gridster;\r\n    delete this.gridsterItem;\r\n    delete this.swapedItem;\r\n  }\r\n\r\n  swapItems(): void {\r\n    if (this.gridster.$options.swap) {\r\n      this.checkSwapBack();\r\n      this.checkSwap(this.gridsterItem);\r\n    }\r\n  }\r\n\r\n  checkSwapBack(): void {\r\n    if (this.swapedItem) {\r\n      const x: number = this.swapedItem.$item.x;\r\n      const y: number = this.swapedItem.$item.y;\r\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\r\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\r\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\r\n        this.swapedItem.$item.x = x;\r\n        this.swapedItem.$item.y = y;\r\n      } else {\r\n        this.swapedItem.setSize();\r\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\r\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\r\n        this.swapedItem = undefined;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  restoreSwapItem(): void {\r\n    if (this.swapedItem) {\r\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\r\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\r\n      this.swapedItem.setSize();\r\n      this.swapedItem = undefined;\r\n    }\r\n  }\r\n\r\n  setSwapItem(): void {\r\n    if (this.swapedItem) {\r\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\r\n      this.swapedItem = undefined;\r\n    }\r\n  }\r\n\r\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\r\n    let gridsterItemCollision;\r\n    if (this.gridster.$options.swapWhileDragging) {\r\n      gridsterItemCollision = this.gridster.checkCollisionForSwaping(pushedBy.$item);\r\n    }else{\r\n      gridsterItemCollision = this.gridster.checkCollision(pushedBy.$item);\r\n    }\r\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\r\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\r\n      const copyCollisionX = gridsterItemCollide.$item.x;\r\n      const copyCollisionY = gridsterItemCollide.$item.y;\r\n      const copyX = pushedBy.$item.x;\r\n      const copyY = pushedBy.$item.y;\r\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\r\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\r\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\r\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\r\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\r\n        pushedBy.$item.x = copyX;\r\n        pushedBy.$item.y = copyY;\r\n        gridsterItemCollide.$item.x = copyCollisionX;\r\n        gridsterItemCollide.$item.y = copyCollisionY;\r\n      } else {\r\n        gridsterItemCollide.setSize();\r\n        this.swapedItem = gridsterItemCollide;\r\n        if (this.gridster.$options.swapWhileDragging) {\r\n          this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\r\n          this.setSwapItem();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {GridsterResizeEventType} from './gridsterResizeEventType.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\nlet scrollSensitivity: number;\r\nlet scrollSpeed: number;\r\nconst intervalDuration = 50;\r\nlet gridsterElement: any;\r\nlet resizeEvent: boolean | undefined;\r\nlet resizeEventType: GridsterResizeEventType | undefined;\r\nlet intervalE: number;\r\nlet intervalW: number;\r\nlet intervalN: number;\r\nlet intervalS: number;\r\n\r\nexport function scroll(gridster: GridsterComponentInterface, left: number, top: number, width: number, height: number,\r\n                       e: MouseEvent, lastMouse: any,\r\n                       calculateItemPosition: Function, resize?: boolean, resizeEventScrollType?: GridsterResizeEventType) {\r\n  scrollSensitivity = gridster.$options.scrollSensitivity;\r\n  scrollSpeed = gridster.$options.scrollSpeed;\r\n  gridsterElement = gridster.el;\r\n  resizeEvent = resize;\r\n  resizeEventType = resizeEventScrollType;\r\n\r\n  const offsetWidth = gridsterElement.offsetWidth;\r\n  const offsetHeight = gridsterElement.offsetHeight;\r\n  const offsetLeft = gridsterElement.scrollLeft;\r\n  const offsetTop = gridsterElement.scrollTop;\r\n  const elemTopOffset = top - offsetTop;\r\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\r\n\r\n  if (!gridster.$options.disableScrollVertical) {\r\n    if (lastMouse.clientY < e.clientY && elemBottomOffset < scrollSensitivity) {\r\n      cancelN();\r\n      if ((resizeEvent && resizeEventType && !resizeEventType.s) || intervalS) {\r\n        return;\r\n      }\r\n      intervalS = startVertical(1, calculateItemPosition, lastMouse);\r\n    } else if (lastMouse.clientY > e.clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\r\n      cancelS();\r\n      if ((resizeEvent && resizeEventType && !resizeEventType.n) || intervalN) {\r\n        return;\r\n      }\r\n      intervalN = startVertical(-1, calculateItemPosition, lastMouse);\r\n    } else if (lastMouse.clientY !== e.clientY) {\r\n      cancelVertical();\r\n    }\r\n  }\r\n\r\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\r\n  const elemLeftOffset = left - offsetLeft;\r\n\r\n  if (!gridster.$options.disableScrollHorizontal) {\r\n    if (lastMouse.clientX < e.clientX && elemRightOffset <= scrollSensitivity) {\r\n      cancelW();\r\n      if ((resizeEvent && resizeEventType && !resizeEventType.e) || intervalE) {\r\n        return;\r\n      }\r\n      intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\r\n    } else if (lastMouse.clientX > e.clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\r\n      cancelE();\r\n      if ((resizeEvent && resizeEventType && !resizeEventType.w) || intervalW) {\r\n        return;\r\n      }\r\n      intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\r\n    } else if (lastMouse.clientX !== e.clientX) {\r\n      cancelHorizontal();\r\n    }\r\n  }\r\n}\r\n\r\nfunction startVertical(sign: number, calculateItemPosition: Function, lastMouse: any): any {\r\n  let clientY = lastMouse.clientY;\r\n  return setInterval(() => {\r\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\r\n      cancelVertical();\r\n    }\r\n    gridsterElement.scrollTop += sign * scrollSpeed;\r\n    clientY += sign * scrollSpeed;\r\n    calculateItemPosition({clientX: lastMouse.clientX, clientY: clientY});\r\n  }, intervalDuration);\r\n}\r\n\r\nfunction startHorizontal(sign: number, calculateItemPosition: Function, lastMouse: any): any {\r\n  let clientX = lastMouse.clientX;\r\n  return setInterval(() => {\r\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\r\n      cancelHorizontal();\r\n    }\r\n    gridsterElement.scrollLeft += sign * scrollSpeed;\r\n    clientX += sign * scrollSpeed;\r\n    calculateItemPosition({clientX: clientX, clientY: lastMouse.clientY});\r\n  }, intervalDuration);\r\n}\r\n\r\nexport function cancelScroll() {\r\n  cancelHorizontal();\r\n  cancelVertical();\r\n  gridsterElement = undefined;\r\n}\r\n\r\nfunction cancelHorizontal() {\r\n  cancelE();\r\n  cancelW();\r\n}\r\n\r\nfunction cancelVertical() {\r\n  cancelN();\r\n  cancelS();\r\n}\r\n\r\nfunction cancelE() {\r\n  if (intervalE) {\r\n    clearInterval(intervalE);\r\n    intervalE = 0;\r\n  }\r\n}\r\n\r\nfunction cancelW() {\r\n  if (intervalW) {\r\n    clearInterval(intervalW);\r\n    intervalW = 0;\r\n  }\r\n}\r\n\r\nfunction cancelS() {\r\n  if (intervalS) {\r\n    clearInterval(intervalS);\r\n    intervalS = 0;\r\n  }\r\n}\r\n\r\nfunction cancelN() {\r\n  if (intervalN) {\r\n    clearInterval(intervalN);\r\n    intervalN = 0;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\n@Injectable()\r\nexport class GridsterPush {\r\n  public fromSouth: string;\r\n  public fromNorth: string;\r\n  public fromEast: string;\r\n  public fromWest: string;\r\n  private pushedItems: Array<GridsterItemComponentInterface>;\r\n  private pushedItemsTemp: Array<GridsterItemComponentInterface>;\r\n  private pushedItemsTempPath: Array<Array<{ x: number, y: number }>>;\r\n  private pushedItemsPath: Array<Array<{ x: number, y: number }>>;\r\n  private gridsterItem: GridsterItemComponentInterface;\r\n  private gridster: GridsterComponentInterface;\r\n  private pushedItemsOrder: Array<GridsterItemComponentInterface>;\r\n  private tryPattern: {\r\n    fromEast: Array<Function>,\r\n    fromWest: Array<Function>,\r\n    fromNorth: Array<Function>,\r\n    fromSouth: Array<Function>,\r\n    [key: string]: Array<Function>\r\n  };\r\n\r\n  constructor(gridsterItem: GridsterItemComponentInterface) {\r\n    this.pushedItems = [];\r\n    this.pushedItemsTemp = [];\r\n    this.pushedItemsTempPath = [];\r\n    this.pushedItemsPath = [];\r\n    gridsterItem['id'] = this.generateTempRandomId();\r\n    this.gridsterItem = gridsterItem;\r\n    this.gridster = gridsterItem.gridster;\r\n    this.tryPattern = {\r\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\r\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\r\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\r\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\r\n    };\r\n    this.fromSouth = 'fromSouth';\r\n    this.fromNorth = 'fromNorth';\r\n    this.fromEast = 'fromEast';\r\n    this.fromWest = 'fromWest';\r\n  }\r\n\r\n  destroy(): void {\r\n    delete this.gridster;\r\n    delete this.gridsterItem;\r\n  }\r\n\r\n  pushItems(direction: string, disable?: boolean): boolean {\r\n    if (this.gridster.$options.pushItems && !disable) {\r\n      this.pushedItemsOrder = [];\r\n      const pushed = this.push(this.gridsterItem, direction);\r\n      if (!pushed) {\r\n        this.restoreTempItems();\r\n      }\r\n      this.pushedItemsOrder = [];\r\n      this.pushedItemsTemp = [];\r\n      this.pushedItemsTempPath = [];\r\n      this.cleanTempIds();\r\n      return pushed;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  restoreTempItems(): void {\r\n    let i = this.pushedItemsTemp.length - 1;\r\n    for (; i > -1; i--) {\r\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\r\n    }\r\n  }\r\n\r\n  restoreItems(): void {\r\n    let i = 0;\r\n    const l: number = this.pushedItems.length;\r\n    let pushedItem: GridsterItemComponentInterface;\r\n    for (; i < l; i++) {\r\n      pushedItem = this.pushedItems[i];\r\n      pushedItem.$item.x = pushedItem.item.x || 0;\r\n      pushedItem.$item.y = pushedItem.item.y || 0;\r\n      pushedItem.setSize();\r\n    }\r\n    this.pushedItems = [];\r\n    this.pushedItemsPath = [];\r\n  }\r\n\r\n  setPushedItems() {\r\n    let i = 0;\r\n    const l: number = this.pushedItems.length;\r\n    let pushedItem: GridsterItemComponentInterface;\r\n    for (; i < l; i++) {\r\n      pushedItem = this.pushedItems[i];\r\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\r\n    }\r\n    this.pushedItems = [];\r\n    this.pushedItemsPath = [];\r\n  }\r\n\r\n  checkPushBack(): void {\r\n    let i: number = this.pushedItems.length - 1;\r\n    let change = false;\r\n    for (; i > -1; i--) {\r\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\r\n        change = true;\r\n      }\r\n    }\r\n    if (change) {\r\n      this.checkPushBack();\r\n    }\r\n  }\r\n\r\n  private generateTempRandomId() : string {\r\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\r\n  }\r\n\r\n  private cleanTempIds(){\r\n    const allItemsWithIds = this.gridster.grid.filter((el:GridsterItemComponentInterface) => el['id']);\r\n    allItemsWithIds.forEach((el: GridsterItemComponentInterface) => delete el['id']);\r\n  }\r\n\r\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\r\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\r\n      return false;\r\n    }\r\n    if (direction === '') {\r\n      return false;\r\n    }\r\n    const a: Array<GridsterItemComponentInterface> = this.gridster.findItemsWithItem(gridsterItem.$item);\r\n    let i = a.length - 1, itemCollision: GridsterItemComponentInterface;\r\n    let makePush = true;\r\n    const b: Array<GridsterItemComponentInterface> = [];\r\n    for (; i > -1; i--) {\r\n      itemCollision = a[i];\r\n      if (!itemCollision['id']) {\r\n        itemCollision['id'] = this.generateTempRandomId();\r\n      }\r\n      if (itemCollision === this.gridsterItem) {\r\n        makePush = false;\r\n        break;\r\n      }\r\n      if (!itemCollision.canBeDragged()) {\r\n        makePush = false;\r\n        break;\r\n      }\r\n      const compare = this.pushedItemsTemp.find((el: GridsterItemComponentInterface) => {\r\n        return el['id'] === itemCollision['id'];\r\n      });\r\n      if (compare) {\r\n        makePush = false;\r\n        break;\r\n      }\r\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\r\n        this.pushedItemsOrder.push(itemCollision);\r\n        b.push(itemCollision);\r\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\r\n        this.pushedItemsOrder.push(itemCollision);\r\n        b.push(itemCollision);\r\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\r\n        this.pushedItemsOrder.push(itemCollision);\r\n        b.push(itemCollision);\r\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\r\n        this.pushedItemsOrder.push(itemCollision);\r\n        b.push(itemCollision);\r\n      } else {\r\n        makePush = false;\r\n        break;\r\n      }\r\n    }\r\n    if (!makePush) {\r\n      i = this.pushedItemsOrder.lastIndexOf(b[0]);\r\n      if (i > -1) {\r\n        let j = this.pushedItemsOrder.length - 1;\r\n        for (; j >= i; j--) {\r\n          itemCollision = this.pushedItemsOrder[j];\r\n          this.pushedItemsOrder.pop();\r\n          this.removeFromTempPushed(itemCollision);\r\n          this.removeFromPushedItem(itemCollision);\r\n        }\r\n      }\r\n    }\r\n    return makePush;\r\n  }\r\n\r\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\r\n    if (!this.gridster.$options.pushDirections.south) {\r\n      return false;\r\n    }\r\n    this.addToTempPushed(gridsterItemCollide);\r\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\r\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\r\n      gridsterItemCollide.setSize();\r\n      this.addToPushed(gridsterItemCollide);\r\n      return true;\r\n    } else {\r\n      this.removeFromTempPushed(gridsterItemCollide);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\r\n    if (!this.gridster.$options.pushDirections.north) {\r\n      return false;\r\n    }\r\n    this.addToTempPushed(gridsterItemCollide);\r\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\r\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\r\n      gridsterItemCollide.setSize();\r\n      this.addToPushed(gridsterItemCollide);\r\n      return true;\r\n    } else {\r\n      this.removeFromTempPushed(gridsterItemCollide);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\r\n    if (!this.gridster.$options.pushDirections.east) {\r\n      return false;\r\n    }\r\n    this.addToTempPushed(gridsterItemCollide);\r\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\r\n    if (this.push(gridsterItemCollide, this.fromWest)) {\r\n      gridsterItemCollide.setSize();\r\n      this.addToPushed(gridsterItemCollide);\r\n      return true;\r\n    } else {\r\n      this.removeFromTempPushed(gridsterItemCollide);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\r\n    if (!this.gridster.$options.pushDirections.west) {\r\n      return false;\r\n    }\r\n    this.addToTempPushed(gridsterItemCollide);\r\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\r\n    if (this.push(gridsterItemCollide, this.fromEast)) {\r\n      gridsterItemCollide.setSize();\r\n      this.addToPushed(gridsterItemCollide);\r\n      return true;\r\n    } else {\r\n      this.removeFromTempPushed(gridsterItemCollide);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private addToTempPushed(gridsterItem: GridsterItemComponentInterface): void {\r\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\r\n    if (i === -1) {\r\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\r\n      this.pushedItemsTempPath[i] = [];\r\n    }\r\n    this.pushedItemsTempPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\r\n  }\r\n\r\n  private removeFromTempPushed(gridsterItem: GridsterItemComponentInterface): void {\r\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\r\n    const tempPosition = this.pushedItemsTempPath[i].pop();\r\n    if (!tempPosition) {\r\n      return;\r\n    }\r\n    gridsterItem.$item.x = tempPosition.x;\r\n    gridsterItem.$item.y = tempPosition.y;\r\n    gridsterItem.setSize();\r\n    if (!this.pushedItemsTempPath[i].length) {\r\n      this.pushedItemsTemp.splice(i, 1);\r\n      this.pushedItemsTempPath.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\r\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\r\n      this.pushedItems.push(gridsterItem);\r\n      this.pushedItemsPath.push([{x: gridsterItem.item.x || 0, y: gridsterItem.item.y || 0},\r\n        {x: gridsterItem.$item.x, y: gridsterItem.$item.y}]);\r\n    } else {\r\n      const i = this.pushedItems.indexOf(gridsterItem);\r\n      this.pushedItemsPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\r\n    }\r\n  }\r\n\r\n  private removeFromPushed(i: number): void {\r\n    if (i > -1) {\r\n      this.pushedItems.splice(i, 1);\r\n      this.pushedItemsPath.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  private removeFromPushedItem(gridsterItem: GridsterItemComponentInterface): void {\r\n    const i = this.pushedItems.indexOf(gridsterItem);\r\n    if (i > -1) {\r\n      this.pushedItemsPath[i].pop();\r\n      if (!this.pushedItemsPath.length) {\r\n        this.pushedItems.splice(i, 1);\r\n        this.pushedItemsPath.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\r\n    const path = this.pushedItemsPath[i];\r\n    let j = path.length - 2;\r\n    let lastPosition, x, y;\r\n    let change = false;\r\n    for (; j > -1; j--) {\r\n      lastPosition = path[j];\r\n      x = pushedItem.$item.x;\r\n      y = pushedItem.$item.y;\r\n      pushedItem.$item.x = lastPosition.x;\r\n      pushedItem.$item.y = lastPosition.y;\r\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\r\n        pushedItem.setSize();\r\n        path.splice(j + 1, path.length - j - 1);\r\n        change = true;\r\n      } else {\r\n        pushedItem.$item.x = x;\r\n        pushedItem.$item.y = y;\r\n      }\r\n    }\r\n    if (path.length < 2) {\r\n      this.removeFromPushed(i);\r\n    }\r\n    return change;\r\n  }\r\n}\r\n","import {Injectable, NgZone} from '@angular/core';\r\n\r\nimport {GridsterSwap} from './gridsterSwap.service';\r\nimport {cancelScroll, scroll} from './gridsterScroll.service';\r\nimport {GridsterPush} from './gridsterPush.service';\r\nimport {GridsterUtils} from './gridsterUtils.service';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\n@Injectable()\r\nexport class GridsterDraggable {\r\n  gridsterItem: GridsterItemComponentInterface;\r\n  gridster: GridsterComponentInterface;\r\n  lastMouse: {\r\n    clientX: number,\r\n    clientY: number\r\n  };\r\n  offsetLeft: number;\r\n  offsetTop: number;\r\n  margin: number;\r\n  diffTop: number;\r\n  diffLeft: number;\r\n  top: number;\r\n  left: number;\r\n  height: number;\r\n  width: number;\r\n  positionX: number;\r\n  positionY: number;\r\n  positionXBackup: number;\r\n  positionYBackup: number;\r\n  enabled: boolean;\r\n  dragStartFunction: (event: any) => void;\r\n  dragFunction: (event: any) => void;\r\n  dragStopFunction: (event: any) => void;\r\n  mousemove: Function;\r\n  mouseup: Function;\r\n  mouseleave: Function;\r\n  cancelOnBlur: Function;\r\n  touchmove: Function;\r\n  touchend: Function;\r\n  touchcancel: Function;\r\n  mousedown: Function;\r\n  touchstart: Function;\r\n  push: GridsterPush;\r\n  swap: GridsterSwap;\r\n  path: Array<{ x: number, y: number }>;\r\n  collision: GridsterItemComponentInterface | boolean = false;\r\n\r\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\r\n    this.gridsterItem = gridsterItem;\r\n    this.gridster = gridster;\r\n    this.lastMouse = {\r\n      clientX: 0,\r\n      clientY: 0\r\n    };\r\n    this.path = [];\r\n  }\r\n\r\n  destroy(): void {\r\n    if (this.gridster.previewStyle) {\r\n      this.gridster.previewStyle(true);\r\n    }\r\n    delete this.gridsterItem;\r\n    delete this.gridster;\r\n    delete this.collision;\r\n    if (this.mousedown) {\r\n      this.mousedown();\r\n      this.touchstart();\r\n    }\r\n  }\r\n\r\n  dragStart(e: any): void {\r\n    switch (e.which) {\r\n      case 1:\r\n        // left mouse button\r\n        break;\r\n      case 2:\r\n      case 3:\r\n        // right or middle mouse button\r\n        return;\r\n    }\r\n\r\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\r\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\r\n    }\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.dragFunction = this.dragMove.bind(this);\r\n    this.dragStopFunction = this.dragStop.bind(this);\r\n\r\n    this.zone.runOutsideAngular(() => {\r\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\r\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\r\n    });\r\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\r\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\r\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\r\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\r\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\r\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\r\n    this.margin = this.gridster.$options.margin;\r\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\r\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\r\n    this.left = this.gridsterItem.left - this.margin;\r\n    this.top = this.gridsterItem.top - this.margin;\r\n    this.width = this.gridsterItem.width;\r\n    this.height = this.gridsterItem.height;\r\n    this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\r\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\r\n    this.gridster.movingItem = this.gridsterItem.$item;\r\n    this.gridster.previewStyle(true);\r\n    this.push = new GridsterPush(this.gridsterItem);\r\n    this.swap = new GridsterSwap(this.gridsterItem);\r\n    this.gridster.dragInProgress = true;\r\n    this.gridster.updateGrid();\r\n    this.path.push({x: this.gridsterItem.item.x || 0, y: this.gridsterItem.item.y || 0});\r\n  }\r\n\r\n  dragMove(e: any): void {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    GridsterUtils.checkTouchEvent(e);\r\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\r\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\r\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse,\r\n      this.calculateItemPositionFromMousePosition.bind(this));\r\n\r\n    this.calculateItemPositionFromMousePosition(e);\r\n  }\r\n\r\n  calculateItemPositionFromMousePosition(e: any): void {\r\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\r\n    this.top = e.clientY + this.offsetTop - this.diffTop;\r\n    this.calculateItemPosition();\r\n    this.lastMouse.clientX = e.clientX;\r\n    this.lastMouse.clientY = e.clientY;\r\n    this.zone.run(() => {\r\n      this.gridster.updateGrid();\r\n    });\r\n  }\r\n\r\n  dragStop(e: any): void {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    cancelScroll();\r\n    this.cancelOnBlur();\r\n    this.mousemove();\r\n    this.mouseup();\r\n    this.mouseleave();\r\n    this.touchmove();\r\n    this.touchend();\r\n    this.touchcancel();\r\n    this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\r\n    this.gridster.dragInProgress = false;\r\n    this.gridster.updateGrid();\r\n    this.path = [];\r\n    if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\r\n      Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e))\r\n        .then(this.makeDrag.bind(this), this.cancelDrag.bind(this));\r\n    } else {\r\n      this.makeDrag();\r\n    }\r\n    setTimeout(() => {\r\n      if (this.gridster) {\r\n        this.gridster.movingItem = null;\r\n        this.gridster.previewStyle(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelDrag() {\r\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\r\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\r\n    this.gridsterItem.setSize();\r\n    if (this.push) {\r\n      this.push.restoreItems();\r\n    }\r\n    if (this.swap) {\r\n      this.swap.restoreSwapItem();\r\n    }\r\n    if (this.push) {\r\n      this.push.destroy();\r\n      delete this.push;\r\n    }\r\n    if (this.swap) {\r\n      this.swap.destroy();\r\n      delete this.swap;\r\n    }\r\n  }\r\n\r\n  makeDrag() {\r\n    if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable\r\n      && this.gridster.options.draggable.dropOverItemsCallback\r\n      && this.collision && this.collision !== true && this.collision.$item) {\r\n      this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\r\n    }\r\n    this.collision = false;\r\n    this.gridsterItem.setSize();\r\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\r\n    if (this.push) {\r\n      this.push.setPushedItems();\r\n    }\r\n    if (this.swap) {\r\n      this.swap.setSwapItem();\r\n    }\r\n    if (this.push) {\r\n      this.push.destroy();\r\n      delete this.push;\r\n    }\r\n    if (this.swap) {\r\n      this.swap.destroy();\r\n      delete this.swap;\r\n    }\r\n  }\r\n\r\n  calculateItemPosition() {\r\n    this.gridster.movingItem = this.gridsterItem.$item;\r\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\r\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\r\n    this.positionXBackup = this.gridsterItem.$item.x;\r\n    this.positionYBackup = this.gridsterItem.$item.y;\r\n    this.gridsterItem.$item.x = this.positionX;\r\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\r\n      this.gridsterItem.$item.x = this.positionXBackup;\r\n    }\r\n    this.gridsterItem.$item.y = this.positionY;\r\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\r\n      this.gridsterItem.$item.y = this.positionYBackup;\r\n    }\r\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, this.top);\r\n\r\n    if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\r\n      const lastPosition = this.path[this.path.length - 1];\r\n      let direction = '';\r\n      if (lastPosition.x < this.gridsterItem.$item.x) {\r\n        direction = this.push.fromWest;\r\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\r\n        direction = this.push.fromEast;\r\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\r\n        direction = this.push.fromNorth;\r\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\r\n        direction = this.push.fromSouth;\r\n      }\r\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\r\n      this.swap.swapItems();\r\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\r\n      if (this.collision) {\r\n        this.gridsterItem.$item.x = this.positionXBackup;\r\n        this.gridsterItem.$item.y = this.positionYBackup;\r\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\r\n          this.gridster.movingItem = null;\r\n        }\r\n      } else {\r\n        this.path.push({x: this.gridsterItem.$item.x, y: this.gridsterItem.$item.y});\r\n      }\r\n      this.push.checkPushBack();\r\n    }\r\n    this.gridster.previewStyle(true);\r\n  }\r\n\r\n  toggle() {\r\n    const enableDrag = this.gridsterItem.canBeDragged();\r\n    if (!this.enabled && enableDrag) {\r\n      this.enabled = !this.enabled;\r\n      this.dragStartFunction = this.dragStartDelay.bind(this);\r\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartFunction);\r\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartFunction);\r\n    } else if (this.enabled && !enableDrag) {\r\n      this.enabled = !this.enabled;\r\n      this.mousedown();\r\n      this.touchstart();\r\n    }\r\n  }\r\n\r\n  dragStartDelay(e: any): void {\r\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('gridster-item-resizable-handler') > -1) {\r\n      return;\r\n    }\r\n    if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\r\n      return;\r\n    }\r\n    GridsterUtils.checkTouchEvent(e);\r\n    if (!this.gridster.$options.draggable.delayStart) {\r\n      this.dragStart(e);\r\n      return;\r\n    }\r\n    const timeout = setTimeout(() => {\r\n      this.dragStart(e);\r\n      cancelDrag();\r\n    }, this.gridster.$options.draggable.delayStart);\r\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\r\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\r\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\r\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\r\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\r\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\r\n\r\n    function cancelMove(eventMove: any) {\r\n      GridsterUtils.checkTouchEvent(eventMove);\r\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\r\n        cancelDrag();\r\n      }\r\n    }\r\n\r\n    function cancelDrag() {\r\n      clearTimeout(timeout);\r\n      cancelOnBlur();\r\n      cancelMouse();\r\n      cancelMouseLeave();\r\n      cancelTouchMove();\r\n      cancelTouchEnd();\r\n      cancelTouchCancel();\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {GridsterItem} from './gridsterItem.interface';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\nimport {GridsterComponent} from './gridster.component';\r\n\r\n@Injectable()\r\nexport class GridsterPushResize {\r\n  public fromSouth: string;\r\n  public fromNorth: string;\r\n  public fromEast: string;\r\n  public fromWest: string;\r\n  private pushedItems: Array<GridsterItemComponentInterface>;\r\n  private pushedItemsPath: Array<Array<GridsterItem>>;\r\n  private gridsterItem: GridsterItemComponentInterface;\r\n  private gridster: GridsterComponentInterface;\r\n  private tryPattern: {\r\n    fromEast: Function,\r\n    fromWest: Function,\r\n    fromNorth: Function,\r\n    fromSouth: Function,\r\n    [key: string]: Function\r\n  };\r\n\r\n  constructor(gridsterItem: GridsterItemComponentInterface) {\r\n    this.pushedItems = [];\r\n    this.pushedItemsPath = [];\r\n    this.gridsterItem = gridsterItem;\r\n    this.gridster = gridsterItem.gridster;\r\n    this.tryPattern = {\r\n      fromEast: this.tryWest,\r\n      fromWest: this.tryEast,\r\n      fromNorth: this.trySouth,\r\n      fromSouth: this.tryNorth\r\n    };\r\n    this.fromSouth = 'fromSouth';\r\n    this.fromNorth = 'fromNorth';\r\n    this.fromEast = 'fromEast';\r\n    this.fromWest = 'fromWest';\r\n  }\r\n\r\n  destroy(): void {\r\n    delete this.gridster;\r\n    delete this.gridsterItem;\r\n  }\r\n\r\n  pushItems(direction: string): boolean {\r\n    if (this.gridster.$options.pushResizeItems) {\r\n      return this.push(this.gridsterItem, direction);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  restoreItems(): void {\r\n    let i = 0;\r\n    const l: number = this.pushedItems.length;\r\n    let pushedItem: GridsterItemComponentInterface;\r\n    for (; i < l; i++) {\r\n      pushedItem = this.pushedItems[i];\r\n      pushedItem.$item.x = pushedItem.item.x || 0;\r\n      pushedItem.$item.y = pushedItem.item.y || 0;\r\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\r\n      pushedItem.$item.row = pushedItem.item.row || 1;\r\n      pushedItem.setSize();\r\n    }\r\n    this.pushedItems = [];\r\n    this.pushedItemsPath = [];\r\n  }\r\n\r\n  setPushedItems() {\r\n    let i = 0;\r\n    const l: number = this.pushedItems.length;\r\n    let pushedItem: GridsterItemComponentInterface;\r\n    for (; i < l; i++) {\r\n      pushedItem = this.pushedItems[i];\r\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\r\n    }\r\n    this.pushedItems = [];\r\n    this.pushedItemsPath = [];\r\n  }\r\n\r\n  checkPushBack(): void {\r\n    let i: number = this.pushedItems.length - 1;\r\n    let change = false;\r\n    for (; i > -1; i--) {\r\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\r\n        change = true;\r\n      }\r\n    }\r\n    if (change) {\r\n      this.checkPushBack();\r\n    }\r\n  }\r\n\r\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\r\n    const gridsterItemCollision: any = this.gridster.checkCollision(gridsterItem.$item);\r\n    if (gridsterItemCollision && gridsterItemCollision !== true &&\r\n      gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\r\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\r\n        return true;\r\n      }\r\n    } else if (gridsterItemCollision === false) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\r\n                   direction: string): boolean {\r\n    const backUpY = gridsterItemCollide.$item.y;\r\n    const backUpRows = gridsterItemCollide.$item.rows;\r\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\r\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\r\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\r\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\r\n      gridsterItemCollide.setSize();\r\n      this.addToPushed(gridsterItemCollide);\r\n      this.push(gridsterItem, direction);\r\n      return true;\r\n    } else {\r\n      gridsterItemCollide.$item.y = backUpY;\r\n      gridsterItemCollide.$item.rows = backUpRows;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\r\n                   direction: string): boolean {\r\n    const backUpRows = gridsterItemCollide.$item.rows;\r\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\r\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\r\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\r\n      gridsterItemCollide.setSize();\r\n      this.addToPushed(gridsterItemCollide);\r\n      this.push(gridsterItem, direction);\r\n      return true;\r\n    } else {\r\n      gridsterItemCollide.$item.rows = backUpRows;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\r\n                  direction: string): boolean {\r\n    const backUpX = gridsterItemCollide.$item.x;\r\n    const backUpCols = gridsterItemCollide.$item.cols;\r\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\r\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\r\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\r\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\r\n      gridsterItemCollide.setSize();\r\n      this.addToPushed(gridsterItemCollide);\r\n      this.push(gridsterItem, direction);\r\n      return true;\r\n    } else {\r\n      gridsterItemCollide.$item.x = backUpX;\r\n      gridsterItemCollide.$item.cols = backUpCols;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\r\n                  direction: string): boolean {\r\n    const backUpCols = gridsterItemCollide.$item.cols;\r\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\r\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\r\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\r\n      gridsterItemCollide.setSize();\r\n      this.addToPushed(gridsterItemCollide);\r\n      this.push(gridsterItem, direction);\r\n      return true;\r\n    } else {\r\n      gridsterItemCollide.$item.cols = backUpCols;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\r\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\r\n      this.pushedItems.push(gridsterItem);\r\n      this.pushedItemsPath.push([\r\n        {\r\n          x: gridsterItem.item.x || 0,\r\n          y: gridsterItem.item.y || 0,\r\n          cols: gridsterItem.item.cols || 0,\r\n          rows: gridsterItem.item.rows || 0\r\n        },\r\n        {\r\n          x: gridsterItem.$item.x,\r\n          y: gridsterItem.$item.y,\r\n          cols: gridsterItem.$item.cols,\r\n          rows: gridsterItem.$item.rows\r\n        }]);\r\n    } else {\r\n      const i = this.pushedItems.indexOf(gridsterItem);\r\n      this.pushedItemsPath[i].push(\r\n        {\r\n          x: gridsterItem.$item.x,\r\n          y: gridsterItem.$item.y,\r\n          cols: gridsterItem.$item.cols,\r\n          rows: gridsterItem.$item.rows\r\n        });\r\n    }\r\n  }\r\n\r\n  private removeFromPushed(i: number): void {\r\n    if (i > -1) {\r\n      this.pushedItems.splice(i, 1);\r\n      this.pushedItemsPath.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\r\n    const path = this.pushedItemsPath[i];\r\n    let j = path.length - 2;\r\n    let lastPosition: { x: number, y: number, cols: number, rows: number }, x, y, cols, rows;\r\n    for (; j > -1; j--) {\r\n      lastPosition = path[j];\r\n      x = pushedItem.$item.x;\r\n      y = pushedItem.$item.y;\r\n      cols = pushedItem.$item.cols;\r\n      rows = pushedItem.$item.rows;\r\n      pushedItem.$item.x = lastPosition.x;\r\n      pushedItem.$item.y = lastPosition.y;\r\n      pushedItem.$item.cols = lastPosition.cols;\r\n      pushedItem.$item.rows = lastPosition.rows;\r\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\r\n        pushedItem.setSize();\r\n        path.splice(j + 1, path.length - 1 - j);\r\n      } else {\r\n        pushedItem.$item.x = x;\r\n        pushedItem.$item.y = y;\r\n        pushedItem.$item.cols = cols;\r\n        pushedItem.$item.rows = rows;\r\n      }\r\n    }\r\n    if (path.length < 2) {\r\n      this.removeFromPushed(i);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import {Injectable, NgZone} from '@angular/core';\r\n\r\nimport {cancelScroll, scroll} from './gridsterScroll.service';\r\nimport {GridsterResizeEventType} from './gridsterResizeEventType.interface';\r\nimport {GridsterPush} from './gridsterPush.service';\r\nimport {GridsterUtils} from './gridsterUtils.service';\r\nimport {GridsterPushResize} from './gridsterPushResize.service';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterComponentInterface} from './gridster.interface';\r\n\r\n@Injectable()\r\nexport class GridsterResizable {\r\n  gridsterItem: GridsterItemComponentInterface;\r\n  gridster: GridsterComponentInterface;\r\n  lastMouse: {\r\n    clientX: number,\r\n    clientY: number\r\n  };\r\n  itemBackup: Array<number>;\r\n  resizeEventScrollType: GridsterResizeEventType;\r\n  directionFunction: Function;\r\n  dragFunction: (event: any) => void;\r\n  dragStopFunction: (event: any) => void;\r\n  resizeEnabled: boolean;\r\n  mousemove: Function;\r\n  mouseup: Function;\r\n  mouseleave: Function;\r\n  cancelOnBlur: Function;\r\n  touchmove: Function;\r\n  touchend: Function;\r\n  touchcancel: Function;\r\n  push: GridsterPush;\r\n  pushResize: GridsterPushResize;\r\n  minHeight: number;\r\n  minWidth: number;\r\n  offsetTop: number;\r\n  offsetLeft: number;\r\n  diffTop: number;\r\n  diffLeft: number;\r\n  diffRight: number;\r\n  diffBottom: number;\r\n  margin: number;\r\n  top: number;\r\n  left: number;\r\n  bottom: number;\r\n  right: number;\r\n  width: number;\r\n  height: number;\r\n  newPosition: number;\r\n\r\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\r\n    this.gridsterItem = gridsterItem;\r\n    this.gridster = gridster;\r\n    this.lastMouse = {\r\n      clientX: 0,\r\n      clientY: 0\r\n    };\r\n    this.itemBackup = [0, 0, 0, 0];\r\n    this.resizeEventScrollType = {w: false, e: false, n: false, s: false};\r\n  }\r\n\r\n  destroy(): void {\r\n    if (this.gridster.previewStyle) {\r\n      this.gridster.previewStyle();\r\n    }\r\n    delete this.gridsterItem;\r\n    delete this.gridster;\r\n  }\r\n\r\n  dragStart(e: any): void {\r\n    switch (e.which) {\r\n      case 1:\r\n        // left mouse button\r\n        break;\r\n      case 2:\r\n      case 3:\r\n        // right or middle mouse button\r\n        return;\r\n    }\r\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\r\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\r\n    }\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.dragFunction = this.dragMove.bind(this);\r\n    this.dragStopFunction = this.dragStop.bind(this);\r\n    this.zone.runOutsideAngular(() => {\r\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\r\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\r\n    });\r\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\r\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\r\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\r\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\r\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\r\n\r\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\r\n    this.lastMouse.clientX = e.clientX;\r\n    this.lastMouse.clientY = e.clientY;\r\n    this.left = this.gridsterItem.left;\r\n    this.top = this.gridsterItem.top;\r\n    this.width = this.gridsterItem.width;\r\n    this.height = this.gridsterItem.height;\r\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\r\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\r\n    this.margin = this.gridster.$options.margin;\r\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\r\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\r\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\r\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\r\n    this.diffTop = e.clientY + this.offsetTop - this.top;\r\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\r\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows)\r\n      - this.margin;\r\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols)\r\n      - this.margin;\r\n    this.gridster.movingItem = this.gridsterItem.$item;\r\n    this.gridster.previewStyle();\r\n    this.push = new GridsterPush(this.gridsterItem);\r\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\r\n    this.gridster.dragInProgress = true;\r\n    this.gridster.updateGrid();\r\n\r\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-n') > -1) {\r\n      this.resizeEventScrollType.n = true;\r\n      this.directionFunction = this.handleN;\r\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-w') > -1) {\r\n      this.resizeEventScrollType.w = true;\r\n      this.directionFunction = this.handleW;\r\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-s') > -1) {\r\n      this.resizeEventScrollType.s = true;\r\n      this.directionFunction = this.handleS;\r\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-e') > -1) {\r\n      this.resizeEventScrollType.e = true;\r\n      this.directionFunction = this.handleE;\r\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-nw') > -1) {\r\n      this.resizeEventScrollType.n = true;\r\n      this.resizeEventScrollType.w = true;\r\n      this.directionFunction = this.handleNW;\r\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-ne') > -1) {\r\n      this.resizeEventScrollType.n = true;\r\n      this.resizeEventScrollType.e = true;\r\n      this.directionFunction = this.handleNE;\r\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-sw') > -1) {\r\n      this.resizeEventScrollType.s = true;\r\n      this.resizeEventScrollType.w = true;\r\n      this.directionFunction = this.handleSW;\r\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-se') > -1) {\r\n      this.resizeEventScrollType.s = true;\r\n      this.resizeEventScrollType.e = true;\r\n      this.directionFunction = this.handleSE;\r\n    }\r\n  }\r\n\r\n  dragMove(e: any): void {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    GridsterUtils.checkTouchEvent(e);\r\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\r\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\r\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction.bind(this), true,\r\n      this.resizeEventScrollType);\r\n    this.directionFunction(e);\r\n\r\n    this.lastMouse.clientX = e.clientX;\r\n    this.lastMouse.clientY = e.clientY;\r\n    this.zone.run(() => {\r\n      this.gridster.updateGrid();\r\n    });\r\n  }\r\n\r\n  dragStop(e: any): void {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    cancelScroll();\r\n    this.mousemove();\r\n    this.mouseup();\r\n    this.mouseleave();\r\n    this.cancelOnBlur();\r\n    this.touchmove();\r\n    this.touchend();\r\n    this.touchcancel();\r\n    this.gridster.dragInProgress = false;\r\n    this.gridster.updateGrid();\r\n    if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\r\n      Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e))\r\n        .then(this.makeResize.bind(this), this.cancelResize.bind(this));\r\n    } else {\r\n      this.makeResize();\r\n    }\r\n    setTimeout(() => {\r\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\r\n      if (this.gridster) {\r\n        this.gridster.movingItem = null;\r\n        this.gridster.previewStyle();\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelResize(): void {\r\n    this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\r\n    this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\r\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\r\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\r\n    this.gridsterItem.setSize();\r\n    this.push.restoreItems();\r\n    this.pushResize.restoreItems();\r\n    this.push.destroy();\r\n    delete this.push;\r\n    this.pushResize.destroy();\r\n    delete this.pushResize;\r\n  }\r\n\r\n  makeResize(): void {\r\n    this.gridsterItem.setSize();\r\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\r\n    this.push.setPushedItems();\r\n    this.pushResize.setPushedItems();\r\n    this.push.destroy();\r\n    delete this.push;\r\n    this.pushResize.destroy();\r\n    delete this.pushResize;\r\n  }\r\n\r\n  handleN(e: any): void {\r\n    this.top = e.clientY + this.offsetTop - this.diffTop;\r\n    this.height = this.bottom - this.top;\r\n    if (this.minHeight > this.height) {\r\n      this.height = this.minHeight;\r\n      this.top = this.bottom - this.minHeight;\r\n    }\r\n    this.newPosition = this.gridster.pixelsToPositionY(this.top + this.margin, Math.floor);\r\n    if (this.gridsterItem.$item.y !== this.newPosition) {\r\n      this.itemBackup[1] = this.gridsterItem.$item.y;\r\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\r\n      this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\r\n      this.gridsterItem.$item.y = this.newPosition;\r\n      this.pushResize.pushItems(this.pushResize.fromSouth);\r\n      this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\r\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\r\n        this.gridsterItem.$item.y = this.itemBackup[1];\r\n        this.gridsterItem.$item.rows = this.itemBackup[3];\r\n        this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\r\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\r\n        return;\r\n      } else {\r\n        this.gridster.previewStyle();\r\n      }\r\n      this.pushResize.checkPushBack();\r\n      this.push.checkPushBack();\r\n    }\r\n    this.setItemTop(this.top);\r\n    this.setItemHeight(this.height);\r\n  }\r\n\r\n  handleW(e: any): void {\r\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\r\n    this.width = this.right - this.left;\r\n    if (this.minWidth > this.width) {\r\n      this.width = this.minWidth;\r\n      this.left = this.right - this.minWidth;\r\n    }\r\n    this.newPosition = this.gridster.pixelsToPositionX(this.left + this.margin, Math.floor);\r\n    if (this.gridsterItem.$item.x !== this.newPosition) {\r\n      this.itemBackup[0] = this.gridsterItem.$item.x;\r\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\r\n      this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\r\n      this.gridsterItem.$item.x = this.newPosition;\r\n      this.pushResize.pushItems(this.pushResize.fromEast);\r\n      this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\r\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\r\n        this.gridsterItem.$item.x = this.itemBackup[0];\r\n        this.gridsterItem.$item.cols = this.itemBackup[2];\r\n        this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\r\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\r\n        return;\r\n      } else {\r\n        this.gridster.previewStyle();\r\n      }\r\n      this.pushResize.checkPushBack();\r\n      this.push.checkPushBack();\r\n    }\r\n    this.setItemLeft(this.left);\r\n    this.setItemWidth(this.width);\r\n  }\r\n\r\n  handleS(e: any): void {\r\n    this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\r\n    if (this.minHeight > this.height) {\r\n      this.height = this.minHeight;\r\n    }\r\n    this.bottom = this.top + this.height;\r\n    this.newPosition = this.gridster.pixelsToPositionY(this.bottom, Math.ceil);\r\n    if ((this.gridsterItem.$item.y + this.gridsterItem.$item.rows) !== this.newPosition) {\r\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\r\n      this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\r\n      this.pushResize.pushItems(this.pushResize.fromNorth);\r\n      this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\r\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\r\n        this.gridsterItem.$item.rows = this.itemBackup[3];\r\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\r\n        return;\r\n      } else {\r\n        this.gridster.previewStyle();\r\n      }\r\n      this.pushResize.checkPushBack();\r\n      this.push.checkPushBack();\r\n    }\r\n    this.setItemHeight(this.height);\r\n  }\r\n\r\n  handleE(e: any): void {\r\n    this.width = e.clientX + this.offsetLeft - this.diffRight - this.left;\r\n    if (this.minWidth > this.width) {\r\n      this.width = this.minWidth;\r\n    }\r\n    this.right = this.left + this.width;\r\n    this.newPosition = this.gridster.pixelsToPositionX(this.right, Math.ceil);\r\n    if ((this.gridsterItem.$item.x + this.gridsterItem.$item.cols) !== this.newPosition) {\r\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\r\n      this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\r\n      this.pushResize.pushItems(this.pushResize.fromWest);\r\n      this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\r\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\r\n        this.gridsterItem.$item.cols = this.itemBackup[2];\r\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\r\n        return;\r\n      } else {\r\n        this.gridster.previewStyle();\r\n      }\r\n      this.pushResize.checkPushBack();\r\n      this.push.checkPushBack();\r\n    }\r\n    this.setItemWidth(this.width);\r\n  }\r\n\r\n  handleNW(e: any): void {\r\n    this.handleN(e);\r\n    this.handleW(e);\r\n  }\r\n\r\n  handleNE(e: any): void {\r\n    this.handleN(e);\r\n    this.handleE(e);\r\n  }\r\n\r\n  handleSW(e: any): void {\r\n    this.handleS(e);\r\n    this.handleW(e);\r\n  }\r\n\r\n  handleSE(e: any): void {\r\n    this.handleS(e);\r\n    this.handleE(e);\r\n  }\r\n\r\n  toggle(): void {\r\n    this.resizeEnabled = this.gridsterItem.canBeResized();\r\n  }\r\n\r\n  dragStartDelay(e: any): void {\r\n    GridsterUtils.checkTouchEvent(e);\r\n    if (!this.gridster.$options.resizable.delayStart) {\r\n      this.dragStart(e);\r\n      return;\r\n    }\r\n    const timeout = setTimeout(() => {\r\n      this.dragStart(e);\r\n      cancelDrag();\r\n    }, this.gridster.$options.resizable.delayStart);\r\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\r\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\r\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\r\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\r\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\r\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\r\n\r\n    function cancelMove(eventMove: any) {\r\n      GridsterUtils.checkTouchEvent(eventMove);\r\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\r\n        cancelDrag();\r\n      }\r\n    }\r\n\r\n    function cancelDrag() {\r\n      clearTimeout(timeout);\r\n      cancelOnBlur();\r\n      cancelMouse();\r\n      cancelMouseLeave();\r\n      cancelTouchMove();\r\n      cancelTouchEnd();\r\n      cancelTouchCancel();\r\n    }\r\n  }\r\n\r\n  setItemTop(top: number): void {\r\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, top);\r\n  }\r\n\r\n  setItemLeft(left: number): void {\r\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, left, this.top);\r\n  }\r\n\r\n  setItemHeight(height: number): void {\r\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\r\n  }\r\n\r\n  setItemWidth(width: number): void {\r\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\r\n  }\r\n}\r\n","import {Component, ElementRef, Host, Input, NgZone, OnDestroy, OnInit, Renderer2, ViewEncapsulation, Inject} from '@angular/core';\r\n\r\nimport {GridsterItem} from './gridsterItem.interface';\r\nimport {GridsterDraggable} from './gridsterDraggable.service';\r\nimport {GridsterResizable} from './gridsterResizable.service';\r\nimport {GridsterUtils} from './gridsterUtils.service';\r\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\r\nimport {GridsterComponent} from './gridster.component';\r\n\r\n@Component({\r\n  selector: 'gridster-item',\r\n  templateUrl: './gridsterItem.html',\r\n  styleUrls: ['./gridsterItem.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\r\n  @Input() item: GridsterItem;\r\n  $item: GridsterItem;\r\n  el: any;\r\n  gridster: GridsterComponent;\r\n  top: number;\r\n  left: number;\r\n  width: number;\r\n  height: number;\r\n  drag: GridsterDraggable;\r\n  resize: GridsterResizable;\r\n  notPlaced: boolean;\r\n  init: boolean;\r\n\r\n  constructor(@Inject(ElementRef) el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2, @Inject(NgZone) private zone: NgZone) {\r\n    this.el = el.nativeElement;\r\n    this.$item = {\r\n      cols: -1,\r\n      rows: -1,\r\n      x: -1,\r\n      y: -1,\r\n    };\r\n    this.gridster = gridster;\r\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\r\n    this.resize = new GridsterResizable(this, gridster, this.zone);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateOptions();\r\n    this.gridster.addItem(this);\r\n  }\r\n\r\n  updateOptions(): void {\r\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\r\n      cols: undefined,\r\n      rows: undefined,\r\n      x: undefined,\r\n      y: undefined,\r\n      dragEnabled: undefined,\r\n      resizeEnabled: undefined,\r\n      compactEnabled: undefined,\r\n      maxItemRows: undefined,\r\n      minItemRows: undefined,\r\n      maxItemCols: undefined,\r\n      minItemCols: undefined,\r\n      maxItemArea: undefined,\r\n      minItemArea: undefined,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.gridster.removeItem(this);\r\n    delete this.gridster;\r\n    this.drag.destroy();\r\n    delete this.drag;\r\n    this.resize.destroy();\r\n    delete this.resize;\r\n  }\r\n\r\n  setSize(): void {\r\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\r\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\r\n    this.updateItemSize();\r\n  }\r\n\r\n  updateItemSize() {\r\n    const top = this.$item.y * this.gridster.curRowHeight;\r\n    const left = this.$item.x * this.gridster.curColWidth;\r\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\r\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\r\n\r\n    if (!this.init && width > 0 && height > 0) {\r\n      this.init = true;\r\n      if (this.item.initCallback) {\r\n        this.item.initCallback(this.item, this);\r\n      }\r\n      if (this.gridster.options.itemInitCallback) {\r\n        this.gridster.options.itemInitCallback(this.item, this);\r\n      }\r\n      if (this.gridster.$options.scrollToNewItems) {\r\n        this.el.scrollIntoView(false);\r\n      }\r\n    }\r\n    if (width !== this.width || height !== this.height) {\r\n      this.width = width;\r\n      this.height = height;\r\n      if (this.gridster.options.itemResizeCallback) {\r\n        this.gridster.options.itemResizeCallback(this.item, this);\r\n      }\r\n    }\r\n    this.top = top;\r\n    this.left = left;\r\n  }\r\n\r\n  itemChanged(): void {\r\n    if (this.gridster.options.itemChangeCallback) {\r\n      this.gridster.options.itemChangeCallback(this.item, this);\r\n    }\r\n  }\r\n\r\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\r\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\r\n      return;\r\n    }\r\n    if (this.gridster.checkCollision(this.$item)) {\r\n      this.$item.x = oldValue.x || 0;\r\n      this.$item.y = oldValue.y || 0;\r\n      this.$item.cols = oldValue.cols || 1;\r\n      this.$item.rows = oldValue.rows || 1;\r\n      this.setSize();\r\n    } else {\r\n      this.item.cols = this.$item.cols;\r\n      this.item.rows = this.$item.rows;\r\n      this.item.x = this.$item.x;\r\n      this.item.y = this.$item.y;\r\n      this.gridster.calculateLayoutDebounce();\r\n      this.itemChanged();\r\n    }\r\n  }\r\n\r\n  canBeDragged(): boolean {\r\n    return !this.gridster.mobile &&\r\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\r\n  }\r\n\r\n  canBeResized(): boolean {\r\n    return !this.gridster.mobile &&\r\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\r\n  }\r\n\r\n}\r\n","import {Component, ElementRef, Host, OnDestroy, Renderer2, ViewEncapsulation, Inject} from '@angular/core';\r\n\r\nimport {GridsterComponent} from './gridster.component';\r\n\r\n@Component({\r\n  selector: 'gridster-preview',\r\n  template: '',\r\n  styleUrls: ['./gridsterPreview.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GridsterPreviewComponent implements OnDestroy {\r\n  el: any;\r\n  gridster: GridsterComponent;\r\n\r\n  constructor(@Inject(ElementRef)  el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2) {\r\n    this.el = el.nativeElement;\r\n    this.gridster = gridster;\r\n    this.gridster.previewStyle = this.previewStyle.bind(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    delete this.el;\r\n    delete this.gridster.previewStyle;\r\n    delete this.gridster;\r\n  }\r\n\r\n  previewStyle(drag?: boolean): void {\r\n    if (!this.gridster.movingItem) {\r\n      this.renderer.setStyle(this.el, 'display', '');\r\n    } else {\r\n      if (this.gridster.compact && drag) {\r\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\r\n      }\r\n      this.renderer.setStyle(this.el, 'display', 'block');\r\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\r\n    }\r\n  }\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {GridsterComponent} from './gridster.component';\r\nimport {GridsterItemComponent} from './gridsterItem.component';\r\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GridsterComponent,\r\n    GridsterItemComponent,\r\n    GridsterPreviewComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [GridsterComponent, GridsterItemComponent],\r\n  providers: [],\r\n  bootstrap: [],\r\n  entryComponents: [GridsterComponent, GridsterItemComponent]\r\n})\r\nexport class GridsterModule {\r\n}\r\n"]}